[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[1;33m~[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[1;33m~[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m[31m[38;5;34m.[0m[31m[38;5;34m.[0m[31m[38;5;160mx[0m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          

----------------------------------------------------------------

[37;1m42sh/escaping/003-escape-single-character-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055\\\TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055\TOKEN201911282055$`[0m
[38;5;239m  01: TOKEN201911282055\TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055\\\TOKEN201911282055] (1)-18
  03: [] (39)-55[0m

----------------------------------------------------------------

[37;1m42sh/escaping/004-escape-single-character-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055\\\\TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055\\TOKEN201911282055$`[0m
[38;5;239m  01: TOKEN201911282055\\TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055\\\\TOKEN201911282055] (1)-18
  03: [] (39)-56[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/003-it-takes-escaped-bracket-as-pattern-character[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a closing bracket ']' may be escaped in a backet expansion pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' ']'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [abc\]def]
  02: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\]def]
  03: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\]def]
  04: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [abc\\\\\\\]def][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@` 4 times[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@` 4 times[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@b@c@d@e@f@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/001-it-does-not-expand-brackets[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping brackets does not result in an expansion process.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout \[abc] [abc\] \[abc\][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^[[]abc]@[[]abc]@[[]abc]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/bracket-expansion/002-escaped-inversion-mark[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an inversion mark `!` or `^` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '!' '^'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [\!abc]
  02: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [\^abc][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `!@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[\^]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[1;33m  WARNING    might match_regex `^!@a@b@c@$`[0m
[31m[1;33m  WARNING    might match_regex `^[\^]@a@b@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/003-it-expands-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\\{1..2} \\\\{1..2} \\\\\{1..2} \\\\\\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\[{]1..2}@\\1@\\2@\\[{]1..2}@\\\1@\\\2@$`[0m
[38;5;239m  01: \{1..2}@\\{1..2}@\\{1..2}@\\\{1..2}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [\\\{1..2}] (1)-32
  03: [\\\\{1..2}] (1)-42
  04: [\\\\\{1..2}] (1)-53
  05: [\\\\\\{1..2}] (1)-65
  06: [] (39)-77[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that escaping braces does not result in an expansion process.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \{1..2} {1\..2} {1.\.2} {1..2\}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^[{]1..2}@[{]1..2}@[{]1..2}@[{]1..2}@$`[0m
[38;5;239m  01: {1..2}@{1..2}@{1..2}@{1..2}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [\{1..2}] (1)-32
  03: [{1\..2}] (1)-40
  04: [{1.\.2}] (1)-48
  05: [{1..2\}] (1)-56
  06: [] (39)-63[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/globbing/brace-expansion/002-it-expands-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using multiple escape characters `\\` results in a good behavior with the brace expansion.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout \\{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\1@\2@$`[0m
[38;5;239m  01: \{1..2}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [\\{1..2}] (1)-32
  03: [] (39)-40[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/003-escape-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using three backslashes `\\` before the symbol of variable expansion `$` does not result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\$TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_VALUE`[0m
[38;5;239m  01: \$TOKEN201911282055_NAME[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [\\\$TOKEN201911282055_NAME] (1)-18
  03: [] (39)-44[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/002-it-does-not-escape-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol of variable expansion `$` does result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\$TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_NAME`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_VALUE`[0m
[38;5;239m  01: \[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [\\$TOKEN201911282055_NAME] (1)-18
  03: [] (39)-43[0m

----------------------------------------------------------------

[37;1m42sh/escaping/mixed/variable-expansion/001-escape-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` before the symbol of variable expansion `$` does not result in variable expansion.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \$TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_VALUE`[0m
[38;5;239m  01: $TOKEN201911282055_NAME[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [\$TOKEN201911282055_NAME] (1)-18
  03: [] (39)-42[0m

----------------------------------------------------------------

[37;1m42sh/escaping/001-escape-single-character-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055\TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055TOKEN201911282055$`[0m
[38;5;239m  01: TOKEN201911282055TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055\TOKEN201911282055] (1)-18
  03: [] (39)-53[0m

----------------------------------------------------------------

[37;1m42sh/escaping/005-escape-single-character-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TEST4\041TEST[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TEST4041TEST$`[0m
[38;5;239m  01: TEST4041TEST[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TEST4\041TEST] (1)-18
  03: [] (39)-31[0m

----------------------------------------------------------------

[37;1m42sh/escaping/002-escape-single-character-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a backslash `\\` outside enclosing characters double-quote `"` or signle-quote `'` results in a preserved following character.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055\\TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055\TOKEN201911282055$`[0m
[38;5;239m  01: TOKEN201911282055\TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055\\TOKEN201911282055] (1)-18
  03: [] (39)-54[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/001-simple-opposit-match[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' '1' 'Z' 'd' 'e' 'f' 'def'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [!a1Z]
  02: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [^a1Z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def@`[0m
[31m[1;33m  WARNING    might match_regex `^d@e@f@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/not/002-simple-opposite-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the inversion mark `!` or `^`. The expected behavior is the reversion of the following pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'z' '1' '2' '3' '42'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [!a-z]
  02: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [^a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `42@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@3@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/003-opening-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' '[[]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/002-closing-bracket-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch ']' '[]]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout []][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]]]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/single-char-pattern/001-single-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a single character as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' '[a]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [a][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/003-reverse-multi-hard[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check how the value inside multiple brackets are parsed with bracket as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '][' 'a[' '1['[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [!]az][[]
  02: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [^]az][[][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `][[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]@`[0m
[31m[1;33m  WARNING    might match_regex `^1[[]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/004-simple-bracket+char+range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to control if 2 patterns splited by a minus characters can be match.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a-0' 'a-1' 'a-2' 'b-0' 'b-1' 'b-2' 'Z-0' 'Z-1' 'Z-2' 'a1' 'Z9' 'D4'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [aZ]-[1-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a-2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-0@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `b-2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `D4@`[0m
[31m[1;33m  WARNING    might match_regex `^Z-1@Z-2@a-1@a-2@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/002-reverse-range-and-chars[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with 2 patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a4' 'a3' 'a2' 'a42' 'a[42]' 'z4' 'z3' 'z2' 'z42' 'z[42]' '42'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [!a-y][42]
  02: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [^a-y][42][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `42@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `z[[]42]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a42@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a[[]42]@`[0m
[31m[1;33m  WARNING    might match_regex `^42@z2@z4@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/multi/001-range-and-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brackets expansion works with a range and 2 characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '1' '2' '3' 'a' 'b' 'z' 'C' '-' '[a-z-2]' 'a-z-2'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [a-z-2][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `-@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `3@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a-z-2@`[0m
[31m[1;33m  WARNING    might match_regex `^-@2@a@b@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/002-multi-bracket[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with multiple brackets patterns.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch "TOKEN201911282055abcd" "TOKEN201911282055abc" "TOKEN201911282055abdc" "TOKEN201911282055b" "TOKEN201911282055" "TOKEN201911282055\[a]b\[c]\[d]"[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout TOKEN201911282055[a]b[c][d][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055abcd@$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055abc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055abdc@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055b@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055[[]a]b[[]c][[]d]@`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/001-simple-list[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with a simple list of characters as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' '[bca]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [bca][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `d@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `e@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `f@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]bca]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@b@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/003-brackets-as-pattern[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with an opening bracket `[` and a closing bracket `]` as pattern.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '[' ']' 'a' 'Z' '[][]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [][][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]][[]]@`[0m
[31m[1;33m  WARNING    might match_regex `^[[]@]@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/simple-pattern/004-multi-bracket-multi-char[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to match a file name which contain a bracket as first character.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 21 23 24 25 26 27 28 29 ']' '[' '[12][34]' '1234'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [12][34][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `13@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `14@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `23@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `24@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `0[0-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[0-2]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2[5-9]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]12][[]34]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1234@`[0m
[31m[1;33m  WARNING    might match_regex `^13@14@23@24@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/004-ascii-range-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[1-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' ']' '[' '[1-z]' '1-z' '-'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [1-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `B@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `Z@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `-@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1-z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]1-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^2@B@Z@[[]@]@a@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/003-ascii-range-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the bracket expansion works with the following pattern []-z].
  One test use the following range which is the default range for bash:
  < > , ; : ! ' " ( ) [ ] { } @ $ \ # % 1 2 3 4 5 6 7 8 9 a A b B c C d D e E f F g G h H i I j J k K l L m M n N o O p P q Q r R s S t T u U v V w W x X y Y z
  The other use the ascii value, which does make more sense.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '2' 'a' 'B' 'c' 'Z' '[' ']' '[]-z]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout []-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `2@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `B@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `Z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]]-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^]@a@c@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/002-numeric-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[0-9]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch '4' '2' '1' '9' 'a' 'C' '[0-9]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [0-9][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `2@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `4@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `9@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `a@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `C@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]0-9]@`[0m
[31m[1;33m  WARNING    might match_regex `^1@2@4@9@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/bracket-expansion/range-pattern/001-alpha-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brackets expansion works with the following pattern `[a-z]`.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'f' 'z' 'A' '1' '[a-z]'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [a-z][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `z@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `A@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `1@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a-z]@`[0m
[31m[1;33m  WARNING    might match_regex `^a@f@z@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/014-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{1..2}abc{-50..-53}def{0..0}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2019112820551abc-50def0@TOKEN2019112820551abc-51def0@TOKEN2019112820551abc-52def0@TOKEN2019112820551abc-53def0@TOKEN2019112820552abc-50def0@TOKEN2019112820552abc-51def0@TOKEN2019112820552abc-52def0@TOKEN2019112820552abc-53def0@$`[0m
[38;5;239m  01: TOKEN201911282055{1..2}abc{-50..-53}def{0..0}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{1..2}abc{-50..-53}def{0..0}] (1)-32
  03: [] (39)-77[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/010-simple-descending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-98..-100}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-98TOKEN201911282055@-99TOKEN201911282055@-100TOKEN201911282055@$`[0m
[38;5;239m  01: {-98..-100}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{-98..-100}TOKEN201911282055] (1)-32
  03: [] (39)-60[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/009-simple-descending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {0..-5}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^0TOKEN201911282055@-1TOKEN201911282055@-2TOKEN201911282055@-3TOKEN201911282055@-4TOKEN201911282055@-5TOKEN201911282055@$`[0m
[38;5;239m  01: {0..-5}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{0..-5}TOKEN201911282055] (1)-32
  03: [] (39)-56[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/004-simple-ascending-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-5..0}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-5TOKEN201911282055@-4TOKEN201911282055@-3TOKEN201911282055@-2TOKEN201911282055@-1TOKEN201911282055@0TOKEN201911282055@$`[0m
[38;5;239m  01: {-5..0}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{-5..0}TOKEN201911282055] (1)-32
  03: [] (39)-56[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/008-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{5..+1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2019112820555@TOKEN2019112820554@TOKEN2019112820553@TOKEN2019112820552@TOKEN2019112820551@$`[0m
[38;5;239m  01: TOKEN201911282055{5..+1}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{5..+1}] (1)-32
  03: [] (39)-56[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/007-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{5..1}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2019112820555TOKEN201911282055@TOKEN2019112820554TOKEN201911282055@TOKEN2019112820553TOKEN201911282055@TOKEN2019112820552TOKEN201911282055@TOKEN2019112820551TOKEN201911282055@$`[0m
[38;5;239m  01: TOKEN201911282055{5..1}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{5..1}TOKEN201911282055] (1)-32
  03: [] (39)-72[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{1..5}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2019112820551TOKEN201911282055@TOKEN2019112820552TOKEN201911282055@TOKEN2019112820553TOKEN201911282055@TOKEN2019112820554TOKEN201911282055@TOKEN2019112820555TOKEN201911282055@$`[0m
[38;5;239m  01: TOKEN201911282055{1..5}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{1..5}TOKEN201911282055] (1)-32
  03: [] (39)-72[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/011-identical-positive-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {42..42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42@$`[0m
[38;5;239m  01: {42..42}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{42..42}] (1)-32
  03: [] (39)-40[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/015-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..100}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100@-99@-98@-97@-96@-95@-94@-93@-92@-91@-90@-89@-88@-87@-86@-85@-84@-83@-82@-81@-80@-79@-78@-77@-76@-75@-74@-73@-72@-71@-70@-69@-68@-67@-66@-65@-64@-63@-62@-61@-60@-59@-58@-57@-56@-55@-54@-53@-52@-51@-50@-49@-48@-47@-46@-45@-44@-43@-42@-41@-40@-39@-38@-37@-36@-35@-34@-33@-32@-31@-30@-29@-28@-27@-26@-25@-24@-23@-22@-21@-20@-19@-18@-17@-16@-15@-14@-13@-12@-11@-10@-9@-8@-7@-6@-5@-4@-3@-2@-1@0@1@2@3@4@5@6@7@8@9@10@11@12@13@14@15@16@17@18@19@20@21@22@23@24@25@26@27@28@29@30@31@32@33@34@35@36@37@38@39@40@41@42@43@44@45@46@47@48@49@50@51@52@53@54@55@56@57@58@59@60@61@62@63@64@65@66@67@68@69@70@71@72@73@74@75@76@77@78@79@80@81@82@83@84@85@86@87@88@89@90@91@92@93@94@95@96@97@98@99@100@$`[0m
[38;5;239m  01: {-100..100}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{-100..100}] (1)-32
  03: [] (39)-43[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/012-identical-negative-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-42..-42}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-42@$`[0m
[38;5;239m  01: {-42..-42}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{-42..-42}] (1)-32
  03: [] (39)-42[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{1..+5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN2019112820551@TOKEN2019112820552@TOKEN2019112820553@TOKEN2019112820554@TOKEN2019112820555@$`[0m
[38;5;239m  01: TOKEN201911282055{1..+5}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{1..+5}] (1)-32
  03: [] (39)-56[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/006-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {5..1}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^5@4@3@2@1@$`[0m
[38;5;239m  01: {5..1}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{5..1}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/005-simple-ascending-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {-100..-98}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^-100TOKEN201911282055@-99TOKEN201911282055@-98TOKEN201911282055@$`[0m
[38;5;239m  01: {-100..-98}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{-100..-98}TOKEN201911282055] (1)-32
  03: [] (39)-60[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a numeric range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..5}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^1@2@3@4@5@$`[0m
[38;5;239m  01: {1..5}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{1..5}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/numeric-range/013-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}{3..4}{5..6}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^135@136@145@146@235@236@245@246@$`[0m
[38;5;239m  01: {1..2}{3..4}{5..6}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{1..2}{3..4}{5..6}] (1)-32
  03: [] (39)-50[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/007-identical-start-and-end[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with a range of single ASCII value.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {f..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^f@$`[0m
[38;5;239m  01: {f..f}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{f..f}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/005-simple-descending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{E..A}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055ETOKEN201911282055@TOKEN201911282055DTOKEN201911282055@TOKEN201911282055CTOKEN201911282055@TOKEN201911282055BTOKEN201911282055@TOKEN201911282055ATOKEN201911282055@$`[0m
[38;5;239m  01: TOKEN201911282055{E..A}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{E..A}TOKEN201911282055] (1)-32
  03: [] (39)-72[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/002-simple-ascending-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{a..e}TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055aTOKEN201911282055@TOKEN201911282055bTOKEN201911282055@TOKEN201911282055cTOKEN201911282055@TOKEN201911282055dTOKEN201911282055@TOKEN201911282055eTOKEN201911282055@$`[0m
[38;5;239m  01: TOKEN201911282055{a..e}TOKEN201911282055@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{a..e}TOKEN201911282055] (1)-32
  03: [] (39)-72[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/006-simple-descending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{e..a}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055e@TOKEN201911282055d@TOKEN201911282055c@TOKEN201911282055b@TOKEN201911282055a@$`[0m
[38;5;239m  01: TOKEN201911282055{e..a}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{e..a}] (1)-32
  03: [] (39)-55[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/010-big-range[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with a big numeric range.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..z}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@F@G@H@I@J@K@L@M@N@O@P@Q@R@S@T@U@V@W@X@Y@Z@.+@.?@.+@.+@_@.+@a@b@c@d@e@f@g@h@i@j@k@l@m@n@o@p@q@r@s@t@u@v@w@x@y@z@$`[0m
[38;5;239m  01: {A..z}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{A..z}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/008-multiple-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..b}{c..d}{e..f}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^ace@acf@ade@adf@bce@bcf@bde@bdf@$`[0m
[38;5;239m  01: {a..b}{c..d}{e..f}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{a..b}{c..d}{e..f}] (1)-32
  03: [] (39)-50[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/003-simple-ascending-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {A..E}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^A@B@C@D@E@$`[0m
[38;5;239m  01: {A..E}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{A..E}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/009-multiple-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion may be performed with multiple brace patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout TOKEN201911282055{a..b}abc{Z..X}def{s..s}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055aabcZdefs@TOKEN201911282055aabcYdefs@TOKEN201911282055aabcXdefs@TOKEN201911282055babcZdefs@TOKEN201911282055babcYdefs@TOKEN201911282055babcXdefs@$`[0m
[38;5;239m  01: TOKEN201911282055{a..b}abc{Z..X}def{s..s}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [TOKEN201911282055{a..b}abc{Z..X}def{s..s}] (1)-32
  03: [] (39)-73[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/004-simple-descending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in descending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {E..A}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^E@D@C@B@A@$`[0m
[38;5;239m  01: {E..A}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{E..A}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/ascii-range/001-simple-ascending-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the brace expansion does work with an ASCII range in ascending order.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {a..e}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@b@c@d@e@$`[0m
[38;5;239m  01: {a..e}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{a..e}] (1)-32
  03: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/002-invalid-pattern-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {B..}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^{B..}$`[0m
[38;5;239m  01: {B..}[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [{B..}] (1)-18
  03: [] (39)-23[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/003-invalid-pattern-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {..C}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^{..C}$`[0m
[38;5;239m  01: {..C}[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [{..C}] (1)-18
  03: [] (39)-23[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/004-invalid-pattern-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {Q..C..1}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^{Q..C..1}$`[0m
[38;5;239m  01: {Q..C..1}[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [{Q..C..1}] (1)-18
  03: [] (39)-27[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/errors/001-invalid-pattern-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that invalid braces expansion patterns does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {A}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^{A}$`[0m
[38;5;239m  01: {A}[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [{A}] (1)-18
  03: [] (39)-21[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/002-simple-test-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed when at least one comma `,` is encountered.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201911282055_A,TOKEN201911282055_B}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_A@TOKEN201911282055_B@$`[0m
[38;5;239m  01: {TOKEN201911282055_A,TOKEN201911282055_B}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{TOKEN201911282055_A,TOKEN201911282055_B}] (1)-32
  03: [] (39)-73[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/001-nothing-to-be-done[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is not processed when neither range `..` nor comma `,` tokens is specified.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout {TOKEN201911282055}[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `{TOKEN201911282055}`[0m
[38;5;239m  01: {TOKEN201911282055}[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [{TOKEN201911282055}] (1)-18
  03: [] (39)-37[0m

----------------------------------------------------------------

[37;1m42sh/globbing/brace-expansion/list-of-values/003-simple-test-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that brace expansion is processed with a list of three patterns.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {TOKEN201911282055_A,TOKEN201911282055_B,TOKEN201911282055_C}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_A@TOKEN201911282055_B@TOKEN201911282055_C@$`[0m
[38;5;239m  01: {TOKEN201911282055_A,TOKEN201911282055_B,TOKEN201911282055_C}@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{TOKEN201911282055_A,TOKEN201911282055_B,TOKEN201911282055_C}] (1)-32
  03: [] (39)-93[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/004-export-n-param[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that using the builtin `export` with option `-n` results in a removed environment variable.[0m

  Before test:
[38;5;239m  01: export TOKEN201911282055_NAME=TOKEN201911282055_VALUE[0m

  STDIN:
[38;5;239m  01: export -n TOKEN201911282055_NAME
  02: export
  03: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_NAME`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"
  04: ------------------------------
  05: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  06: SHLVL=1
  07: ------------------------------
  08: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [-n] (1)-7
  03: [TOKEN201911282055_NAME] (1)-10
  04: [] (39)-32
  05: [export] (1)-33
  06: [] (39)-39
  07: [./display_env] (1)-40
  08: [] (39)-53
  09: export: -n: not a valid identifier[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/001-export-with-only-p-parameter[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with the option `-p` results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [-p] (1)-7
  03: [] (39)-9[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/002-export-p-param-and-token-should-add-local-var-only-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if export with -p option + token , add the variable into export list but not in env list. And don't display the export variable on stdout.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201911282055_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201911282055_NAME
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_NAME`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [-p] (1)-7
  03: [TOKEN201911282055_NAME] (1)-10
  04: [] (39)-32
  05: [export] (1)-33
  06: [] (39)-39
  07: export: -p: not a valid identifier[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/options/003-export-p-param-and-token-should-add-local-var-only-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` with option `-p` results in an added variable into the export list but not from the environment.[0m

  Before test:
[38;5;239m  01: rm -f "./stored_env"
  02: unset "TOKEN201911282055_NAME"
  03: export | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export -p TOKEN201911282055_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_each_regex_of_file `./stored_env`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_NAME`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [-p] (1)-7
  03: [TOKEN201911282055_NAME] (1)-10
  04: [] (39)-32
  05: [./display_env] (1)-33
  06: [] (39)-46
  07: export: -p: not a valid identifier[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/001-display-env[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` without parameters results at least in a display of the environment variables.[0m

  Before test:
[38;5;239m  01: rm -rf "./stored_env"
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [] (39)-6[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/006-export-update-env-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting the same variable twice in a row does result in an updated variable, but not in a duplicated variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055_NAME=TOKEN201911282055_VALUE1
  02: export TOKEN201911282055_NAME=TOKEN201911282055_VALUE2
  03: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_NAME=TOKEN201911282055_VALUE1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME=TOKEN201911282055_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: TOKEN201911282055_NAME=TOKEN201911282055_VALUE2
  05: ------------------------------
  06: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE1] (1)-7
  03: [] (39)-54
  04: [export] (1)-55
  05: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE2] (1)-62
  06: [] (39)-109
  07: [./display_env] (1)-110
  08: [] (39)-123[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/003-export-basic-key-value-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable and is able to display it later.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055_NAME=TOKEN201911282055_VALUE
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME=["]?TOKEN201911282055_VALUE["]?$`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"
  04: export TOKEN201911282055_NAME="TOKEN201911282055_VALUE"[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-7
  03: [] (39)-53
  04: [export] (1)-54
  05: [] (39)-60[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/008-local-to-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a declared local variable may be exported to the environment with the builtin `export`.[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_VALUE
  02: export TOKEN201911282055_NAME
  03: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-0
  02: [] (39)-46
  03: [export] (1)-47
  04: [TOKEN201911282055_NAME] (1)-54
  05: [] (39)-76
  06: [./display_env] (1)-77
  07: [] (39)-90[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/002-export-and-tmp-env-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_VALUE export TOKEN201911282055_NAME
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_NAME=TOKEN201911282055_VALUE`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2
  06: assigns: TOKEN201911282055_NAME TOKEN201911282055_VALUE[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-0
  02: [export] (1)-47
  03: [TOKEN201911282055_NAME] (1)-54
  04: [] (39)-76
  05: [./display_env] (1)-77
  06: [] (39)-90[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/mixed/001-export-and-tmp-env-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check that modifying the environment for the builtin `export` results in an added variable into the exported list.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_NAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_VALUE export TOKEN201911282055_NAME
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_NAME=["]?TOKEN201911282055_VALUE["]?`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"
  04: assigns: TOKEN201911282055_NAME TOKEN201911282055_VALUE[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-0
  02: [export] (1)-47
  03: [TOKEN201911282055_NAME] (1)-54
  04: [] (39)-76
  05: [export] (1)-77
  06: [] (39)-83[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/010-export-with-equal-but-no-value-part2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the local variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055_NAME=
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME=`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"
  04: export TOKEN201911282055_NAME=""[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055_NAME=] (1)-7
  03: [] (39)-30
  04: [export] (1)-31
  05: [] (39)-37[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/009-export-with-equal-but-no-value-part1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if the builtin export works fine with equal sign but no value. This test is based on the environment variables return.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_NAME=`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: TOKEN201911282055_NAME=
  05: ------------------------------
  06: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055_NAME=] (1)-7
  03: [] (39)-30
  04: [./display_env] (1)-31
  05: [] (39)-44[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/001-invalid-identifier-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export 42=TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: [export] (1)-0
  02: [42=TOKEN201911282055] (1)-7
  03: [] (39)-27
  04: export: 42=TOKEN201911282055: not a valid identifier[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/003-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `export` with an illegal option results in an error and a failure exit status.[0m

  STDIN:
[38;5;239m  01: export -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: [export] (1)-0
  02: [-w] (1)-7
  03: [] (39)-9
  04: export: -w: not a valid identifier[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/errors/002-invalid-identifier-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to export an invalid variable identifier results in error.[0m

  STDIN:
[38;5;239m  01: export .=TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `(not.*identifier|must begin.*letter)`[0m
[38;5;239m  01: [export] (1)-0
  02: [.=TOKEN201911282055] (1)-7
  03: [] (39)-26
  04: export: .=TOKEN201911282055: not a valid identifier[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/005-export-empty-variable-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment, but can be displayed with the builtin `export`.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055
  02: export[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"
  04: export TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055] (1)-7
  03: [] (39)-24
  04: [export] (1)-25
  05: [] (39)-31[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/007-existing-environment-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an existing variable results in an updated variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE1"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055_NAME=TOKEN201911282055_VALUE2
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_NAME=TOKEN201911282055_VALUE1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME=TOKEN201911282055_VALUE2`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: TOKEN201911282055_NAME=TOKEN201911282055_VALUE2
  05: ------------------------------
  06: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE2] (1)-7
  03: [] (39)-54
  04: [./display_env] (1)-55
  05: [] (39)-68[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/004-export-empty-variable-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that exporting an empty variable does not add it to the environment.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055] (1)-7
  03: [] (39)-24
  04: [./display_env] (1)-25
  05: [] (39)-38[0m

----------------------------------------------------------------

[37;1m42sh/builtins/export/002-export-basic-key-value-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `export` may declare a new environment variable.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_NAME"[0m

  STDIN:
[38;5;239m  01: export TOKEN201911282055_NAME=TOKEN201911282055_VALUE
  02: ./display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: TOKEN201911282055_NAME=TOKEN201911282055_VALUE
  05: ------------------------------
  06: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [export] (1)-0
  02: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-7
  03: [] (39)-53
  04: [./display_env] (1)-54
  05: [] (39)-67[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout [""'a'""][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/globbing/brace-expansion/001-it-does-not-expand-braces-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: {1..2}{1..2}{1..2}{1..2}{1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ["{1..2}"{1..2}'{1..2}'{1..2}"{1..2}"{1..2}] (1)-32
  03: [] (39)-74[0m

----------------------------------------------------------------

[37;1m42sh/quoting/mixed/variable-expansion/001-it-does-not-expand-in-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m   The purpose of this test is to check if a local variable is display correctly inside simple and double quote.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN201911282055_NAME"$TOKEN201911282055_NAME'$TOKEN201911282055_NAME'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_VALUETOKEN201911282055_VALUE[$]TOKEN201911282055_NAME`[0m
[38;5;239m  01: '[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ["$TOKEN201911282055_NAME"$TOKEN201911282055_NAME'$TOKEN201911282055_NAME'] (1)-18
  03: [] (39)-91[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/001-it-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol simple quote `'` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout 'SIMPLE TEXT WITH SPACES'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  01: SIMPLE TEXT WITH SPACES[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ['SIMPLE TEXT WITH SPACES'] (1)-18
  03: [] (39)-43[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A'B'CDEF'GHIJ''KLMNO' 'P'QRS'T''U''V'WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: ABCDEFGHIJ'KLMNO[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [A'B'CDEF'GHIJ''KLMNO'] (1)-29
  03: ['P'QRS'T''U''V'WXYZ] (1)-51
  04: [] (39)-70
  05: PQRST'UVWXYZ[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/003-escape-simple-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '\'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^\$`[0m
[38;5;239m  01: lala[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/001-escape-simple-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a simple-quote `'` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055\'TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055'TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055'TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055\'TOKEN201911282055] (1)-18
  03: [] (39)-54[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/escaping/005-it-does-not-escape-simple-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol simple-quote `'` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\'TOKEN201911282055\\'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^\TOKEN201911282055\\$`[0m
[38;5;239m  01: \TOKEN201911282055\\[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [\\'TOKEN201911282055\\'] (1)-18
  03: [] (39)-41[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout ['a'bc'def'gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout ['a'][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: {1..2}{1..2}{1..2}{1..2}{1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ['{1..2}'{1..2}'{1..2}'{1..2}'{1..2}'{1..2}] (1)-32
  03: [] (39)-74[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}' {1..2} '{1..2}' '{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: {1..2}@{1..2}@{1..2}@{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ['{1..2}'] (1)-32
  03: [{1..2}] (1)-41
  04: ['{1..2}'] (1)-48
  05: ['{1..2}'] (1)-57
  06: [] (39)-65[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout '{1..2}'{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: {1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ['{1..2}'{1..2}] (1)-32
  03: [] (39)-46[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}'{1..2}'[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: {1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{1..2}'{1..2}'] (1)-32
  03: [] (39)-46[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/mixed/variable-expansion/001-expansion-disabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is not processed within simple quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '[$]TOKEN201911282055_NAME'[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_NAME`[0m
[38;5;239m  01: [$]TOKEN201911282055_NAME[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ['[$]TOKEN201911282055_NAME'] (1)-18
  03: [] (39)-45[0m

----------------------------------------------------------------

[37;1m42sh/quoting/simple-quotes/004-multiline-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout '
  02: TOKEN201911282055_FIRST
  03: TOKEN201911282055_SECOND
  04: TOKEN201911282055_THIRD
  05: '[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_FIRST$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_SECOND$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_THIRD$`[0m
[38;5;239m  01: 
  02: TOKEN201911282055_FIRST
  03: TOKEN201911282055_SECOND
  04: TOKEN201911282055_THIRD
  05: [0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ['
  03: TOKEN201911282055_FIRST
  04: TOKEN201911282055_SECOND
  05: TOKEN201911282055_THIRD
  06: '] (1)-18
  07: [] (39)-94[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/001-it-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the symbol double quote `"` does not result in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "SIMPLE TEXT WITH SPACES"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `SIMPLE TEXT WITH SPACES`[0m
[38;5;239m  01: SIMPLE TEXT WITH SPACES[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ["SIMPLE TEXT WITH SPACES"] (1)-18
  03: [] (39)-43[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/002-concatenated-strings[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a mixed argument with multiple inhibited parts is considered as a single argument.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr A"B"CDEF"GHIJ""KLMNO" "P"QRS"T""U""V"WXYZ[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `ABCDEFGHIJKLMNO`[0m
[38;5;239m  01: ABCDEFGHIJ"KLMNO[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `PQRSTUVWXYZ`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [A"B"CDEF"GHIJ""KLMNO"] (1)-29
  03: ["P"QRS"T""U""V"WXYZ] (1)-51
  04: [] (39)-70
  05: PQRST"UVWXYZ[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/005-it-does-not-escape-double-quote[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using two backslashes `\\` before the symbol double-quote `"` does not result in escaped inhibitors.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\"TOKEN201911282055\\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^\TOKEN201911282055\$`[0m
[38;5;239m  01: \TOKEN201911282055\[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [\\"TOKEN201911282055\\"] (1)-18
  03: [] (39)-41[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/004-it-results-in-error[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using backslash `\\` before the closing double-quote `"` does result in syntax error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201911282055\"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201911282055$`[0m
[38;5;239m  01: lala[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/003-escape-double-quote-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "\""[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^"$`[0m
[38;5;239m  01: "[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ["\""] (1)-18
  03: [] (39)-22[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/002-escape-double-quote-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "TOKEN201911282055 \" TOKEN201911282055"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055 ` TOKEN201911282055$`[0m
[38;5;239m  01: TOKEN201911282055 " TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ["TOKEN201911282055 \" TOKEN201911282055"] (1)-18
  03: [] (39)-58[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/escaping/001-escape-double-quote-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a double-quote `"` may be preserved when it is preceded by a backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055\"TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055"TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055"TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055\"TOKEN201911282055] (1)-18
  03: [] (39)-54[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/002-it-works-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout ["a"bc"def"gh][0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `a@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `b@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `c@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `d@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `e@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `f@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `g@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `h@`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `bc`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `def`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `gh`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/bracket-expansion/001-it-works-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an argument made with quoted and unquoted parts results in bracket pattern expansion.[0m

  Before test:
[38;5;239m  01: rm -rf "./test_globbing"
  02: mkdir "./test_globbing"
  03: cd "./test_globbing"
  04: touch 'a'[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_all_arguments_on_stdout ["a"][0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `[[]a]@`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^a@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/004-it-does-not-expand-braces-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1[{]1..2}1[{]1..2}1@[{]1..2}1[{]1..2}1[{]1..2}2@[{]1..2}1[{]1..2}2[{]1..2}1@[{]1..2}1[{]1..2}2[{]1..2}2@[{]1..2}2[{]1..2}1[{]1..2}1@[{]1..2}2[{]1..2}1[{]1..2}2@[{]1..2}2[{]1..2}2[{]1..2}1@[{]1..2}2[{]1..2}2[{]1..2}2@`[0m
[38;5;239m  01: {1..2}{1..2}{1..2}{1..2}{1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ["{1..2}"{1..2}"{1..2}"{1..2}"{1..2}"{1..2}] (1)-32
  03: [] (39)-74[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/005-it-does-not-expand-braces-5[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}" {1..2} "{1..2}" "{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}@1@2@[{]1..2}@[{]1..2}@`[0m
[38;5;239m  01: {1..2}@{1..2}@{1..2}@{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ["{1..2}"] (1)-32
  03: [{1..2}] (1)-41
  04: ["{1..2}"] (1)-48
  05: ["{1..2}"] (1)-57
  06: [] (39)-65[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/003-it-does-not-expand-braces-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout "{1..2}"{1..2}[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `[{]1..2}1@[{]1..2}2@`[0m
[38;5;239m  01: {1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: ["{1..2}"{1..2}] (1)-32
  03: [] (39)-46[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/globbing/brace-expansion/002-it-does-not-expand-braces-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that braces expansion is not processed within quoted part of the command line.[0m

  STDIN:
[38;5;239m  01: ./write_all_arguments_on_stdout {1..2}"{1..2}"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `1[{]1..2}@2[{]1..2}@`[0m
[38;5;239m  01: {1..2}{1..2}@[0m

  STDERR:
[38;5;239m  01: [./write_all_arguments_on_stdout] (1)-0
  02: [{1..2}"{1..2}"] (1)-32
  03: [] (39)-46[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/mixed/variable-expansion/001-expansion-enabled[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion is processed within double quotes.[0m

  Before test:
[38;5;239m  01: export "TOKEN=TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "$TOKEN"[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: [0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ["$TOKEN"] (1)-18
  03: [] (39)-26[0m

----------------------------------------------------------------

[37;1m42sh/quoting/double-quotes/004-multiline-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that closing double quote may be done on a different line.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout "
  02: TOKEN201911282055_FIRST
  03: TOKEN201911282055_SECOND
  04: TOKEN201911282055_THIRD
  05: "[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_FIRST$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_SECOND$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055_THIRD$`[0m
[38;5;239m  01: 
  02: TOKEN201911282055_FIRST
  03: TOKEN201911282055_SECOND
  04: TOKEN201911282055_THIRD
  05: [0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: ["
  03: TOKEN201911282055_FIRST
  04: TOKEN201911282055_SECOND
  05: TOKEN201911282055_THIRD
  06: "] (1)-18
  07: [] (39)-94[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/003-unknown-variable-does-not-result-in-new-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an unknown variable is not expanded as an empty string and results in any new argument in the command line.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_UNKNOWN"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201911282055_UNKNOWN TOKEN201911282055_DISPLAYED[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_DISPLAYED`[0m
[38;5;239m  01: write on stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [$TOKEN201911282055_UNKNOWN] (1)-18
  03: [TOKEN201911282055_DISPLAYED] (1)-45
  04: [] (39)-72[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/003-reading[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201911282055_FILENAME"
  02: echo "TOKEN201911282055_VALUE" > "TOKEN201911282055_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_FILENAME
  02: ./read_on_stdin < $TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VALUE@$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_FILENAME] (1)-0
  02: [] (39)-49
  03: [./read_on_stdin] (1)-50
  04: [] (3)-66
  05: |      [$TOKEN201911282055_NAME] (1)-68
  06: [] (39)-91[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/001-truncating[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201911282055_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_FILENAME
  02: ./write_on_stdout TOKEN201911282055_VALUE > $TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_FILENAME] (1)-0
  02: [] (39)-49
  03: [./write_on_stdout] (1)-50
  04: [TOKEN201911282055_VALUE] (1)-68
  05: [] (4)-92
  06: |      [$TOKEN201911282055_NAME] (1)-94
  07: [] (39)-117[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201911282055_FILENAME` matching_regex `^TOKEN201911282055_VALUE$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/redirections/002-appending[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a redirection can be set with a local variable as file name.[0m

  Before test:
[38;5;239m  01: rm -f "TOKEN201911282055_FILENAME"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_FILENAME
  02: ./write_on_stdout TOKEN201911282055_VALUE1 >> $TOKEN201911282055_NAME
  03: ./write_on_stdout TOKEN201911282055_VALUE2 >> $TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_FILENAME] (1)-0
  02: [] (39)-49
  03: [./write_on_stdout] (1)-50
  04: [TOKEN201911282055_VALUE1] (1)-68
  05: [] (12)-93
  06: |      [$TOKEN201911282055_NAME] (1)-96
  07: [] (39)-119
  08: [./write_on_stdout] (1)-120
  09: [TOKEN201911282055_VALUE2] (1)-138
  10: [] (12)-163
  11: |      [$TOKEN201911282055_NAME] (1)-166
  12: [] (39)-189[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201911282055_FILENAME` matching_regex `^TOKEN201911282055_VALUE1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `TOKEN201911282055_FILENAME` matching_regex `^TOKEN201911282055_VALUE2$`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/inline-environment-variable/001-local-variable-shouldnt-be-set[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary does not result in local variable declaration but a modified environment for the command.[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_VALUE ./display_env
  02: ./write_on_stderr $TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2
  06: assigns: TOKEN201911282055_NAME TOKEN201911282055_VALUE[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_VALUE`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-0
  02: [./display_env] (1)-47
  03: [] (39)-60
  04: [./write_on_stderr] (1)-61
  05: [$TOKEN201911282055] (1)-79
  06: [] (39)-97
  07: [0m

----------------------------------------------------------------

[37;1m42sh/local-variable/mixed/tilde-expansion/001-process-tilde-expansion[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tilde expansion `~` in variable declaration.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055=~
  02: ./write_on_stdout TILDE:$TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TILDE:~`[0m
[31m[1;33m  WARNING    might match_regex `TILDE:/TOKEN201911282055`[0m
[38;5;239m  01: TILDE:~[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055=~] (1)-0
  02: [] (39)-19
  03: [./write_on_stdout] (1)-20
  04: [TILDE:$TOKEN201911282055] (1)-38
  05: [] (39)-62[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/009-last-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the special variable `$?` may be expanded with the last exit status.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: ./write_on_stderr $?[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `^42$`[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (39)-21
  04: [./write_on_stderr] (1)-22
  05: [$?] (1)-40
  06: [] (39)-42
  07: [0m

----------------------------------------------------------------

[37;1m42sh/local-variable/005-existing-variable-in-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_NAME=$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE$`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=] (1)-0
  02: [] (39)-23
  03: [./display_env] (1)-24
  04: [] (39)-37[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/004-existing-variable-in-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is initialize a local variable named as an environment variable and check if it's update the existing environment variable.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE_OLD"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_VALUE_NEW
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE_NEW$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE_OLD$`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE_NEW] (1)-0
  02: [] (39)-50
  03: [./display_env] (1)-51
  04: [] (39)-64[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/006-existing-variable-in-environment-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that variable expansion takes the environment variables into account.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout $TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VALUE$`[0m
[38;5;239m  01: [0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [$TOKEN201911282055_NAME] (1)-18
  03: [] (39)-41[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/008-multiple-declaration-with-same-name[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring the same variable several times in the same command line does work and does not result in error.[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=TOKEN201911282055_VALUE1 TOKEN201911282055_NAME=TOKEN201911282055_VALUE2 TOKEN201911282055_NAME=TOKEN201911282055_VALUE3
  02: ./write_on_stdout $TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `^TOKEN201911282055_VALUE1$`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `^TOKEN201911282055_VALUE2$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VALUE3$`[0m
[38;5;239m  01: TOKEN201911282055_VALUE1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE1] (1)-0
  02: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE2] (1)-48
  03: [TOKEN201911282055_NAME=TOKEN201911282055_VALUE3] (1)-96
  04: [] (39)-143
  05: [./write_on_stdout] (1)-144
  06: [$TOKEN201911282055_NAME] (1)-162
  07: [] (39)-185[0m

----------------------------------------------------------------

[37;1m42sh/local-variable/002-declare-and-expand-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that an empty variable is not expanded as an empty string and results in any new argument in the command line.[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_NAME=
  02: ./write_on_stdout_and_stderr $TOKEN201911282055_NAME $TOKEN201911282055_NAME[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stdout`[0m
[38;5;239m  01: [0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `write on stderr`[0m
[38;5;239m  01: [TOKEN201911282055_NAME=] (1)-0
  02: [] (39)-23
  03: [./write_on_stdout_and_stderr] (1)-24
  04: [$TOKEN201911282055_NAME] (1)-53
  05: [$TOKEN201911282055_NAME] (1)-77
  06: [] (39)-100
  07: [0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/escaping/002-escaped-subshell-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the tokens parentheses `(` and `)` for subshell generation may be escaped with backslash `\\`.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout \\\(TOKEN201911282055_STDOUT\\\)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `\(TOKEN201911282055_STDOUT\)`[0m
[38;5;239m  01: \(TOKEN201911282055_STDOUT\)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [\\\(TOKEN201911282055_STDOUT\\\)] (1)-18
  03: [] (39)-50[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/001-subshells-inside-piped-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that subshells may be executed inside a piped command.[0m

  STDIN:
[38;5;239m  01: (cd / ; /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd) | (./read_on_stdin) | (./read_on_stdin)
  02: ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/Jerry/Desktop/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: cd: can't access: @@
  02: [65491] pipe [4 5]
  03: [65491] pipe [6 7]
  04: [65491] pipe [4 5]
  05: [65491] pipe [6 7]
  06: [65491] pipe [4 5]
  07: [65491] pipe [6 7]
  08: [65491] pipe [4 5]
  09: [65491] pipe [6 7]
  10: [65491] pipe [4 5]
  11: [65491] pipe [6 7][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [cd] (1)-1
  03: |      [/] (1)-4
  04: |      [] (7)-6
  05: |      [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-8
  06: [] (6)-60
  07: [] (34)-62
  08: |      [./read_on_stdin] (1)-63
  09: [] (6)-80
  10: [] (34)-82
  11: |      [./read_on_stdin] (1)-83
  12: [] (39)-99
  13: [./write_on_stdout] (1)-100
  14: [TOKEN201911282055] (1)-118
  15: [] (39)-135
  16: [65491]prev_pipe -1 next -1[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/003-imbricated-subshells-and-pipes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that pipes and subshells run twice together in harmony.[0m

  STDIN:
[38;5;239m  01: ( ( (cd / ; /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd) | ./read_on_stdin) ) | ( ( (./read_on_stdin) ) | ./read_on_stdin )
  02: ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/Jerry/Desktop/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: [65626] pipe [4 5]
  02: [65631]plst 1 5
  03: [65631]plst 1 5
  04: [65631] pipe [4 6]
  05: [65626] pipe [4 5]
  06: [65631]plst 1 5
  07: [65631]plst 1 5
  08: [65631] pipe [4 6]
  09: cd: can't access: @@@
  10: [65626] pipe [4 5]
  11: [65626] pipe [4 5]
  12: [65631]plst 1 5
  13: [65631]plst 1 5
  14: [65631] pipe [4 6]
  15: [65626] pipe [4 5]
  16: [65630]plst 0 4
  17: [65630]plst 0 4
  18: [65630] pipe [5 6]
  19: [65626] pipe [4 5]
  20: [65630]plst 0 4
  21: [65630]plst 0 4
  22: [65630] pipe [5 6]
  23: [65626] pipe [4 5]
  24: [65626] pipe [4 5]
  25: [65630]plst 0 4
  26: [65630]plst 0 4
  27: [65630] pipe [5 6]
  28: [65626] pipe [4 5]
  29: [65630]plst 0 4
  30: [65630]plst 0 4
  31: [65630] pipe [5 6]
  32: [65626] pipe [4 5]
  33: [65630]plst 0 4
  34: [65630]plst 0 4
  35: [65630] pipe [5 6]
  36: [65626] pipe [4 5]
  37: [65626] pipe [4 5][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [] (34)-2
  03:        ‾‾‾‾‾‾|      [] (34)-4
  04:               ‾‾‾‾‾‾|      [cd] (1)-5
  05:               ‾‾‾‾‾‾|      [/] (1)-8
  06:               ‾‾‾‾‾‾|      [] (7)-10
  07:               ‾‾‾‾‾‾|      [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-12
  08:        ‾‾‾‾‾‾|      [] (6)-64
  09:        ‾‾‾‾‾‾|      [./read_on_stdin] (1)-66
  10: [] (6)-85
  11: [] (34)-87
  12: |      [] (34)-89
  13:        ‾‾‾‾‾‾|      [] (34)-91
  14:               ‾‾‾‾‾‾|      [./read_on_stdin] (1)-92
  15: |      [] (6)-111
  16: |      [./read_on_stdin] (1)-113
  17: [] (39)-130
  18: [./write_on_stdout] (1)-131
  19: [TOKEN201911282055] (1)-149
  20: [] (39)-166
  21: [65626]prev_pipe -1 next -1
  22: [65630]prev_pipe 4 next -1
  23: [65631]prev_pipe -1 next 5[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/piping/002-pipes-inside-subshells[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that piped command may be executed inside a subshell command.[0m

  STDIN:
[38;5;239m  01: (cd / ; /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd | /Users/Jerry/Desktop/42ShellTester/tmp/read_on_stdin | /Users/Jerry/Desktop/42ShellTester/tmp/read_on_stdin)
  02: ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/Users/Jerry/Desktop/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD@@$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: cd: can't access: 
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD@@
  03: [65769] pipe [4 5]
  04: [65769] pipe [6 7]
  05: [65769] pipe [4 5]
  06: [65769] pipe [6 7][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [cd] (1)-1
  03: |      [/] (1)-4
  04: |      [] (7)-6
  05: |      [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-8
  06: |      [] (6)-59
  07: |      [/Users/Jerry/Desktop/42ShellTester/tmp/read_on_stdin] (1)-61
  08: |      [] (6)-114
  09: |      [/Users/Jerry/Desktop/42ShellTester/tmp/read_on_stdin] (1)-116
  10: [] (39)-169
  11: [./write_on_stdout] (1)-170
  12: [TOKEN201911282055] (1)-188
  13: [] (39)-205
  14: [65769]prev_pipe -1 next -1[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/exit/001-exiting-subshell[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that prematurely exiting a subshell does work and does not result in parent shell termination.[0m

  STDIN:
[38;5;239m  01: (exit ; ./write_on_stdout TOKEN201911282055_NOT_DISPLAYED)
  02: ./write_on_stdout TOKEN201911282055_DISPLAYED[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_NOT_DISPLAYED`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_DISPLAYED`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [exit] (1)-1
  03: |      [] (7)-6
  04: |      [./write_on_stdout] (1)-8
  05: |      [TOKEN201911282055_NOT_DISPLAYED] (1)-26
  06: [] (39)-58
  07: [./write_on_stdout] (1)-59
  08: [TOKEN201911282055_DISPLAYED] (1)-77
  09: [] (39)-104[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/cd/002-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell implementation may parse a subshell command on multiple lines.[0m

  STDIN:
[38;5;239m  01: (
  02: cd / ;
  03: /Users/Jerry/Desktop/42ShellTester/tmp/write_on_stdout TOKEN201911282055_SUBSHELL ;
  04: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  05: )
  06: ./write_on_stdout TOKEN201911282055_PARENT[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `/Users/Jerry/Desktop/42ShellTester/tmp`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD:/:PWD$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUBSHELL`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_PARENT`[0m
[38;5;239m  01: cd: can't access: 
  02: TOKEN201911282055_SUBSHELL
  03: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [] (39)-1
  03: |      [cd] (1)-2
  04: |      [/] (1)-5
  05: |      [] (7)-7
  06: |      [] (39)-8
  07: |      [/Users/Jerry/Desktop/42ShellTester/tmp/write_on_stdout] (1)-9
  08: |      [TOKEN201911282055_SUBSHELL] (1)-64
  09: |      [] (7)-91
  10: |      [] (39)-92
  11: |      [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-93
  12: |      [] (39)-143
  13: [] (39)-145
  14: [./write_on_stdout] (1)-146
  15: [TOKEN201911282055_PARENT] (1)-164
  16: [] (39)-188[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/cd/001-it-does-not-change-current-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the part of a command line that is embraced within the subshell tokens `(` and `)` effectively results in a subshell execution.[0m

  STDIN:
[38;5;239m  01: (cd /)
  02: ./display_pwd[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `/Users/Jerry/Desktop/42ShellTester/tmp`[0m
[38;5;239m  01: cd: can't access: [0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [cd] (1)-1
  03: |      [/] (1)-4
  04: [] (39)-6
  05: [./display_pwd] (1)-7
  06: [] (39)-20[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/builtins/unsetenv/001-it-does-not-modify-parent-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that changing environment in subshell commands does not result in a changed of the parent shell's environment.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_NAME=TOKEN201911282055_VALUE"[0m

  STDIN:
[38;5;239m  01: (unsetenv TOKEN201911282055_NAME ; unset TOKEN201911282055_NAME)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_NAME=TOKEN201911282055_VALUE`[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: [] (34)-0
  02: |      [unsetenv] (1)-1
  03: |      [TOKEN201911282055_NAME] (1)-10
  04: |      [] (7)-33
  05: |      [unset] (1)-35
  06: |      [TOKEN201911282055_NAME] (1)-41
  07: [] (39)-64
  08: [./display_env] (1)-65
  09: [] (39)-78[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/002-modifies-the-child-environment-only-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: ( (TOKEN201911282055_NAME=TOKEN201911282055_VALUE ./display_env) ; ./display_env) ; ./display_env
  02: [0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2
  06: assigns: TOKEN201911282055_NAME TOKEN201911282055_VALUE
  07: ------------------------------
  08: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  09: SHLVL=1
  10: ------------------------------
  11: TOTAL ENVIRONMENT VARIABLES: 2
  12: ------------------------------
  13: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  14: SHLVL=1
  15: ------------------------------
  16: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [] (34)-2
  03:        ‾‾‾‾‾‾|      [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-3
  04:        ‾‾‾‾‾‾|      [./display_env] (1)-50
  05: |      [] (7)-65
  06: |      [./display_env] (1)-67
  07: [] (7)-82
  08: [./display_env] (1)-84
  09: [] (39)-97
  10: [] (39)-98[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/inline-environment-variable/001-modifies-the-child-environment-only-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that declaring a variable and specifying a binary in a subshell does not result in local variable declaration or a modified parent shell's environment, but only a modified child's environment.[0m

  STDIN:
[38;5;239m  01: (TOKEN201911282055_NAME=TOKEN201911282055_VALUE ./display_env)
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_NAME=TOKEN201911282055_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2
  06: assigns: TOKEN201911282055_NAME TOKEN201911282055_VALUE[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [TOKEN201911282055_NAME=TOKEN201911282055_VALUE] (1)-1
  03: |      [./display_env] (1)-48
  04: [] (39)-62
  05: [./display_env] (1)-63
  06: [] (39)-76[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/001-with-simple-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `'`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout 'TOKEN201911282055_FIRST)' ; (./write_on_stdout '(TOKEN201911282055_SECOND') )[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SECOND`[0m
[38;5;239m  01: TOKEN201911282055_FIRST)
  02: (TOKEN201911282055_SECOND[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [./write_on_stdout] (1)-1
  03: |      ['TOKEN201911282055_FIRST)'] (1)-19
  04: |      [] (7)-46
  05: |      [] (34)-48
  06:        ‾‾‾‾‾‾|      [./write_on_stdout] (1)-49
  07:        ‾‾‾‾‾‾|      ['(TOKEN201911282055_SECOND'] (1)-67
  08: [] (39)-97[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/002-with-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbol `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201911282055_FIRST)" ; (./write_on_stdout "(TOKEN201911282055_SECOND") )[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_FIRST`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_SECOND`[0m
[38;5;239m  01: lala[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/mixed/quoting/003-with-simple-and-double-quotes[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the command line parser correctly takes in account the inhibitor symbols `'` and `"`.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout "TOKEN201911282055_FIRST)" ; (./write_on_stdout '(TOKEN201911282055_SECOND') )[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SECOND`[0m
[38;5;239m  01: TOKEN201911282055_FIRST)
  02: (TOKEN201911282055_SECOND[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [./write_on_stdout] (1)-1
  03: |      ["TOKEN201911282055_FIRST)"] (1)-19
  04: |      [] (7)-46
  05: |      [] (34)-48
  06:        ‾‾‾‾‾‾|      [./write_on_stdout] (1)-49
  07:        ‾‾‾‾‾‾|      ['(TOKEN201911282055_SECOND'] (1)-67
  08: [] (39)-97[0m

----------------------------------------------------------------

[37;1m42sh/subshell/002-multiple-levels-of-subshells[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that imbricating multiple subshells does not result in error.[0m

  STDIN:
[38;5;239m  01: ( ( ( ( ./write_on_stdout TOKEN201911282055 ) ) ) )[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [] (34)-2
  03:        ‾‾‾‾‾‾|      [] (34)-4
  04:               ‾‾‾‾‾‾|      [] (34)-6
  05:                      ‾‾‾‾‾‾|      [./write_on_stdout] (1)-8
  06:                      ‾‾‾‾‾‾|      [TOKEN201911282055] (1)-26
  07: [] (39)-51[0m

----------------------------------------------------------------

[37;1m42sh/subshell/005-copy-of-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a subshell get a copy of the parent environment.[0m

  Before test:
[38;5;239m  01: export "TOKEN201911282055_VAR1=VALUE1"
  02: export "TOKEN201911282055_VAR2=VALUE2"
  03: export "TOKEN201911282055_VAR3=VALUE3"[0m

  STDIN:
[38;5;239m  01: (./display_env)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_VAR1=VALUE1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_VAR2=VALUE2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_VAR3=VALUE3`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[38;5;239m  01: [] (34)-0
  02: |      [./display_env] (1)-1
  03: [] (39)-15[0m

----------------------------------------------------------------

[37;1m42sh/subshell/003-multiline[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell implementation may parse a subshell command on multiple lines.[0m

  STDIN:
[38;5;239m  01: (
  02: ./write_on_stdout TOKEN201911282055_SUBSHELL1 ;
  03: ./write_on_stdout TOKEN201911282055_SUBSHELL2
  04: )[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUBSHELL1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUBSHELL2`[0m
[38;5;239m  01: TOKEN201911282055_SUBSHELL1
  02: TOKEN201911282055_SUBSHELL2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [] (39)-1
  03: |      [./write_on_stdout] (1)-2
  04: |      [TOKEN201911282055_SUBSHELL1] (1)-20
  05: |      [] (7)-48
  06: |      [] (39)-49
  07: |      [./write_on_stdout] (1)-50
  08: |      [TOKEN201911282055_SUBSHELL2] (1)-68
  09: |      [] (39)-95
  10: [] (39)-97[0m

----------------------------------------------------------------

[37;1m42sh/subshell/004-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a subshell command that is executed at the end of a script is correctly returned at termination by the parent shell.[0m

  STDIN:
[38;5;239m  01: (./exit_with_status 42)[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: [] (34)-0
  02: |      [./exit_with_status] (1)-1
  03: |      [42] (1)-20
  04: [] (39)-23[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status 42[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/002-parse-error-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout) (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: Unexpected token at -)
  02: 
  03: lala[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/001-parse-error-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: Unexpected token at -)
  02: 
  03: lala[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/004-parse-error-4[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ( (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: Unexpected token at -)
  02: 
  03: lala[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/errors/003-parse-error-3[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the parser detects an invalid use of parentheses.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ) (./write_on_stdout)[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `write_on_stdout`[0m
[38;5;239m  01: Unexpected token at -) (./write_on_stdout)
  02: 
  03: lala[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  (no output)[0m

----------------------------------------------------------------

[37;1m42sh/subshell/001-tokens-are-recognized[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that adding twice symbols `(` and `)` in a command line does not make the Shell resulting in error.[0m

  STDIN:
[38;5;239m  01: (./write_on_stdout TOKEN201911282055)[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (34)-0
  02: |      [./write_on_stdout] (1)-1
  03: |      [TOKEN201911282055] (1)-19
  04: [] (39)-37[0m

----------------------------------------------------------------

[37;1mminishell/misc/001-copy-of-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A Shell must send a copy of the environment to its child processes.[0m

  Before test:
[38;5;239m  01: export COPYENV_VAR1="TOKEN201911282055_VAR1"
  02: export COPYENV_VAR2="TOKEN201911282055_VAR2"
  03: export COPYENV_VAR3="TOKEN201911282055_VAR3"[0m

  STDIN:
[38;5;239m  01: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR1=TOKEN201911282055_VAR1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR2=TOKEN201911282055_VAR2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `COPYENV_VAR3=TOKEN201911282055_VAR3`[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[38;5;239m  01: [./display_env] (1)-0
  02: [] (39)-13[0m

----------------------------------------------------------------

[37;1mminishell/builtins/setenv/001-no-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `setenv` (or `export`) without any argument results in the same behavior as `env` (display environment variables).[0m

  Before test:
[38;5;239m  01: # storing all environment variables except OLDPWD and _
  02: env | awk 'BEGIN {FS="="} $0 !~ /^(OLDPWD|_)/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: setenv
  02: export[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  01: export OLDPWD
  02: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  03: export SHLVL="1"
  04: export OLDPWD
  05: export PWD="/Users/Jerry/Desktop/42ShellTester/tmp"
  06: export SHLVL="1"[0m

  STDERR:
[38;5;239m  01: [setenv] (1)-0
  02: [] (39)-6
  03: [export] (1)-7
  04: [] (39)-13[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/multiple-options/001-ignore-environment-and-set-variable[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that `env -i` works if we use a second argument to set an environment variable, we are also checking if this command unset environments variables for a given binary.[0m

  STDIN:
[38;5;239m  01: env -i TESTVARIABLE=TOKEN201911282055 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TESTVARIABLE=TOKEN201911282055`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 1`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [env] (1)-0
  02: [-i] (1)-4
  03: [TESTVARIABLE=TOKEN201911282055] (1)-7
  04: [./display_env] (1)-38
  05: [] (39)-51[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/003-ignore-environment[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the option `-i` with the builtin `env` results in an empty environment sent to the given command.[0m

  STDIN:
[38;5;239m  01: env -i ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOTAL ENVIRONMENT VARIABLES: 0`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [env] (1)-0
  02: [-i] (1)-4
  03: [./display_env] (1)-7
  04: [] (39)-20[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/005-set-variables[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the builtin `env` can modify or set multiple environment variables before executing the given command.[0m

  Before test:
[38;5;239m  01: export VARTEST1="OLD_VALUE"[0m

  STDIN:
[38;5;239m  01: env VARTEST1=TOKEN201911282055_1 VARTEST2=TOKEN201911282055_2 VARTEST3=TOKEN201911282055_3 ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST1=TOKEN201911282055_1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST2=TOKEN201911282055_2`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `VARTEST3=TOKEN201911282055_3`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [env] (1)-0
  02: [VARTEST1=TOKEN201911282055_1] (1)-4
  03: [VARTEST2=TOKEN201911282055_2] (1)-33
  04: [VARTEST3=TOKEN201911282055_3] (1)-62
  05: [./display_env] (1)-91
  06: [] (39)-104[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/002-env-check-usefull-var[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that basic environment variables are well stored.
  We add a special variable to the environment before the execution.[0m

  Before test:
[38;5;239m  01: export TEST_42SHTEST="TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD=${PWD}`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `HOME=/Users/Jerry`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `TEST_42SHTEST=TOKEN201911282055`[0m
[38;5;239m  01: OLDPWD=
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [env] (1)-0
  02: [] (39)-3[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/002-illegal-option[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid option results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f -- "-w"[0m

  STDIN:
[38;5;239m  01: env -w[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ii]nvalid|[Ii]llegal) (option|argument)`[0m
[38;5;239m  01: [env] (1)-0
  02: [-w] (1)-4
  03: [] (39)-6[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/errors/001-command-not-found[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `env` with an invalid binary as argument results in an error and failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./invalid_binary"[0m

  STDIN:
[38;5;239m  01: env ./invalid_binary[0m

  STDOUT:
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: [env] (1)-0
  02: [./invalid_binary] (1)-4
  03: [] (39)-20[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/env/001-env-same-value-as-parent[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check if your shell is using a copy of his parent environment as environment.
  We are using a copy of the environment variable before starting your shell and the command env from your shell.[0m

  Before test:
[38;5;239m  01: # storing all environment variables except OLDPWD
  02: env | awk 'BEGIN {FS="="} $0 !~ /^OLDPWD/ {print $1"="}' > "./stored_env"[0m

  STDIN:
[38;5;239m  01: env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_each_regex_of_file `./stored_env`[0m
[38;5;239m  01: OLDPWD=
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [env] (1)-0
  02: [] (39)-3[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/003-status-of-last-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `exit` without any argument results in a Shell termination and the exit status of the previous command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42
  02: exit[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (39)-21
  04: [exit] (1)-22
  05: [] (39)-26[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/002-non-numeric-argument[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-numeric argument with the builtin `exit` results in the Shell termination and an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit abc
  02: ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[38;5;34m  SUCCESS    might_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `[Nn]umeric argument required`[0m
[38;5;239m  01: [exit] (1)-0
  02: [abc] (1)-5
  03: [] (39)-8
  04: [./write_on_stdout] (1)-9
  05: [TOKEN201911282055] (1)-27
  06: [] (39)-44
  07: exit: numeric argument required[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/exit/errors/001-too-many-args[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong number of arguments with the builtin `exit` does not result in the Shell termination but an error on standard error.[0m

  STDIN:
[38;5;239m  01: exit 21 42
  02: ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[38;5;34m  SUCCESS    might match_regex `([Tt]oo many arguments|[Aa]rgument list too long)`[0m
[38;5;239m  01: [exit] (1)-0
  02: [21] (1)-5
  03: [42] (1)-8
  04: [] (39)-10
  05: [./write_on_stdout] (1)-11
  06: [TOKEN201911282055] (1)-29
  07: [] (39)-46
  08: exit: too many arguments[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/002-oldpwd[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `-` as first argument with the builtin `cd` results in moving the previous current directory.[0m

  STDIN:
[38;5;239m  01: cd /
  02: cd -
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: cd: can't access: 
  02: OLDPWD is not set
  03: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [/] (1)-3
  03: [] (39)-4
  04: [cd] (1)-5
  05: [-] (1)-8
  06: [] (39)-9
  07: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-10
  08: [] (39)-60[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/options/001-not-following-links[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using symbolic links twice with the builtin `cd` and the option `-P` results in a correct environment variable PWD. The option `-P` makes the Shell to resolve symbolic links.[0m

  Before test:
[38;5;239m  01: rm -fr "./sub_directory_link" "./sub_directory"
  02: mkdir -p "./sub_directory/sub_sub_directory"
  03: ln -s "./sub_directory" "./sub_directory_link"
  04: ln -s "./sub_sub_directory" "./sub_directory/sub_sub_directory_link"[0m

  STDIN:
[38;5;239m  01: cd -P sub_directory_link
  02: cd -P sub_sub_directory_link
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD=/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory/sub_sub_directory`[0m
[38;5;239m  01: ------------------------------
  02: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory
  03: PWD=/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory/sub_sub_directory
  04: SHLVL=1
  05: ------------------------------
  06: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [-P] (1)-3
  03: [sub_directory_link] (1)-6
  04: [] (39)-24
  05: [cd] (1)-25
  06: [-P] (1)-28
  07: [sub_sub_directory_link] (1)-31
  08: [] (39)-53
  09: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-54
  10: [] (39)-104[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/006-root-path-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the root path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  STDIN:
[38;5;239m  01: cd /.
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/$`[0m
[38;5;239m  01: PWD:/:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=/.
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [/.] (1)-3
  03: [] (39)-5
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-6
  05: [] (39)-56
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-57
  07: [] (39)-107[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/003-current-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a relative path to the current directory as argument with the builtin `cd` results in not changing the current directory. The environment variable must not be changed.[0m

  STDIN:
[38;5;239m  01: cd ../tmp
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [../tmp] (1)-3
  03: [] (39)-9
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-10
  05: [] (39)-60
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-61
  07: [] (39)-111[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/002-current-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `.` as first argument with the builtin `cd` results in not changing current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [.] (1)-3
  03: [] (39)-4
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-5
  05: [] (39)-55
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-56
  07: [] (39)-106[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/007-symbolic-link[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving the linked directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp/symbolic_link$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=symbolic_link
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [symbolic_link] (1)-3
  03: [] (39)-16
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-17
  05: [] (39)-67
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-68
  07: [] (39)-118[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/010-update-OLDPWD[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `cd` results in a modified environment variable `PWD`.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201911282055"
  02: mkdir -p "./TOKEN201911282055/TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: cd TOKEN201911282055
  02: cd TOKEN201911282055
  03: ../../display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp/TOKEN201911282055/TOKEN201911282055$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp/TOKEN201911282055$`[0m
[38;5;239m  01: ------------------------------
  02: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp/TOKEN201911282055
  03: PWD=TOKEN201911282055
  04: SHLVL=1
  05: ------------------------------
  06: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [TOKEN201911282055] (1)-3
  03: [] (39)-20
  04: [cd] (1)-21
  05: [TOKEN201911282055] (1)-24
  06: [] (39)-41
  07: [../../display_env] (1)-42
  08: [] (39)-59[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/008-symbolic-link-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link as first argument with the builtin `cd` results in moving to the linked directory. In this test, the directory is linked with to chained symbolic links.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2"
  02: mkdir -p "./sub_directory"
  03: ln -s "./sub_directory" "./symbolic_link1"
  04: ln -s "./symbolic_link1" "./symbolic_link2"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link2
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory:PWD$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp/symbolic_link2$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester/tmp/sub_directory:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=symbolic_link2
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [symbolic_link2] (1)-3
  03: [] (39)-17
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-18
  05: [] (39)-68
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-69
  07: [] (39)-119[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/004-parent-directory[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using `..` as first argument with the builtin `cd` results in moving to the parent directory.[0m

  STDIN:
[38;5;239m  01: cd ..
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester:PWD$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=/Users/Jerry/Desktop/42ShellTester
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [..] (1)-3
  03: [] (39)-5
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-6
  05: [] (39)-56
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-57
  07: [] (39)-107[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/012-dot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths to the current directory with the builtin `cd` results in not changing the current directory.[0m

  STDIN:
[38;5;239m  01: cd .
  02: cd ./
  03: cd ./.
  04: cd ././
  05: cd ./././././././././.
  06: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  07: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=/Users/Jerry/Desktop/42ShellTester/tmp/././././.
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [.] (1)-3
  03: [] (39)-4
  04: [cd] (1)-5
  05: [./] (1)-8
  06: [] (39)-10
  07: [cd] (1)-11
  08: [./.] (1)-14
  09: [] (39)-17
  10: [cd] (1)-18
  11: [././] (1)-21
  12: [] (39)-25
  13: [cd] (1)-26
  14: [./././././././././.] (1)-29
  15: [] (39)-48
  16: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-49
  17: [] (39)-99
  18: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-100
  19: [] (39)-150[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/005-root-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the root path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  STDIN:
[38;5;239m  01: cd /
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/$`[0m
[38;5;239m  01: cd: can't access: 
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD
  03: ------------------------------
  04: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [/] (1)-3
  03: [] (39)-4
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-5
  05: [] (39)-55
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-56
  07: [] (39)-106[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/011-dotdot[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that playing with relative paths with the builtin `cd` results in correctly changing the current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "playing_with_dotdot"
  02: mkdir -p "playing_with_dotdot/1/2/3/4/5/6/7/8/9/10"[0m

  STDIN:
[38;5;239m  01: cd playing_with_dotdot
  02: cd ../playing_with_dotdot
  03: cd 1/2/3/4/../4/../4/../../3/4/5/6/7/8/9/10
  04: cd ../../../../../../../../../../1/2/3/4/5
  05: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  06: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp/playing_with_dotdot/1/2/3/4/5:PWD`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp/playing_with_dotdot/1/2/3/4/5$`[0m
[38;5;239m  01: cd: can't access: /Users/Jerry/Desktop/42ShellTester/tmp/playing_with_dotdot/1/2/3/4/5/6/7/8/9/../../1/2/3/4/5
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp/playing_with_dotdot/1/2/3/4/5/6/7/8/9/10:PWD
  03: ------------------------------
  04: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp/playing_with_dotdot
  05: PWD=1/2/3/4/../../3/4/5/6/7/8/9/10
  06: SHLVL=1
  07: ------------------------------
  08: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [playing_with_dotdot] (1)-3
  03: [] (39)-22
  04: [cd] (1)-23
  05: [../playing_with_dotdot] (1)-26
  06: [] (39)-48
  07: [cd] (1)-49
  08: [1/2/3/4/../4/../4/../../3/4/5/6/7/8/9/10] (1)-52
  09: [] (39)-92
  10: [cd] (1)-93
  11: [../../../../../../../../../../1/2/3/4/5] (1)-96
  12: [] (39)-135
  13: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-136
  14: [] (39)-186
  15: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-187
  16: [] (39)-237[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/013-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path as first argument with the builtin `cd` results in moving to the correct directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./my_sub_directory"
  02: mkdir -p "./my_sub_directory/and_another_one/"[0m

  STDIN:
[38;5;239m  01: cd /Users/Jerry/Desktop/42ShellTester/tmp/my_sub_directory/and_another_one
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd
  03: /Users/Jerry/Desktop/42ShellTester/tmp/display_env[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp/my_sub_directory/and_another_one:PWD`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^PWD=/Users/Jerry/Desktop/42ShellTester/tmp/my_sub_directory/and_another_one$`[0m
[38;5;239m  01: PWD:/Users/Jerry/Desktop/42ShellTester/tmp/my_sub_directory/and_another_one:PWD
  02: ------------------------------
  03: OLDPWD=/Users/Jerry/Desktop/42ShellTester/tmp
  04: PWD=/Users/Jerry/Desktop/42ShellTester/tmp/my_sub_directory/and_another_one
  05: SHLVL=1
  06: ------------------------------
  07: TOTAL ENVIRONMENT VARIABLES: 3[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [/Users/Jerry/Desktop/42ShellTester/tmp/my_sub_directory/and_another_one] (1)-3
  03: [] (39)-74
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-75
  05: [] (39)-125
  06: [/Users/Jerry/Desktop/42ShellTester/tmp/display_env] (1)-126
  07: [] (39)-176[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/004-permission-denied-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied[0m

  STDOUT:
[38;5;239m  01: cd: can't access: permission_denied[0m

  STDERR:
[38;5;239m  01: [cd] (1)-0
  02: [permission_denied] (1)-3
  03: [] (39)-20[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/002-not-a-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory[0m

  STDOUT:
[38;5;239m  01: cd: can't access: not_a_directory[0m

  STDERR:
[38;5;239m  01: [cd] (1)-0
  02: [not_a_directory] (1)-3
  03: [] (39)-18[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/005-too-many-symbolic-links-encountered[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: cd: can't access: symbolic_link1
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: [cd] (1)-0
  02: [symbolic_link1] (1)-3
  03: [] (39)-17
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-18
  05: [] (39)-68[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/008-no-such-file-or-directory-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in a Shell termination with an error status code.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory[0m

  STDOUT:
[38;5;239m  01: cd: can't access: no_such_file_or_directory[0m

  STDERR:
[38;5;239m  01: [cd] (1)-0
  02: [no_such_file_or_directory] (1)-3
  03: [] (39)-28[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/010-no-such-file-or-directory-symlink-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink[0m

  STDOUT:
[38;5;239m  01: cd: can't access: /Users/Jerry/Desktop/42ShellTester/tmp/enoent_symlink[0m

  STDERR:
[38;5;239m  01: [cd] (1)-0
  02: [./enoent_symlink] (1)-3
  03: [] (39)-19[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/003-permission-denied[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a directory without any permission as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"
  03: mkdir -m 0 "./permission_denied"[0m

  STDIN:
[38;5;239m  01: cd permission_denied
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: cd: can't access: permission_denied
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: [cd] (1)-0
  02: [permission_denied] (1)-3
  03: [] (39)-20
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-21
  05: [] (39)-71[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/009-no-such-file-or-directory-symlink[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link that targets to a non-existing directory with the builtin `cd`  results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -rf "./enoent_symlink" "./enoent_directory"
  02: ln -s "./enoent_directory" "./enoent_symlink"[0m

  STDIN:
[38;5;239m  01: cd ./enoent_symlink
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: cd: can't access: /Users/Jerry/Desktop/42ShellTester/tmp/enoent_symlink
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: [cd] (1)-0
  02: [./enoent_symlink] (1)-3
  03: [] (39)-19
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-20
  05: [] (39)-70[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/006-too-many-symbolic-links-encountered-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a symbolic link resulting in ELOOP error as first argument with the builtin `cd` results in a Shell termination with a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -f "./symbolic_link1" "./symbolic_link2" "./symbolic_link3"
  02: ln -s "./symbolic_link1" "./symbolic_link2"
  03: ln -s "./symbolic_link2" "./symbolic_link3"
  04: ln -s "./symbolic_link3" "./symbolic_link1"[0m

  STDIN:
[38;5;239m  01: cd symbolic_link1[0m

  STDOUT:
[38;5;239m  01: cd: can't access: symbolic_link1[0m

  STDERR:
[38;5;239m  01: [cd] (1)-0
  02: [symbolic_link1] (1)-3
  03: [] (39)-17[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/001-not-a-directory[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file name as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: touch "./not_a_directory"[0m

  STDIN:
[38;5;239m  01: cd not_a_directory
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: cd: can't access: not_a_directory
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]ot a directory`[0m
[38;5;239m  01: [cd] (1)-0
  02: [not_a_directory] (1)-3
  03: [] (39)-18
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-19
  05: [] (39)-69[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/errors/007-no-such-file-or-directory[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a non-existing path as first argument with the builtin `cd` results in error and not changing current directory.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file_or_directory"[0m

  STDIN:
[38;5;239m  01: cd no_such_file_or_directory
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD`[0m
[38;5;239m  01: cd: can't access: no_such_file_or_directory
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: [cd] (1)-0
  02: [no_such_file_or_directory] (1)-3
  03: [] (39)-28
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-29
  05: [] (39)-79[0m

----------------------------------------------------------------

[37;1mminishell/builtins/cd/001-no-arg[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the builtin `cd` without any argument results in moving to the HOME directory.[0m

  STDIN:
[38;5;239m  01: cd
  02: /Users/Jerry/Desktop/42ShellTester/tmp/display_pwd[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `/Users/Jerry/Desktop/42ShellTester/tmp$`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `PWD:/Users/Jerry:PWD`[0m
[38;5;239m  01: HOME is not set
  02: PWD:/Users/Jerry/Desktop/42ShellTester/tmp:PWD[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [cd] (1)-0
  02: [] (39)-2
  03: [/Users/Jerry/Desktop/42ShellTester/tmp/display_pwd] (1)-3
  04: [] (39)-53[0m

----------------------------------------------------------------

[37;1mminishell/binary/008-binary-too-many-symbolic-links-encountered[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a path that encounters an infinite loop of symbolic link results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./symbolic_link1 ./symbolic_link2 ./symbolic_link3
  02: ln -s ./symbolic_link1 ./symbolic_link2
  03: ln -s ./symbolic_link2 ./symbolic_link3
  04: ln -s ./symbolic_link3 ./symbolic_link1[0m

  STDIN:
[38;5;239m  01: ./symbolic_link1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Tt]oo many.*symbolic links`[0m
[38;5;239m  01: [./symbolic_link1] (1)-0
  02: [] (39)-16
  03: Execve ErrorR[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

----------------------------------------------------------------

[37;1mminishell/binary/006-binary-undefined-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell retrieves the default value of the environment variable PATH if not set. This test depends on the presence of the UNIX binary `ls`, located in a path within the default environment variable PATH.[0m

  Before test:
[38;5;239m  01: rm -rf "TOKEN201911282055_006-BINARY-UNDEFINED-PATH"
  02: touch "TOKEN201911282055_006-BINARY-UNDEFINED-PATH"
  03: unset PATH[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_006-BINARY-UNDEFINED-PATH`[0m
[38;5;239m  01: $TOKEN201911102156_NAME
  02: $TOKEN201911191213_NAME
  03: $TOKEN201911191219_NAME
  04: $TOKEN201911191239_NAME
  05: $TOKEN201911201137_NAME
  06: $TOKEN201911201201_NAME
  07: $TOKEN201911282055_NAME
  08: -
  09: 21sh-misc-001-no-prompt-in-non-interactive-mode.stderr
  10: 21sh-misc-001-no-prompt-in-non-interactive-mode.stderr.raw
  11: 21sh-misc-001-no-prompt-in-non-interactive-mode.stdout
  12: 21sh-misc-001-no-prompt-in-non-interactive-mode.stdout.raw
  13: 21sh-misc-002-simple-command-line.stderr
  14: 21sh-misc-002-simple-command-line.stderr.raw
  15: 21sh-misc-002-simple-command-line.stdout
  16: 21sh-misc-002-simple-command-line.stdout.raw
  17: 21sh-pipe-001-single-pipe.stderr
  18: 21sh-pipe-001-single-pipe.stderr.raw
  19: 21sh-pipe-001-single-pipe.stdout
  20: 21sh-pipe-001-single-pipe.stdout.raw
  21: 21sh-pipe-002-chained-pipes.stderr
  22: 21sh-pipe-002-chained-pipes.stderr.raw
  23: 21sh-pipe-002-chained-pipes.stdout
  24: 21sh-pipe-002-chained-pipes.stdout.raw
  25: 21sh-pipe-003-many-chained-pipes.stderr
  26: 21sh-pipe-003-many-chained-pipes.stderr.raw
  27: 21sh-pipe-003-many-chained-pipes.stdout
  28: 21sh-pipe-003-many-chained-pipes.stdout.raw
  29: 21sh-pipe-004-without-surrounding-whitespaces.stderr
  30: 21sh-pipe-004-without-surrounding-whitespaces.stderr.raw
  31: 21sh-pipe-004-without-surrounding-whitespaces.stdout
  32: 21sh-pipe-004-without-surrounding-whitespaces.stdout.raw
  33: 21sh-pipe-005-asynchronous.stderr
  34: 21sh-pipe-005-asynchronous.stderr.raw
  35: 21sh-pipe-005-asynchronous.stdout
  36: 21sh-pipe-005-asynchronous.stdout.raw
  37: 21sh-pipe-006-exit-status.stderr
  38: 21sh-pipe-006-exit-status.stderr.raw
  39: 21sh-pipe-006-exit-status.stdout
  40: 21sh-pipe-006-exit-status.stdout.raw
  41: 21sh-redirections-inputs-001-close-stdin.stderr
  42: 21sh-redirections-inputs-001-close-stdin.stderr.raw
  43: 21sh-redirections-inputs-001-close-stdin.stdout
  44: 21sh-redirections-inputs-001-close-stdin.stdout.raw
  45: 21sh-redirections-inputs-002-filename.stderr
  46: 21sh-redirections-inputs-002-filename.stderr.raw
  47: 21sh-redirections-inputs-002-filename.stdout
  48: 21sh-redirections-inputs-002-filename.stdout.raw
  49: 21sh-redirections-inputs-003-filename-with-whitespaces.stderr
  50: 21sh-redirections-inputs-003-filename-with-whitespaces.stderr.raw
  51: 21sh-redirections-inputs-003-filename-with-whitespaces.stdout
  52: 21sh-redirections-inputs-003-filename-with-whitespaces.stdout.raw
  53: 21sh-redirections-inputs-004-absolute-path.stderr
  54: 21sh-redirections-inputs-004-absolute-path.stderr.raw
  55: 21sh-redirections-inputs-004-absolute-path.stdout
  56: 21sh-redirections-inputs-004-absolute-path.stdout.raw
  57: 21sh-redirections-inputs-005-no-such-file.stderr
  58: 21sh-redirections-inputs-005-no-such-file.stderr.raw
  59: 21sh-redirections-inputs-005-no-such-file.stdout
  60: 21sh-redirections-inputs-005-no-such-file.stdout.raw
  61: 21sh-redirections-outputs-appending-001-append-default-to-file.stderr
  62: 21sh-redirections-outputs-appending-001-append-default-to-file.stderr.raw
  63: 21sh-redirections-outputs-appending-001-append-default-to-file.stdout
  64: 21sh-redirections-outputs-appending-001-append-default-to-file.stdout.raw
  65: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stderr
  66: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stderr.raw
  67: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stdout
  68: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stdout.raw
  69: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stderr
  70: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stderr.raw
  71: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stdout
  72: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stdout.raw
  73: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stderr
  74: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stderr.raw
  75: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stdout
  76: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stdout.raw
  77: 21sh-redirections-outputs-closing-001-close-default-output.stderr
  78: 21sh-redirections-outputs-closing-001-close-default-output.stderr.raw
  79: 21sh-redirections-outputs-closing-001-close-default-output.stdout
  80: 21sh-redirections-outputs-closing-001-close-default-output.stdout.raw
  81: 21sh-redirections-outputs-closing-002-close-stdout.stderr
  82: 21sh-redirections-outputs-closing-002-close-stdout.stderr.raw
  83: 21sh-redirections-outputs-closing-002-close-stdout.stdout
  84: 21sh-redirections-outputs-closing-002-close-stdout.stdout.raw
  85: 21sh-redirections-outputs-closing-003-close-stderr.stderr
  86: 21sh-redirections-outputs-closing-003-close-stderr.stderr.raw
  87: 21sh-redirections-outputs-closing-003-close-stderr.stdout
  88: 21sh-redirections-outputs-closing-003-close-stderr.stdout.raw
  89: 21sh-redirections-outputs-closing-004-close-twice-outputs.stderr
  90: 21sh-redirections-outputs-closing-004-close-twice-outputs.stderr.raw
  91: 21sh-redirections-outputs-closing-004-close-twice-outputs.stdout
  92: 21sh-redirections-outputs-closing-004-close-twice-outputs.stdout.raw
  93: 21sh-redirections-outputs-touching-001-works.stderr
  94: 21sh-redirections-outputs-touching-001-works.stderr.raw
  95: 21sh-redirections-outputs-touching-001-works.stdout
  96: 21sh-redirections-outputs-touching-001-works.stdout.raw
  97: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stderr
  98: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stderr.raw
  99: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stdout
  100: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stdout.raw
  101: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stderr
  102: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stderr.raw
  103: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stdout
  104: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stdout.raw
  105: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stderr
  106: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stderr.raw
  107: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stdout
  108: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stdout.raw
  109: 21sh-redirections-outputs-truncating-multiple-001-separately.stderr
  110: 21sh-redirections-outputs-truncating-multiple-001-separately.stderr.raw
  111: 21sh-redirections-outputs-truncating-multiple-001-separately.stdout
  112: 21sh-redirections-outputs-truncating-multiple-001-separately.stdout.raw
  113: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stderr
  114: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stderr.raw
  115: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stdout
  116: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stdout.raw
  117: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stderr
  118: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stderr.raw
  119: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stdout
  120: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stdout.raw
  121: 21sh-redirections-outputs-truncating-multiple-004-together.stderr
  122: 21sh-redirections-outputs-truncating-multiple-004-together.stderr.raw
  123: 21sh-redirections-outputs-truncating-multiple-004-together.stdout
  124: 21sh-redirections-outputs-truncating-multiple-004-together.stdout.raw
  125: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stderr
  126: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stderr.raw
  127: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stdout
  128: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stdout.raw
  129: 21sh-redirections-outputs-truncating-stderr-001-works.stderr
  130: 21sh-redirections-outputs-truncating-stderr-001-works.stderr.raw
  131: 21sh-redirections-outputs-truncating-stderr-001-works.stdout
  132: 21sh-redirections-outputs-truncating-stderr-001-works.stdout.raw
  133: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stderr
  134: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stderr.raw
  135: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stdout
  136: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stdout.raw
  137: 21sh-separators-semicolon-001-two-commands-sequentially.stderr
  138: 21sh-separators-semicolon-001-two-commands-sequentially.stderr.raw
  139: 21sh-separators-semicolon-001-two-commands-sequentially.stdout
  140: 21sh-separators-semicolon-001-two-commands-sequentially.stdout.raw
  141: 21sh-separators-semicolon-002-n-commands-sequentially.stderr
  142: 21sh-separators-semicolon-002-n-commands-sequentially.stderr.raw
  143: 21sh-separators-semicolon-002-n-commands-sequentially.stdout
  144: 21sh-separators-semicolon-002-n-commands-sequentially.stdout.raw
  145: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stderr
  146: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stderr.raw
  147: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stdout
  148: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stdout.raw
  149: 21sh-separators-semicolon-004-parse-error-empty-command.stderr
  150: 21sh-separators-semicolon-004-parse-error-empty-command.stderr.raw
  151: 21sh-separators-semicolon-004-parse-error-empty-command.stdout
  152: 21sh-separators-semicolon-004-parse-error-empty-command.stdout.raw
  153: 42sh-builtins-export-001-display-env.stderr
  154: 42sh-builtins-export-001-display-env.stderr.raw
  155: 42sh-builtins-export-001-display-env.stdout
  156: 42sh-builtins-export-001-display-env.stdout.raw
  157: 42sh-builtins-export-002-export-basic-key-value-1.stderr
  158: 42sh-builtins-export-002-export-basic-key-value-1.stderr.raw
  159: 42sh-builtins-export-002-export-basic-key-value-1.stdout
  160: 42sh-builtins-export-002-export-basic-key-value-1.stdout.raw
  161: 42sh-builtins-export-003-export-basic-key-value-2.stderr
  162: 42sh-builtins-export-003-export-basic-key-value-2.stderr.raw
  163: 42sh-builtins-export-003-export-basic-key-value-2.stdout
  164: 42sh-builtins-export-003-export-basic-key-value-2.stdout.raw
  165: 42sh-builtins-export-004-export-empty-variable-1.stderr
  166: 42sh-builtins-export-004-export-empty-variable-1.stderr.raw
  167: 42sh-builtins-export-004-export-empty-variable-1.stdout
  168: 42sh-builtins-export-004-export-empty-variable-1.stdout.raw
  169: 42sh-builtins-export-005-export-empty-variable-2.stderr
  170: 42sh-builtins-export-005-export-empty-variable-2.stderr.raw
  171: 42sh-builtins-export-005-export-empty-variable-2.stdout
  172: 42sh-builtins-export-005-export-empty-variable-2.stdout.raw
  173: 42sh-builtins-export-006-export-update-env-variable.stderr
  174: 42sh-builtins-export-006-export-update-env-variable.stderr.raw
  175: 42sh-builtins-export-006-export-update-env-variable.stdout
  176: 42sh-builtins-export-006-export-update-env-variable.stdout.raw
  177: 42sh-builtins-export-007-existing-environment-variable.stderr
  178: 42sh-builtins-export-007-existing-environment-variable.stderr.raw
  179: 42sh-builtins-export-007-existing-environment-variable.stdout
  180: 42sh-builtins-export-007-existing-environment-variable.stdout.raw
  181: 42sh-builtins-export-008-local-to-environment.stderr
  182: 42sh-builtins-export-008-local-to-environment.stderr.raw
  183: 42sh-builtins-export-008-local-to-environment.stdout
  184: 42sh-builtins-export-008-local-to-environment.stdout.raw
  185: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stderr
  186: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stderr.raw
  187: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stdout
  188: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stdout.raw
  189: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stderr
  190: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stderr.raw
  191: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stdout
  192: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stdout.raw
  193: 42sh-builtins-export-errors-001-invalid-identifier-1.stderr
  194: 42sh-builtins-export-errors-001-invalid-identifier-1.stderr.raw
  195: 42sh-builtins-export-errors-001-invalid-identifier-1.stdout
  196: 42sh-builtins-export-errors-001-invalid-identifier-1.stdout.raw
  197: 42sh-builtins-export-errors-002-invalid-identifier-2.stderr
  198: 42sh-builtins-export-errors-002-invalid-identifier-2.stderr.raw
  199: 42sh-builtins-export-errors-002-invalid-identifier-2.stdout
  200: 42sh-builtins-export-errors-002-invalid-identifier-2.stdout.raw
  201: 42sh-builtins-export-errors-003-illegal-option.stderr
  202: 42sh-builtins-export-errors-003-illegal-option.stderr.raw
  203: 42sh-builtins-export-errors-003-illegal-option.stdout
  204: 42sh-builtins-export-errors-003-illegal-option.stdout.raw
  205: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stderr
  206: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stderr.raw
  207: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stdout
  208: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stdout.raw
  209: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stderr
  210: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stderr.raw
  211: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stdout
  212: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stdout.raw
  213: 42sh-builtins-export-options-001-export-with-only-p-parameter.stderr
  214: 42sh-builtins-export-options-001-export-with-only-p-parameter.stderr.raw
  215: 42sh-builtins-export-options-001-export-with-only-p-parameter.stdout
  216: 42sh-builtins-export-options-001-export-with-only-p-parameter.stdout.raw
  217: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stderr
  218: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stderr.raw
  219: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stdout
  220: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stdout.raw
  221: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stderr
  222: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stderr.raw
  223: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stdout
  224: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stdout.raw
  225: 42sh-builtins-export-options-004-export-n-param.stderr
  226: 42sh-builtins-export-options-004-export-n-param.stderr.raw
  227: 42sh-builtins-export-options-004-export-n-param.stdout
  228: 42sh-builtins-export-options-004-export-n-param.stdout.raw
  229: 42sh-escaping-001-escape-single-character-1.stderr
  230: 42sh-escaping-001-escape-single-character-1.stderr.raw
  231: 42sh-escaping-001-escape-single-character-1.stdout
  232: 42sh-escaping-001-escape-single-character-1.stdout.raw
  233: 42sh-escaping-002-escape-single-character-2.stderr
  234: 42sh-escaping-002-escape-single-character-2.stderr.raw
  235: 42sh-escaping-002-escape-single-character-2.stdout
  236: 42sh-escaping-002-escape-single-character-2.stdout.raw
  237: 42sh-escaping-003-escape-single-character-3.stderr
  238: 42sh-escaping-003-escape-single-character-3.stderr.raw
  239: 42sh-escaping-003-escape-single-character-3.stdout
  240: 42sh-escaping-003-escape-single-character-3.stdout.raw
  241: 42sh-escaping-004-escape-single-character-4.stderr
  242: 42sh-escaping-004-escape-single-character-4.stderr.raw
  243: 42sh-escaping-004-escape-single-character-4.stdout
  244: 42sh-escaping-004-escape-single-character-4.stdout.raw
  245: 42sh-escaping-005-escape-single-character-5.stderr
  246: 42sh-escaping-005-escape-single-character-5.stderr.raw
  247: 42sh-escaping-005-escape-single-character-5.stdout
  248: 42sh-escaping-005-escape-single-character-5.stdout.raw
  249: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  250: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  251: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  252: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  253: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stderr
  254: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stderr.raw
  255: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stdout
  256: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stdout.raw
  257: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stderr
  258: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stderr.raw
  259: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stdout
  260: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stdout.raw
  261: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stderr
  262: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stderr.raw
  263: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stdout
  264: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stdout.raw
  265: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stderr
  266: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stderr.raw
  267: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stdout
  268: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stdout.raw
  269: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stderr
  270: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stderr.raw
  271: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stdout
  272: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stdout.raw
  273: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stderr
  274: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stderr.raw
  275: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stdout
  276: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stdout.raw
  277: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stderr
  278: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stderr.raw
  279: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stdout
  280: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stdout.raw
  281: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stderr
  282: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stderr.raw
  283: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stdout
  284: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stdout.raw
  285: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stderr
  286: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stderr.raw
  287: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stdout
  288: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stdout.raw
  289: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stderr
  290: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stderr.raw
  291: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stdout
  292: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stdout.raw
  293: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stderr
  294: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stderr.raw
  295: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stdout
  296: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stdout.raw
  297: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stderr
  298: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stderr.raw
  299: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stdout
  300: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stdout.raw
  301: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stderr
  302: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stderr.raw
  303: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stdout
  304: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stdout.raw
  305: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stderr
  306: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stderr.raw
  307: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stdout
  308: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stdout.raw
  309: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stderr
  310: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stderr.raw
  311: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stdout
  312: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stdout.raw
  313: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stderr
  314: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stderr.raw
  315: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stdout
  316: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stdout.raw
  317: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stderr
  318: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stderr.raw
  319: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stdout
  320: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stdout.raw
  321: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stderr
  322: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stderr.raw
  323: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stdout
  324: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stdout.raw
  325: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stderr
  326: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stderr.raw
  327: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stdout
  328: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stdout.raw
  329: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stderr
  330: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stderr.raw
  331: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stdout
  332: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stdout.raw
  333: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stderr
  334: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stderr.raw
  335: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stdout
  336: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stdout.raw
  337: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stderr
  338: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stderr.raw
  339: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stdout
  340: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stdout.raw
  341: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stderr
  342: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stderr.raw
  343: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stdout
  344: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stdout.raw
  345: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stderr
  346: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stderr.raw
  347: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stdout
  348: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stdout.raw
  349: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stderr
  350: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stderr.raw
  351: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stdout
  352: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stdout.raw
  353: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stderr
  354: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stderr.raw
  355: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stdout
  356: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stdout.raw
  357: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stderr
  358: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stderr.raw
  359: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stdout
  360: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stdout.raw
  361: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stderr
  362: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stderr.raw
  363: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stdout
  364: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stdout.raw
  365: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stderr
  366: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stderr.raw
  367: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stdout
  368: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stdout.raw
  369: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stderr
  370: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stderr.raw
  371: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stdout
  372: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stdout.raw
  373: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stderr
  374: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stderr.raw
  375: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stdout
  376: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stdout.raw
  377: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stderr
  378: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stderr.raw
  379: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stdout
  380: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stdout.raw
  381: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stderr
  382: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stderr.raw
  383: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stdout
  384: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stdout.raw
  385: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stderr
  386: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stderr.raw
  387: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stdout
  388: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stdout.raw
  389: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stderr
  390: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stderr.raw
  391: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stdout
  392: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stdout.raw
  393: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stderr
  394: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stderr.raw
  395: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stdout
  396: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stdout.raw
  397: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stderr
  398: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stderr.raw
  399: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stdout
  400: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stdout.raw
  401: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stderr
  402: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stderr.raw
  403: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stdout
  404: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stdout.raw
  405: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stderr
  406: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stderr.raw
  407: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stdout
  408: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stdout.raw
  409: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stderr
  410: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stderr.raw
  411: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stdout
  412: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stdout.raw
  413: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stderr
  414: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stderr.raw
  415: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stdout
  416: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stdout.raw
  417: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stderr
  418: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stderr.raw
  419: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stdout
  420: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stdout.raw
  421: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stderr
  422: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stderr.raw
  423: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stdout
  424: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stdout.raw
  425: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stderr
  426: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stderr.raw
  427: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stdout
  428: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stdout.raw
  429: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stderr
  430: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stderr.raw
  431: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stdout
  432: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stdout.raw
  433: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stderr
  434: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stderr.raw
  435: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stdout
  436: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stdout.raw
  437: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stderr
  438: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stderr.raw
  439: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stdout
  440: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stdout.raw
  441: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stderr
  442: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stderr.raw
  443: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stdout
  444: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stdout.raw
  445: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stderr
  446: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stderr.raw
  447: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stdout
  448: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stdout.raw
  449: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stderr
  450: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stderr.raw
  451: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stdout
  452: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stdout.raw
  453: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stderr
  454: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stderr.raw
  455: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stdout
  456: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stdout.raw
  457: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stderr
  458: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stderr.raw
  459: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stdout
  460: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stdout.raw
  461: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stderr
  462: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stderr.raw
  463: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stdout
  464: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stdout.raw
  465: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stderr
  466: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stderr.raw
  467: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stdout
  468: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stdout.raw
  469: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stderr
  470: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stderr.raw
  471: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stdout
  472: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stdout.raw
  473: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stderr
  474: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stderr.raw
  475: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stdout
  476: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stdout.raw
  477: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stderr
  478: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stderr.raw
  479: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stdout
  480: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stdout.raw
  481: 42sh-local-variable-001-declare-and-expand-1.stderr
  482: 42sh-local-variable-001-declare-and-expand-1.stderr.raw
  483: 42sh-local-variable-001-declare-and-expand-1.stdout
  484: 42sh-local-variable-001-declare-and-expand-1.stdout.raw
  485: 42sh-local-variable-002-declare-and-expand-2.stderr
  486: 42sh-local-variable-002-declare-and-expand-2.stderr.raw
  487: 42sh-local-variable-002-declare-and-expand-2.stdout
  488: 42sh-local-variable-002-declare-and-expand-2.stdout.raw
  489: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stderr
  490: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stderr.raw
  491: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stdout
  492: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stdout.raw
  493: 42sh-local-variable-004-existing-variable-in-environment-1.stderr
  494: 42sh-local-variable-004-existing-variable-in-environment-1.stderr.raw
  495: 42sh-local-variable-004-existing-variable-in-environment-1.stdout
  496: 42sh-local-variable-004-existing-variable-in-environment-1.stdout.raw
  497: 42sh-local-variable-005-existing-variable-in-environment-2.stderr
  498: 42sh-local-variable-005-existing-variable-in-environment-2.stderr.raw
  499: 42sh-local-variable-005-existing-variable-in-environment-2.stdout
  500: 42sh-local-variable-005-existing-variable-in-environment-2.stdout.raw
  501: 42sh-local-variable-006-existing-variable-in-environment-3.stderr
  502: 42sh-local-variable-006-existing-variable-in-environment-3.stderr.raw
  503: 42sh-local-variable-006-existing-variable-in-environment-3.stdout
  504: 42sh-local-variable-006-existing-variable-in-environment-3.stdout.raw
  505: 42sh-local-variable-007-multiple-declaration-at-a-time.stderr
  506: 42sh-local-variable-007-multiple-declaration-at-a-time.stderr.raw
  507: 42sh-local-variable-007-multiple-declaration-at-a-time.stdout
  508: 42sh-local-variable-007-multiple-declaration-at-a-time.stdout.raw
  509: 42sh-local-variable-008-multiple-declaration-with-same-name.stderr
  510: 42sh-local-variable-008-multiple-declaration-with-same-name.stderr.raw
  511: 42sh-local-variable-008-multiple-declaration-with-same-name.stdout
  512: 42sh-local-variable-008-multiple-declaration-with-same-name.stdout.raw
  513: 42sh-local-variable-009-last-exit-status.stderr
  514: 42sh-local-variable-009-last-exit-status.stderr.raw
  515: 42sh-local-variable-009-last-exit-status.stdout
  516: 42sh-local-variable-009-last-exit-status.stdout.raw
  517: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stderr
  518: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stderr.raw
  519: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stdout
  520: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stdout.raw
  521: 42sh-local-variable-mixed-redirections-001-truncating.stderr
  522: 42sh-local-variable-mixed-redirections-001-truncating.stderr.raw
  523: 42sh-local-variable-mixed-redirections-001-truncating.stdout
  524: 42sh-local-variable-mixed-redirections-001-truncating.stdout.raw
  525: 42sh-local-variable-mixed-redirections-002-appending.stderr
  526: 42sh-local-variable-mixed-redirections-002-appending.stderr.raw
  527: 42sh-local-variable-mixed-redirections-002-appending.stdout
  528: 42sh-local-variable-mixed-redirections-002-appending.stdout.raw
  529: 42sh-local-variable-mixed-redirections-003-reading.stderr
  530: 42sh-local-variable-mixed-redirections-003-reading.stderr.raw
  531: 42sh-local-variable-mixed-redirections-003-reading.stdout
  532: 42sh-local-variable-mixed-redirections-003-reading.stdout.raw
  533: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stderr
  534: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stderr.raw
  535: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stdout
  536: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stdout.raw
  537: 42sh-quoting-double-quotes-001-it-works.stderr
  538: 42sh-quoting-double-quotes-001-it-works.stderr.raw
  539: 42sh-quoting-double-quotes-001-it-works.stdout
  540: 42sh-quoting-double-quotes-001-it-works.stdout.raw
  541: 42sh-quoting-double-quotes-002-concatenated-strings.stderr
  542: 42sh-quoting-double-quotes-002-concatenated-strings.stderr.raw
  543: 42sh-quoting-double-quotes-002-concatenated-strings.stdout
  544: 42sh-quoting-double-quotes-002-concatenated-strings.stdout.raw
  545: 42sh-quoting-double-quotes-003-first-argument-inhibited.stderr
  546: 42sh-quoting-double-quotes-003-first-argument-inhibited.stderr.raw
  547: 42sh-quoting-double-quotes-003-first-argument-inhibited.stdout
  548: 42sh-quoting-double-quotes-003-first-argument-inhibited.stdout.raw
  549: 42sh-quoting-double-quotes-004-multiline-1.stderr
  550: 42sh-quoting-double-quotes-004-multiline-1.stderr.raw
  551: 42sh-quoting-double-quotes-004-multiline-1.stdout
  552: 42sh-quoting-double-quotes-004-multiline-1.stdout.raw
  553: 42sh-quoting-double-quotes-005-multiline-2.stderr
  554: 42sh-quoting-double-quotes-005-multiline-2.stderr.raw
  555: 42sh-quoting-double-quotes-005-multiline-2.stdout
  556: 42sh-quoting-double-quotes-005-multiline-2.stdout.raw
  557: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stderr
  558: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stderr.raw
  559: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stdout
  560: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stdout.raw
  561: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stderr
  562: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stderr.raw
  563: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stdout
  564: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stdout.raw
  565: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stderr
  566: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stderr.raw
  567: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stdout
  568: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stdout.raw
  569: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stderr
  570: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stderr.raw
  571: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stdout
  572: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stdout.raw
  573: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stderr
  574: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stderr.raw
  575: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stdout
  576: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stdout.raw
  577: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  578: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  579: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  580: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  581: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr
  582: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr.raw
  583: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout
  584: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout.raw
  585: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr
  586: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr.raw
  587: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout
  588: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout.raw
  589: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr
  590: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr.raw
  591: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout
  592: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout.raw
  593: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr
  594: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr.raw
  595: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout
  596: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout.raw
  597: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  598: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  599: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  600: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  601: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  602: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  603: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  604: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  605: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stderr
  606: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stderr.raw
  607: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stdout
  608: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stdout.raw
  609: 42sh-quoting-mixed-001-simple-and-double-quotes.stderr
  610: 42sh-quoting-mixed-001-simple-and-double-quotes.stderr.raw
  611: 42sh-quoting-mixed-001-simple-and-double-quotes.stdout
  612: 42sh-quoting-mixed-001-simple-and-double-quotes.stdout.raw
  613: 42sh-quoting-mixed-002-multiline.stderr
  614: 42sh-quoting-mixed-002-multiline.stderr.raw
  615: 42sh-quoting-mixed-002-multiline.stdout
  616: 42sh-quoting-mixed-002-multiline.stdout.raw
  617: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  618: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  619: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  620: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  621: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  622: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  623: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  624: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  625: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  626: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  627: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  628: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  629: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stderr
  630: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stderr.raw
  631: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stdout
  632: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stdout.raw
  633: 42sh-quoting-simple-quotes-001-it-works.stderr
  634: 42sh-quoting-simple-quotes-001-it-works.stderr.raw
  635: 42sh-quoting-simple-quotes-001-it-works.stdout
  636: 42sh-quoting-simple-quotes-001-it-works.stdout.raw
  637: 42sh-quoting-simple-quotes-002-concatenated-strings.stderr
  638: 42sh-quoting-simple-quotes-002-concatenated-strings.stderr.raw
  639: 42sh-quoting-simple-quotes-002-concatenated-strings.stdout
  640: 42sh-quoting-simple-quotes-002-concatenated-strings.stdout.raw
  641: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stderr
  642: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stderr.raw
  643: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stdout
  644: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stdout.raw
  645: 42sh-quoting-simple-quotes-004-multiline-1.stderr
  646: 42sh-quoting-simple-quotes-004-multiline-1.stderr.raw
  647: 42sh-quoting-simple-quotes-004-multiline-1.stdout
  648: 42sh-quoting-simple-quotes-004-multiline-1.stdout.raw
  649: 42sh-quoting-simple-quotes-005-multiline-2.stderr
  650: 42sh-quoting-simple-quotes-005-multiline-2.stderr.raw
  651: 42sh-quoting-simple-quotes-005-multiline-2.stdout
  652: 42sh-quoting-simple-quotes-005-multiline-2.stdout.raw
  653: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stderr
  654: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stderr.raw
  655: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stdout
  656: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stdout.raw
  657: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stderr
  658: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stderr.raw
  659: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stdout
  660: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stdout.raw
  661: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stderr
  662: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stderr.raw
  663: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stdout
  664: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stdout.raw
  665: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stderr
  666: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stderr.raw
  667: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stdout
  668: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stdout.raw
  669: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stderr
  670: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stderr.raw
  671: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stdout
  672: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stdout.raw
  673: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  674: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  675: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  676: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  677: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr
  678: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr.raw
  679: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout
  680: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout.raw
  681: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr
  682: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr.raw
  683: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout
  684: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout.raw
  685: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr
  686: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr.raw
  687: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout
  688: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout.raw
  689: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr
  690: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr.raw
  691: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout
  692: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout.raw
  693: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  694: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  695: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  696: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  697: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  698: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  699: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  700: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  701: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stderr
  702: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stderr.raw
  703: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stdout
  704: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stdout.raw
  705: 42sh-subshell-001-tokens-are-recognized.stderr
  706: 42sh-subshell-001-tokens-are-recognized.stderr.raw
  707: 42sh-subshell-001-tokens-are-recognized.stdout
  708: 42sh-subshell-001-tokens-are-recognized.stdout.raw
  709: 42sh-subshell-002-multiple-levels-of-subshells.stderr
  710: 42sh-subshell-002-multiple-levels-of-subshells.stderr.raw
  711: 42sh-subshell-002-multiple-levels-of-subshells.stdout
  712: 42sh-subshell-002-multiple-levels-of-subshells.stdout.raw
  713: 42sh-subshell-003-multiline.stderr
  714: 42sh-subshell-003-multiline.stderr.raw
  715: 42sh-subshell-003-multiline.stdout
  716: 42sh-subshell-003-multiline.stdout.raw
  717: 42sh-subshell-004-exit-status.stderr
  718: 42sh-subshell-004-exit-status.stderr.raw
  719: 42sh-subshell-004-exit-status.stdout
  720: 42sh-subshell-004-exit-status.stdout.raw
  721: 42sh-subshell-005-copy-of-environment.stderr
  722: 42sh-subshell-005-copy-of-environment.stderr.raw
  723: 42sh-subshell-005-copy-of-environment.stdout
  724: 42sh-subshell-005-copy-of-environment.stdout.raw
  725: 42sh-subshell-errors-001-parse-error-1.stderr
  726: 42sh-subshell-errors-001-parse-error-1.stderr.raw
  727: 42sh-subshell-errors-001-parse-error-1.stdout
  728: 42sh-subshell-errors-001-parse-error-1.stdout.raw
  729: 42sh-subshell-errors-002-parse-error-2.stderr
  730: 42sh-subshell-errors-002-parse-error-2.stderr.raw
  731: 42sh-subshell-errors-002-parse-error-2.stdout
  732: 42sh-subshell-errors-002-parse-error-2.stdout.raw
  733: 42sh-subshell-errors-003-parse-error-3.stderr
  734: 42sh-subshell-errors-003-parse-error-3.stderr.raw
  735: 42sh-subshell-errors-003-parse-error-3.stdout
  736: 42sh-subshell-errors-003-parse-error-3.stdout.raw
  737: 42sh-subshell-errors-004-parse-error-4.stderr
  738: 42sh-subshell-errors-004-parse-error-4.stderr.raw
  739: 42sh-subshell-errors-004-parse-error-4.stdout
  740: 42sh-subshell-errors-004-parse-error-4.stdout.raw
  741: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stderr
  742: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stderr.raw
  743: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stdout
  744: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stdout.raw
  745: 42sh-subshell-mixed-builtins-cd-002-multiline.stderr
  746: 42sh-subshell-mixed-builtins-cd-002-multiline.stderr.raw
  747: 42sh-subshell-mixed-builtins-cd-002-multiline.stdout
  748: 42sh-subshell-mixed-builtins-cd-002-multiline.stdout.raw
  749: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stderr
  750: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stderr.raw
  751: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stdout
  752: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stdout.raw
  753: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stderr
  754: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stderr.raw
  755: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stdout
  756: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stdout.raw
  757: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stderr
  758: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stderr.raw
  759: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stdout
  760: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stdout.raw
  761: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stderr
  762: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stderr.raw
  763: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stdout
  764: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stdout.raw
  765: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stderr
  766: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stderr.raw
  767: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stdout
  768: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stdout.raw
  769: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stderr
  770: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stderr.raw
  771: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stdout
  772: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stdout.raw
  773: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stderr
  774: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stderr.raw
  775: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stdout
  776: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stdout.raw
  777: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stderr
  778: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stderr.raw
  779: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stdout
  780: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stdout.raw
  781: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stderr
  782: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stderr.raw
  783: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stdout
  784: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stdout.raw
  785: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stderr
  786: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stderr.raw
  787: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stdout
  788: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stdout.raw
  789: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stderr
  790: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stderr.raw
  791: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stdout
  792: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stdout.raw
  793: 42sh-subshell-mixed-quoting-002-with-double-quotes.stderr
  794: 42sh-subshell-mixed-quoting-002-with-double-quotes.stderr.raw
  795: 42sh-subshell-mixed-quoting-002-with-double-quotes.stdout
  796: 42sh-subshell-mixed-quoting-002-with-double-quotes.stdout.raw
  797: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stderr
  798: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stderr.raw
  799: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stdout
  800: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stdout.raw
  801: TOKEN201911091512
  802: TOKEN201911091512_006-BINARY-UNDEFINED-PATH
  803: TOKEN201911091513
  804: TOKEN201911091513_006-BINARY-UNDEFINED-PATH
  805: TOKEN201911091519
  806: TOKEN201911091519_006-BINARY-UNDEFINED-PATH
  807: TOKEN201911091532
  808: TOKEN201911091532_006-BINARY-UNDEFINED-PATH
  809: TOKEN201911091539
  810: TOKEN201911091539_006-BINARY-UNDEFINED-PATH
  811: TOKEN201911091627
  812: TOKEN201911091627_006-BINARY-UNDEFINED-PATH
  813: TOKEN201911091630
  814: TOKEN201911091630_006-BINARY-UNDEFINED-PATH
  815: TOKEN201911091647
  816: TOKEN201911091647_006-BINARY-UNDEFINED-PATH
  817: TOKEN201911091652
  818: TOKEN201911091652_006-BINARY-UNDEFINED-PATH
  819: TOKEN201911091655
  820: TOKEN201911091655_006-BINARY-UNDEFINED-PATH
  821: TOKEN201911091715
  822: TOKEN201911091715_006-BINARY-UNDEFINED-PATH
  823: TOKEN201911091717
  824: TOKEN201911091717_006-BINARY-UNDEFINED-PATH
  825: TOKEN201911091719
  826: TOKEN201911091719_006-BINARY-UNDEFINED-PATH
  827: TOKEN201911091723
  828: TOKEN201911091723_006-BINARY-UNDEFINED-PATH
  829: TOKEN201911101739
  830: TOKEN201911101739_006-BINARY-UNDEFINED-PATH
  831: TOKEN201911101756
  832: TOKEN201911101756_006-BINARY-UNDEFINED-PATH
  833: TOKEN201911101804
  834: TOKEN201911101804_006-BINARY-UNDEFINED-PATH
  835: TOKEN201911101815
  836: TOKEN201911101815_006-BINARY-UNDEFINED-PATH
  837: TOKEN201911101819
  838: TOKEN201911101819_006-BINARY-UNDEFINED-PATH
  839: TOKEN201911101825
  840: TOKEN201911101825_006-BINARY-UNDEFINED-PATH
  841: TOKEN201911101830
  842: TOKEN201911101830_006-BINARY-UNDEFINED-PATH
  843: TOKEN201911101832
  844: TOKEN201911101832_006-BINARY-UNDEFINED-PATH
  845: TOKEN201911102139
  846: TOKEN201911102139_006-BINARY-UNDEFINED-PATH
  847: TOKEN201911102141
  848: TOKEN201911102141_006-BINARY-UNDEFINED-PATH
  849: TOKEN201911102156
  850: TOKEN201911102156_006-BINARY-UNDEFINED-PATH
  851: TOKEN201911102156_SUBDIRECTORY
  852: TOKEN201911191219
  853: TOKEN201911191219_006-BINARY-UNDEFINED-PATH
  854: TOKEN201911191219_SUBDIRECTORY
  855: TOKEN201911191239
  856: TOKEN201911191239_006-BINARY-UNDEFINED-PATH
  857: TOKEN201911191239_SUBDIRECTORY
  858: TOKEN201911201137
  859: TOKEN201911201137_006-BINARY-UNDEFINED-PATH
  860: TOKEN201911201137_SUBDIRECTORY
  861: TOKEN201911201201
  862: TOKEN201911201201_006-BINARY-UNDEFINED-PATH
  863: TOKEN201911201201_SUBDIRECTORY
  864: TOKEN201911201211_006-BINARY-UNDEFINED-PATH
  865: TOKEN201911201211_SUBDIRECTORY
  866: TOKEN201911282055
  867: TOKEN201911282055_006-BINARY-UNDEFINED-PATH
  868: append_file_default
  869: append_file_stderr
  870: append_file_stdout
  871: bonuses-inline-environment-variable-001-modifies-child-environment-1.stderr
  872: bonuses-inline-environment-variable-001-modifies-child-environment-1.stderr.raw
  873: bonuses-inline-environment-variable-001-modifies-child-environment-1.stdout
  874: bonuses-inline-environment-variable-001-modifies-child-environment-1.stdout.raw
  875: bonuses-inline-environment-variable-002-modifies-child-environment-2.stderr
  876: bonuses-inline-environment-variable-002-modifies-child-environment-2.stderr.raw
  877: bonuses-inline-environment-variable-002-modifies-child-environment-2.stdout
  878: bonuses-inline-environment-variable-002-modifies-child-environment-2.stdout.raw
  879: bonuses-inline-environment-variable-003-modifies-PATH-only.stderr
  880: bonuses-inline-environment-variable-003-modifies-PATH-only.stderr.raw
  881: bonuses-inline-environment-variable-003-modifies-PATH-only.stdout
  882: bonuses-inline-environment-variable-003-modifies-PATH-only.stdout.raw
  883: bonuses-separators-and-001-run-twice.stderr
  884: bonuses-separators-and-001-run-twice.stderr.raw
  885: bonuses-separators-and-001-run-twice.stdout
  886: bonuses-separators-and-001-run-twice.stdout.raw
  887: bonuses-separators-and-002-do-not-run-second.stderr
  888: bonuses-separators-and-002-do-not-run-second.stderr.raw
  889: bonuses-separators-and-002-do-not-run-second.stdout
  890: bonuses-separators-and-002-do-not-run-second.stdout.raw
  891: bonuses-separators-and-003-run-until-failing.stderr
  892: bonuses-separators-and-003-run-until-failing.stderr.raw
  893: bonuses-separators-and-003-run-until-failing.stdout
  894: bonuses-separators-and-003-run-until-failing.stdout.raw
  895: bonuses-separators-and-errors-001-parse-error-at-beginning.stderr
  896: bonuses-separators-and-errors-001-parse-error-at-beginning.stderr.raw
  897: bonuses-separators-and-errors-001-parse-error-at-beginning.stdout
  898: bonuses-separators-and-errors-001-parse-error-at-beginning.stdout.raw
  899: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stderr
  900: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stderr.raw
  901: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stdout
  902: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stdout.raw
  903: bonuses-separators-mixed-001-and-or.stderr
  904: bonuses-separators-mixed-001-and-or.stderr.raw
  905: bonuses-separators-mixed-001-and-or.stdout
  906: bonuses-separators-mixed-001-and-or.stdout.raw
  907: bonuses-separators-mixed-002-and-or.stderr
  908: bonuses-separators-mixed-002-and-or.stderr.raw
  909: bonuses-separators-mixed-002-and-or.stdout
  910: bonuses-separators-mixed-002-and-or.stdout.raw
  911: bonuses-separators-mixed-003-and-or.stderr
  912: bonuses-separators-mixed-003-and-or.stderr.raw
  913: bonuses-separators-mixed-003-and-or.stdout
  914: bonuses-separators-mixed-003-and-or.stdout.raw
  915: bonuses-separators-mixed-004-or-and.stderr
  916: bonuses-separators-mixed-004-or-and.stderr.raw
  917: bonuses-separators-mixed-004-or-and.stdout
  918: bonuses-separators-mixed-004-or-and.stdout.raw
  919: bonuses-separators-mixed-005-or-and.stderr
  920: bonuses-separators-mixed-005-or-and.stderr.raw
  921: bonuses-separators-mixed-005-or-and.stdout
  922: bonuses-separators-mixed-005-or-and.stdout.raw
  923: bonuses-separators-mixed-006-or-and.stderr
  924: bonuses-separators-mixed-006-or-and.stderr.raw
  925: bonuses-separators-mixed-006-or-and.stdout
  926: bonuses-separators-mixed-006-or-and.stdout.raw
  927: bonuses-separators-or-001-run-first-only.stderr
  928: bonuses-separators-or-001-run-first-only.stderr.raw
  929: bonuses-separators-or-001-run-first-only.stdout
  930: bonuses-separators-or-001-run-first-only.stdout.raw
  931: bonuses-separators-or-002-run-second-only.stderr
  932: bonuses-separators-or-002-run-second-only.stderr.raw
  933: bonuses-separators-or-002-run-second-only.stdout
  934: bonuses-separators-or-002-run-second-only.stdout.raw
  935: bonuses-separators-or-003-run-until-succeeding.stderr
  936: bonuses-separators-or-003-run-until-succeeding.stderr.raw
  937: bonuses-separators-or-003-run-until-succeeding.stdout
  938: bonuses-separators-or-003-run-until-succeeding.stdout.raw
  939: bonuses-separators-or-errors-001-parse-error-at-beginning.stderr
  940: bonuses-separators-or-errors-001-parse-error-at-beginning.stderr.raw
  941: bonuses-separators-or-errors-001-parse-error-at-beginning.stdout
  942: bonuses-separators-or-errors-001-parse-error-at-beginning.stdout.raw
  943: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stderr
  944: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stderr.raw
  945: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stdout
  946: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stdout.raw
  947: bonuses-tilde-expansion-001-expanded-with-HOME-1.stderr
  948: bonuses-tilde-expansion-001-expanded-with-HOME-1.stderr.raw
  949: bonuses-tilde-expansion-001-expanded-with-HOME-1.stdout
  950: bonuses-tilde-expansion-001-expanded-with-HOME-1.stdout.raw
  951: bonuses-tilde-expansion-002-expanded-with-HOME-2.stderr
  952: bonuses-tilde-expansion-002-expanded-with-HOME-2.stderr.raw
  953: bonuses-tilde-expansion-002-expanded-with-HOME-2.stdout
  954: bonuses-tilde-expansion-002-expanded-with-HOME-2.stdout.raw
  955: bonuses-tilde-expansion-003-expanded-with-PWD-1.stderr
  956: bonuses-tilde-expansion-003-expanded-with-PWD-1.stderr.raw
  957: bonuses-tilde-expansion-003-expanded-with-PWD-1.stdout
  958: bonuses-tilde-expansion-003-expanded-with-PWD-1.stdout.raw
  959: bonuses-tilde-expansion-004-expanded-with-PWD-2.stderr
  960: bonuses-tilde-expansion-004-expanded-with-PWD-2.stderr.raw
  961: bonuses-tilde-expansion-004-expanded-with-PWD-2.stdout
  962: bonuses-tilde-expansion-004-expanded-with-PWD-2.stdout.raw
  963: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stderr
  964: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stderr.raw
  965: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stdout
  966: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stdout.raw
  967: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stderr
  968: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stderr.raw
  969: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stdout
  970: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stdout.raw
  971: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stderr
  972: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stderr.raw
  973: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stdout
  974: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stdout.raw
  975: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stderr
  976: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stderr.raw
  977: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stdout
  978: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stdout.raw
  979: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stderr
  980: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stderr.raw
  981: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stdout
  982: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stdout.raw
  983: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stderr
  984: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stderr.raw
  985: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stdout
  986: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stdout.raw
  987: display_env
  988: display_program_name
  989: display_pwd
  990: enoent_symlink
  991: exit_with_status
  992: minishell-binary-001-binary-path-relative.stderr
  993: minishell-binary-001-binary-path-relative.stderr.raw
  994: minishell-binary-001-binary-path-relative.stdout
  995: minishell-binary-001-binary-path-relative.stdout.raw
  996: minishell-binary-002-binary-path-absolute.stderr
  997: minishell-binary-002-binary-path-absolute.stderr.raw
  998: minishell-binary-002-binary-path-absolute.stdout
  999: minishell-binary-002-binary-path-absolute.stdout.raw
  1000: minishell-binary-003-binary-test-exec-order.stderr
  1001: minishell-binary-003-binary-test-exec-order.stderr.raw
  1002: minishell-binary-003-binary-test-exec-order.stdout
  1003: minishell-binary-003-binary-test-exec-order.stdout.raw
  1004: minishell-binary-004-binary-test-empty-path.stderr
  1005: minishell-binary-004-binary-test-empty-path.stderr.raw
  1006: minishell-binary-004-binary-test-empty-path.stdout
  1007: minishell-binary-004-binary-test-empty-path.stdout.raw
  1008: minishell-binary-005-binary-test-wrong-path.stderr
  1009: minishell-binary-005-binary-test-wrong-path.stderr.raw
  1010: minishell-binary-005-binary-test-wrong-path.stdout
  1011: minishell-binary-005-binary-test-wrong-path.stdout.raw
  1012: minishell-binary-006-binary-undefined-path.stderr
  1013: minishell-binary-006-binary-undefined-path.stderr.raw
  1014: minishell-binary-006-binary-undefined-path.stdout
  1015: minishell-binary-006-binary-undefined-path.stdout.raw
  1016: minishell-binary-007-binary-permission-denied.stderr
  1017: minishell-binary-007-binary-permission-denied.stderr.raw
  1018: minishell-binary-007-binary-permission-denied.stdout
  1019: minishell-binary-007-binary-permission-denied.stdout.raw
  1020: minishell-binary-008-binary-too-many-symbolic-links-encountered.stderr
  1021: minishell-binary-008-binary-too-many-symbolic-links-encountered.stderr.raw
  1022: minishell-binary-008-binary-too-many-symbolic-links-encountered.stdout
  1023: minishell-binary-008-binary-too-many-symbolic-links-encountered.stdout.raw
  1024: minishell-builtins-cd-001-no-arg.stderr
  1025: minishell-builtins-cd-001-no-arg.stderr.raw
  1026: minishell-builtins-cd-001-no-arg.stdout
  1027: minishell-builtins-cd-001-no-arg.stdout.raw
  1028: minishell-builtins-cd-002-current-directory.stderr
  1029: minishell-builtins-cd-002-current-directory.stderr.raw
  1030: minishell-builtins-cd-002-current-directory.stdout
  1031: minishell-builtins-cd-002-current-directory.stdout.raw
  1032: minishell-builtins-cd-003-current-directory-2.stderr
  1033: minishell-builtins-cd-003-current-directory-2.stderr.raw
  1034: minishell-builtins-cd-003-current-directory-2.stdout
  1035: minishell-builtins-cd-003-current-directory-2.stdout.raw
  1036: minishell-builtins-cd-004-parent-directory.stderr
  1037: minishell-builtins-cd-004-parent-directory.stderr.raw
  1038: minishell-builtins-cd-004-parent-directory.stdout
  1039: minishell-builtins-cd-004-parent-directory.stdout.raw
  1040: minishell-builtins-cd-005-root-path.stderr
  1041: minishell-builtins-cd-005-root-path.stderr.raw
  1042: minishell-builtins-cd-005-root-path.stdout
  1043: minishell-builtins-cd-005-root-path.stdout.raw
  1044: minishell-builtins-cd-006-root-path-2.stderr
  1045: minishell-builtins-cd-006-root-path-2.stderr.raw
  1046: minishell-builtins-cd-006-root-path-2.stdout
  1047: minishell-builtins-cd-006-root-path-2.stdout.raw
  1048: minishell-builtins-cd-007-symbolic-link.stderr
  1049: minishell-builtins-cd-007-symbolic-link.stderr.raw
  1050: minishell-builtins-cd-007-symbolic-link.stdout
  1051: minishell-builtins-cd-007-symbolic-link.stdout.raw
  1052: minishell-builtins-cd-008-symbolic-link-2.stderr
  1053: minishell-builtins-cd-008-symbolic-link-2.stderr.raw
  1054: minishell-builtins-cd-008-symbolic-link-2.stdout
  1055: minishell-builtins-cd-008-symbolic-link-2.stdout.raw
  1056: minishell-builtins-cd-010-update-OLDPWD.stderr
  1057: minishell-builtins-cd-010-update-OLDPWD.stderr.raw
  1058: minishell-builtins-cd-010-update-OLDPWD.stdout
  1059: minishell-builtins-cd-010-update-OLDPWD.stdout.raw
  1060: minishell-builtins-cd-011-dotdot.stderr
  1061: minishell-builtins-cd-011-dotdot.stderr.raw
  1062: minishell-builtins-cd-011-dotdot.stdout
  1063: minishell-builtins-cd-011-dotdot.stdout.raw
  1064: minishell-builtins-cd-012-dot.stderr
  1065: minishell-builtins-cd-012-dot.stderr.raw
  1066: minishell-builtins-cd-012-dot.stdout
  1067: minishell-builtins-cd-012-dot.stdout.raw
  1068: minishell-builtins-cd-013-absolute-path.stderr
  1069: minishell-builtins-cd-013-absolute-path.stderr.raw
  1070: minishell-builtins-cd-013-absolute-path.stdout
  1071: minishell-builtins-cd-013-absolute-path.stdout.raw
  1072: minishell-builtins-cd-errors-001-not-a-directory.stderr
  1073: minishell-builtins-cd-errors-001-not-a-directory.stderr.raw
  1074: minishell-builtins-cd-errors-001-not-a-directory.stdout
  1075: minishell-builtins-cd-errors-001-not-a-directory.stdout.raw
  1076: minishell-builtins-cd-errors-002-not-a-directory-2.stderr
  1077: minishell-builtins-cd-errors-002-not-a-directory-2.stderr.raw
  1078: minishell-builtins-cd-errors-002-not-a-directory-2.stdout
  1079: minishell-builtins-cd-errors-002-not-a-directory-2.stdout.raw
  1080: minishell-builtins-cd-errors-003-permission-denied.stderr
  1081: minishell-builtins-cd-errors-003-permission-denied.stderr.raw
  1082: minishell-builtins-cd-errors-003-permission-denied.stdout
  1083: minishell-builtins-cd-errors-003-permission-denied.stdout.raw
  1084: minishell-builtins-cd-errors-004-permission-denied-2.stderr
  1085: minishell-builtins-cd-errors-004-permission-denied-2.stderr.raw
  1086: minishell-builtins-cd-errors-004-permission-denied-2.stdout
  1087: minishell-builtins-cd-errors-004-permission-denied-2.stdout.raw
  1088: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stderr
  1089: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stderr.raw
  1090: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stdout
  1091: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stdout.raw
  1092: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stderr
  1093: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stderr.raw
  1094: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stdout
  1095: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stdout.raw
  1096: minishell-builtins-cd-errors-007-no-such-file-or-directory.stderr
  1097: minishell-builtins-cd-errors-007-no-such-file-or-directory.stderr.raw
  1098: minishell-builtins-cd-errors-007-no-such-file-or-directory.stdout
  1099: minishell-builtins-cd-errors-007-no-such-file-or-directory.stdout.raw
  1100: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stderr
  1101: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stderr.raw
  1102: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stdout
  1103: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stdout.raw
  1104: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stderr
  1105: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stderr.raw
  1106: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stdout
  1107: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stdout.raw
  1108: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stderr
  1109: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stderr.raw
  1110: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stdout
  1111: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stdout.raw
  1112: minishell-builtins-cd-options-001-not-following-links.stderr
  1113: minishell-builtins-cd-options-001-not-following-links.stderr.raw
  1114: minishell-builtins-cd-options-001-not-following-links.stdout
  1115: minishell-builtins-cd-options-001-not-following-links.stdout.raw
  1116: minishell-builtins-cd-options-002-oldpwd.stderr
  1117: minishell-builtins-cd-options-002-oldpwd.stderr.raw
  1118: minishell-builtins-cd-options-002-oldpwd.stdout
  1119: minishell-builtins-cd-options-002-oldpwd.stdout.raw
  1120: minishell-builtins-env-001-env-same-value-as-parent.stderr
  1121: minishell-builtins-env-001-env-same-value-as-parent.stderr.raw
  1122: minishell-builtins-env-001-env-same-value-as-parent.stdout
  1123: minishell-builtins-env-001-env-same-value-as-parent.stdout.raw
  1124: minishell-builtins-env-002-env-check-usefull-var.stderr
  1125: minishell-builtins-env-002-env-check-usefull-var.stderr.raw
  1126: minishell-builtins-env-002-env-check-usefull-var.stdout
  1127: minishell-builtins-env-002-env-check-usefull-var.stdout.raw
  1128: minishell-builtins-env-003-ignore-environment.stderr
  1129: minishell-builtins-env-003-ignore-environment.stderr.raw
  1130: minishell-builtins-env-003-ignore-environment.stdout
  1131: minishell-builtins-env-003-ignore-environment.stdout.raw
  1132: minishell-builtins-env-005-set-variables.stderr
  1133: minishell-builtins-env-005-set-variables.stderr.raw
  1134: minishell-builtins-env-005-set-variables.stdout
  1135: minishell-builtins-env-005-set-variables.stdout.raw
  1136: minishell-builtins-env-errors-001-command-not-found.stderr
  1137: minishell-builtins-env-errors-001-command-not-found.stderr.raw
  1138: minishell-builtins-env-errors-001-command-not-found.stdout
  1139: minishell-builtins-env-errors-001-command-not-found.stdout.raw
  1140: minishell-builtins-env-errors-002-illegal-option.stderr
  1141: minishell-builtins-env-errors-002-illegal-option.stderr.raw
  1142: minishell-builtins-env-errors-002-illegal-option.stdout
  1143: minishell-builtins-env-errors-002-illegal-option.stdout.raw
  1144: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stderr
  1145: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stderr.raw
  1146: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stdout
  1147: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stdout.raw
  1148: minishell-builtins-exit-001-without-any-argument.stderr
  1149: minishell-builtins-exit-001-without-any-argument.stderr.raw
  1150: minishell-builtins-exit-001-without-any-argument.stdout
  1151: minishell-builtins-exit-001-without-any-argument.stdout.raw
  1152: minishell-builtins-exit-002-status-passed-as-argument.stderr
  1153: minishell-builtins-exit-002-status-passed-as-argument.stderr.raw
  1154: minishell-builtins-exit-002-status-passed-as-argument.stdout
  1155: minishell-builtins-exit-002-status-passed-as-argument.stdout.raw
  1156: minishell-builtins-exit-003-status-of-last-command.stderr
  1157: minishell-builtins-exit-003-status-of-last-command.stderr.raw
  1158: minishell-builtins-exit-003-status-of-last-command.stdout
  1159: minishell-builtins-exit-003-status-of-last-command.stdout.raw
  1160: minishell-builtins-exit-errors-001-too-many-args.stderr
  1161: minishell-builtins-exit-errors-001-too-many-args.stderr.raw
  1162: minishell-builtins-exit-errors-001-too-many-args.stdout
  1163: minishell-builtins-exit-errors-001-too-many-args.stdout.raw
  1164: minishell-builtins-exit-errors-002-non-numeric-argument.stderr
  1165: minishell-builtins-exit-errors-002-non-numeric-argument.stderr.raw
  1166: minishell-builtins-exit-errors-002-non-numeric-argument.stdout
  1167: minishell-builtins-exit-errors-002-non-numeric-argument.stdout.raw
  1168: minishell-builtins-mixed-001-setenv-unsetenv.stderr
  1169: minishell-builtins-mixed-001-setenv-unsetenv.stderr.raw
  1170: minishell-builtins-mixed-001-setenv-unsetenv.stdout
  1171: minishell-builtins-mixed-001-setenv-unsetenv.stdout.raw
  1172: minishell-builtins-setenv-001-no-argument.stderr
  1173: minishell-builtins-setenv-001-no-argument.stderr.raw
  1174: minishell-builtins-setenv-001-no-argument.stdout
  1175: minishell-builtins-setenv-001-no-argument.stdout.raw
  1176: minishell-builtins-setenv-002-add-new-variable.stderr
  1177: minishell-builtins-setenv-002-add-new-variable.stderr.raw
  1178: minishell-builtins-setenv-002-add-new-variable.stdout
  1179: minishell-builtins-setenv-002-add-new-variable.stdout.raw
  1180: minishell-builtins-setenv-003-set-existing-variable.stderr
  1181: minishell-builtins-setenv-003-set-existing-variable.stderr.raw
  1182: minishell-builtins-setenv-003-set-existing-variable.stdout
  1183: minishell-builtins-setenv-003-set-existing-variable.stdout.raw
  1184: minishell-builtins-setenv-004-invalid-identifier.stderr
  1185: minishell-builtins-setenv-004-invalid-identifier.stderr.raw
  1186: minishell-builtins-setenv-004-invalid-identifier.stdout
  1187: minishell-builtins-setenv-004-invalid-identifier.stdout.raw
  1188: minishell-builtins-setenv-005-add-and-set-multiple-variables.stderr
  1189: minishell-builtins-setenv-005-add-and-set-multiple-variables.stderr.raw
  1190: minishell-builtins-setenv-005-add-and-set-multiple-variables.stdout
  1191: minishell-builtins-setenv-005-add-and-set-multiple-variables.stdout.raw
  1192: minishell-builtins-unsetenv-001-unsetenv-first-elem.stderr
  1193: minishell-builtins-unsetenv-001-unsetenv-first-elem.stderr.raw
  1194: minishell-builtins-unsetenv-001-unsetenv-first-elem.stdout
  1195: minishell-builtins-unsetenv-001-unsetenv-first-elem.stdout.raw
  1196: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stderr
  1197: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stderr.raw
  1198: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stdout
  1199: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stdout.raw
  1200: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stderr
  1201: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stderr.raw
  1202: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stdout
  1203: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stdout.raw
  1204: minishell-misc-001-copy-of-environment.stderr
  1205: minishell-misc-001-copy-of-environment.stderr.raw
  1206: minishell-misc-001-copy-of-environment.stdout
  1207: minishell-misc-001-copy-of-environment.stdout.raw
  1208: my_sub_directory
  1209: not_a_directory
  1210: playing_with_dotdot
  1211: read_on_stdin
  1212: simple_text_file
  1213: size
  1214: sleep_and_exit_with_status
  1215: sleep_and_write_on_stderr
  1216: stdin
  1217: stored_env
  1218: sub_directory
  1219: sub_directory_link
  1220: symbolic_link
  1221: symbolic_link1
  1222: symbolic_link2
  1223: symbolic_link3
  1224: temporary_directory
  1225: test_globbing
  1226: truncated_file
  1227: virtual_path
  1228: virtual_path_1
  1229: virtual_path_2
  1230: write_all_arguments_on_stdout
  1231: write_on_stderr
  1232: write_on_stdout
  1233: write_on_stdout_and_stderr[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [ls] (1)-0
  02: [] (39)-2[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/004-binary-test-empty-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell finds binaries that are located in the current directory when the environment variable PATH is empty.[0m

  Before test:
[38;5;239m  01: export PATH=""[0m

  STDIN:
[38;5;239m  01: write_on_stdout "TOKEN201911282055"[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [write_on_stdout] (1)-0
  02: ["TOKEN201911282055"] (1)-16
  03: [] (39)-35[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/001-binary-path-relative[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries within the PATH.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path/p1" "./virtual_path/p2"
  02: rm -f "./virtual_path/p1/display_my_name1" "./virtual_path/p2/display_my_name2"
  03: cp "./display_program_name" "./virtual_path/p1/display_my_name1"
  04: cp "./display_program_name" "./virtual_path/p2/display_my_name2"
  05: export PATH="/Users/Jerry/Desktop/42ShellTester/tmp/virtual_path/p1:/Users/Jerry/Desktop/42ShellTester/tmp/virtual_path/p2"[0m

  STDIN:
[38;5;239m  01: display_my_name1
  02: display_my_name2[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `display_my_name1`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `display_my_name2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [display_my_name1] (1)-0
  02: [] (39)-16
  03: [display_my_name2] (1)-17
  04: [] (39)-33
  05: display_my_name1: command not found
  06: display_my_name2: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/003-binary-test-exec-order[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries by iterating on paths within the environment variable PATH from left to right.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path_1" "./virtual_path_2"
  02: cp "./write_on_stdout" "./virtual_path_1/fake_echo"
  03: cp "./write_on_stderr" "./virtual_path_2/fake_echo"
  04: export PATH="/Users/Jerry/Desktop/42ShellTester/tmp/virtual_path_1:/Users/Jerry/Desktop/42ShellTester/tmp/virtual_path_2"[0m

  STDIN:
[38;5;239m  01: fake_echo TOKEN201911282055[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex TOKEN201911282055[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [fake_echo] (1)-0
  02: [TOKEN201911282055] (1)-10
  03: [] (39)-27
  04: fake_echo: command not found[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/002-binary-path-absolute[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell correctly finds binaries through their absolute path.[0m

  Before test:
[38;5;239m  01: mkdir -p "./virtual_path"
  02: rm -f "./virtual_path/write_on_stdout"
  03: cp "./write_on_stdout" "./virtual_path/write_on_stdout"
  04: export PATH=""[0m

  STDIN:
[38;5;239m  01: /Users/Jerry/Desktop/42ShellTester/tmp/write_on_stdout TOKEN201911282055_1
  02: /Users/Jerry/Desktop/42ShellTester/tmp/virtual_path/write_on_stdout TOKEN201911282055_2[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: TOKEN201911282055_1
  02: TOKEN201911282055_2[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [/Users/Jerry/Desktop/42ShellTester/tmp/write_on_stdout] (1)-0
  02: [TOKEN201911282055_1] (1)-55
  03: [] (39)-74
  04: [/Users/Jerry/Desktop/42ShellTester/tmp/virtual_path/write_on_stdout] (1)-75
  05: [TOKEN201911282055_2] (1)-143
  06: [] (39)-162[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/005-binary-test-wrong-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  This test purpose is to check if your shell is not able to use binary with a wrong PATH
  We are changing the actual PATH by PATH=NULL
  And executing the commande ls[0m

  Before test:
[38;5;239m  01: export PATH="/"[0m

  STDIN:
[38;5;239m  01: ls[0m

  STDOUT:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: $TOKEN201911102156_NAME
  02: $TOKEN201911191213_NAME
  03: $TOKEN201911191219_NAME
  04: $TOKEN201911191239_NAME
  05: $TOKEN201911201137_NAME
  06: $TOKEN201911201201_NAME
  07: $TOKEN201911282055_NAME
  08: -
  09: 21sh-misc-001-no-prompt-in-non-interactive-mode.stderr
  10: 21sh-misc-001-no-prompt-in-non-interactive-mode.stderr.raw
  11: 21sh-misc-001-no-prompt-in-non-interactive-mode.stdout
  12: 21sh-misc-001-no-prompt-in-non-interactive-mode.stdout.raw
  13: 21sh-misc-002-simple-command-line.stderr
  14: 21sh-misc-002-simple-command-line.stderr.raw
  15: 21sh-misc-002-simple-command-line.stdout
  16: 21sh-misc-002-simple-command-line.stdout.raw
  17: 21sh-pipe-001-single-pipe.stderr
  18: 21sh-pipe-001-single-pipe.stderr.raw
  19: 21sh-pipe-001-single-pipe.stdout
  20: 21sh-pipe-001-single-pipe.stdout.raw
  21: 21sh-pipe-002-chained-pipes.stderr
  22: 21sh-pipe-002-chained-pipes.stderr.raw
  23: 21sh-pipe-002-chained-pipes.stdout
  24: 21sh-pipe-002-chained-pipes.stdout.raw
  25: 21sh-pipe-003-many-chained-pipes.stderr
  26: 21sh-pipe-003-many-chained-pipes.stderr.raw
  27: 21sh-pipe-003-many-chained-pipes.stdout
  28: 21sh-pipe-003-many-chained-pipes.stdout.raw
  29: 21sh-pipe-004-without-surrounding-whitespaces.stderr
  30: 21sh-pipe-004-without-surrounding-whitespaces.stderr.raw
  31: 21sh-pipe-004-without-surrounding-whitespaces.stdout
  32: 21sh-pipe-004-without-surrounding-whitespaces.stdout.raw
  33: 21sh-pipe-005-asynchronous.stderr
  34: 21sh-pipe-005-asynchronous.stderr.raw
  35: 21sh-pipe-005-asynchronous.stdout
  36: 21sh-pipe-005-asynchronous.stdout.raw
  37: 21sh-pipe-006-exit-status.stderr
  38: 21sh-pipe-006-exit-status.stderr.raw
  39: 21sh-pipe-006-exit-status.stdout
  40: 21sh-pipe-006-exit-status.stdout.raw
  41: 21sh-redirections-inputs-001-close-stdin.stderr
  42: 21sh-redirections-inputs-001-close-stdin.stderr.raw
  43: 21sh-redirections-inputs-001-close-stdin.stdout
  44: 21sh-redirections-inputs-001-close-stdin.stdout.raw
  45: 21sh-redirections-inputs-002-filename.stderr
  46: 21sh-redirections-inputs-002-filename.stderr.raw
  47: 21sh-redirections-inputs-002-filename.stdout
  48: 21sh-redirections-inputs-002-filename.stdout.raw
  49: 21sh-redirections-inputs-003-filename-with-whitespaces.stderr
  50: 21sh-redirections-inputs-003-filename-with-whitespaces.stderr.raw
  51: 21sh-redirections-inputs-003-filename-with-whitespaces.stdout
  52: 21sh-redirections-inputs-003-filename-with-whitespaces.stdout.raw
  53: 21sh-redirections-inputs-004-absolute-path.stderr
  54: 21sh-redirections-inputs-004-absolute-path.stderr.raw
  55: 21sh-redirections-inputs-004-absolute-path.stdout
  56: 21sh-redirections-inputs-004-absolute-path.stdout.raw
  57: 21sh-redirections-inputs-005-no-such-file.stderr
  58: 21sh-redirections-inputs-005-no-such-file.stderr.raw
  59: 21sh-redirections-inputs-005-no-such-file.stdout
  60: 21sh-redirections-inputs-005-no-such-file.stdout.raw
  61: 21sh-redirections-outputs-appending-001-append-default-to-file.stderr
  62: 21sh-redirections-outputs-appending-001-append-default-to-file.stderr.raw
  63: 21sh-redirections-outputs-appending-001-append-default-to-file.stdout
  64: 21sh-redirections-outputs-appending-001-append-default-to-file.stdout.raw
  65: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stderr
  66: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stderr.raw
  67: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stdout
  68: 21sh-redirections-outputs-appending-002-append-stdout-to-file.stdout.raw
  69: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stderr
  70: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stderr.raw
  71: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stdout
  72: 21sh-redirections-outputs-appending-003-append-stderr-to-file.stdout.raw
  73: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stderr
  74: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stderr.raw
  75: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stdout
  76: 21sh-redirections-outputs-appending-multiple-001-append-twice-separately.stdout.raw
  77: 21sh-redirections-outputs-closing-001-close-default-output.stderr
  78: 21sh-redirections-outputs-closing-001-close-default-output.stderr.raw
  79: 21sh-redirections-outputs-closing-001-close-default-output.stdout
  80: 21sh-redirections-outputs-closing-001-close-default-output.stdout.raw
  81: 21sh-redirections-outputs-closing-002-close-stdout.stderr
  82: 21sh-redirections-outputs-closing-002-close-stdout.stderr.raw
  83: 21sh-redirections-outputs-closing-002-close-stdout.stdout
  84: 21sh-redirections-outputs-closing-002-close-stdout.stdout.raw
  85: 21sh-redirections-outputs-closing-003-close-stderr.stderr
  86: 21sh-redirections-outputs-closing-003-close-stderr.stderr.raw
  87: 21sh-redirections-outputs-closing-003-close-stderr.stdout
  88: 21sh-redirections-outputs-closing-003-close-stderr.stdout.raw
  89: 21sh-redirections-outputs-closing-004-close-twice-outputs.stderr
  90: 21sh-redirections-outputs-closing-004-close-twice-outputs.stderr.raw
  91: 21sh-redirections-outputs-closing-004-close-twice-outputs.stdout
  92: 21sh-redirections-outputs-closing-004-close-twice-outputs.stdout.raw
  93: 21sh-redirections-outputs-touching-001-works.stderr
  94: 21sh-redirections-outputs-touching-001-works.stderr.raw
  95: 21sh-redirections-outputs-touching-001-works.stdout
  96: 21sh-redirections-outputs-touching-001-works.stdout.raw
  97: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stderr
  98: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stderr.raw
  99: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stdout
  100: 21sh-redirections-outputs-truncating-001-creates-file-if-not-exits.stdout.raw
  101: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stderr
  102: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stderr.raw
  103: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stdout
  104: 21sh-redirections-outputs-truncating-002-truncates-file-if-exists.stdout.raw
  105: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stderr
  106: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stderr.raw
  107: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stdout
  108: 21sh-redirections-outputs-truncating-003-whitespace-before-filename.stdout.raw
  109: 21sh-redirections-outputs-truncating-multiple-001-separately.stderr
  110: 21sh-redirections-outputs-truncating-multiple-001-separately.stderr.raw
  111: 21sh-redirections-outputs-truncating-multiple-001-separately.stdout
  112: 21sh-redirections-outputs-truncating-multiple-001-separately.stdout.raw
  113: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stderr
  114: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stderr.raw
  115: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stdout
  116: 21sh-redirections-outputs-truncating-multiple-002-together-stdout-first.stdout.raw
  117: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stderr
  118: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stderr.raw
  119: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stdout
  120: 21sh-redirections-outputs-truncating-multiple-003-together-stderr-first.stdout.raw
  121: 21sh-redirections-outputs-truncating-multiple-004-together.stderr
  122: 21sh-redirections-outputs-truncating-multiple-004-together.stderr.raw
  123: 21sh-redirections-outputs-truncating-multiple-004-together.stdout
  124: 21sh-redirections-outputs-truncating-multiple-004-together.stdout.raw
  125: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stderr
  126: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stderr.raw
  127: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stdout
  128: 21sh-redirections-outputs-truncating-multiple-005-together-with-whitespaces.stdout.raw
  129: 21sh-redirections-outputs-truncating-stderr-001-works.stderr
  130: 21sh-redirections-outputs-truncating-stderr-001-works.stderr.raw
  131: 21sh-redirections-outputs-truncating-stderr-001-works.stdout
  132: 21sh-redirections-outputs-truncating-stderr-001-works.stdout.raw
  133: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stderr
  134: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stderr.raw
  135: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stdout
  136: 21sh-redirections-outputs-truncating-stdout-001-with-explicit-fd.stdout.raw
  137: 21sh-separators-semicolon-001-two-commands-sequentially.stderr
  138: 21sh-separators-semicolon-001-two-commands-sequentially.stderr.raw
  139: 21sh-separators-semicolon-001-two-commands-sequentially.stdout
  140: 21sh-separators-semicolon-001-two-commands-sequentially.stdout.raw
  141: 21sh-separators-semicolon-002-n-commands-sequentially.stderr
  142: 21sh-separators-semicolon-002-n-commands-sequentially.stderr.raw
  143: 21sh-separators-semicolon-002-n-commands-sequentially.stdout
  144: 21sh-separators-semicolon-002-n-commands-sequentially.stdout.raw
  145: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stderr
  146: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stderr.raw
  147: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stdout
  148: 21sh-separators-semicolon-003-parse-error-empty-inline-command.stdout.raw
  149: 21sh-separators-semicolon-004-parse-error-empty-command.stderr
  150: 21sh-separators-semicolon-004-parse-error-empty-command.stderr.raw
  151: 21sh-separators-semicolon-004-parse-error-empty-command.stdout
  152: 21sh-separators-semicolon-004-parse-error-empty-command.stdout.raw
  153: 42sh-builtins-export-001-display-env.stderr
  154: 42sh-builtins-export-001-display-env.stderr.raw
  155: 42sh-builtins-export-001-display-env.stdout
  156: 42sh-builtins-export-001-display-env.stdout.raw
  157: 42sh-builtins-export-002-export-basic-key-value-1.stderr
  158: 42sh-builtins-export-002-export-basic-key-value-1.stderr.raw
  159: 42sh-builtins-export-002-export-basic-key-value-1.stdout
  160: 42sh-builtins-export-002-export-basic-key-value-1.stdout.raw
  161: 42sh-builtins-export-003-export-basic-key-value-2.stderr
  162: 42sh-builtins-export-003-export-basic-key-value-2.stderr.raw
  163: 42sh-builtins-export-003-export-basic-key-value-2.stdout
  164: 42sh-builtins-export-003-export-basic-key-value-2.stdout.raw
  165: 42sh-builtins-export-004-export-empty-variable-1.stderr
  166: 42sh-builtins-export-004-export-empty-variable-1.stderr.raw
  167: 42sh-builtins-export-004-export-empty-variable-1.stdout
  168: 42sh-builtins-export-004-export-empty-variable-1.stdout.raw
  169: 42sh-builtins-export-005-export-empty-variable-2.stderr
  170: 42sh-builtins-export-005-export-empty-variable-2.stderr.raw
  171: 42sh-builtins-export-005-export-empty-variable-2.stdout
  172: 42sh-builtins-export-005-export-empty-variable-2.stdout.raw
  173: 42sh-builtins-export-006-export-update-env-variable.stderr
  174: 42sh-builtins-export-006-export-update-env-variable.stderr.raw
  175: 42sh-builtins-export-006-export-update-env-variable.stdout
  176: 42sh-builtins-export-006-export-update-env-variable.stdout.raw
  177: 42sh-builtins-export-007-existing-environment-variable.stderr
  178: 42sh-builtins-export-007-existing-environment-variable.stderr.raw
  179: 42sh-builtins-export-007-existing-environment-variable.stdout
  180: 42sh-builtins-export-007-existing-environment-variable.stdout.raw
  181: 42sh-builtins-export-008-local-to-environment.stderr
  182: 42sh-builtins-export-008-local-to-environment.stderr.raw
  183: 42sh-builtins-export-008-local-to-environment.stdout
  184: 42sh-builtins-export-008-local-to-environment.stdout.raw
  185: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stderr
  186: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stderr.raw
  187: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stdout
  188: 42sh-builtins-export-009-export-with-equal-but-no-value-part1.stdout.raw
  189: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stderr
  190: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stderr.raw
  191: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stdout
  192: 42sh-builtins-export-010-export-with-equal-but-no-value-part2.stdout.raw
  193: 42sh-builtins-export-errors-001-invalid-identifier-1.stderr
  194: 42sh-builtins-export-errors-001-invalid-identifier-1.stderr.raw
  195: 42sh-builtins-export-errors-001-invalid-identifier-1.stdout
  196: 42sh-builtins-export-errors-001-invalid-identifier-1.stdout.raw
  197: 42sh-builtins-export-errors-002-invalid-identifier-2.stderr
  198: 42sh-builtins-export-errors-002-invalid-identifier-2.stderr.raw
  199: 42sh-builtins-export-errors-002-invalid-identifier-2.stdout
  200: 42sh-builtins-export-errors-002-invalid-identifier-2.stdout.raw
  201: 42sh-builtins-export-errors-003-illegal-option.stderr
  202: 42sh-builtins-export-errors-003-illegal-option.stderr.raw
  203: 42sh-builtins-export-errors-003-illegal-option.stdout
  204: 42sh-builtins-export-errors-003-illegal-option.stdout.raw
  205: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stderr
  206: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stderr.raw
  207: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stdout
  208: 42sh-builtins-export-mixed-001-export-and-tmp-env-part1.stdout.raw
  209: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stderr
  210: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stderr.raw
  211: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stdout
  212: 42sh-builtins-export-mixed-002-export-and-tmp-env-part2.stdout.raw
  213: 42sh-builtins-export-options-001-export-with-only-p-parameter.stderr
  214: 42sh-builtins-export-options-001-export-with-only-p-parameter.stderr.raw
  215: 42sh-builtins-export-options-001-export-with-only-p-parameter.stdout
  216: 42sh-builtins-export-options-001-export-with-only-p-parameter.stdout.raw
  217: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stderr
  218: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stderr.raw
  219: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stdout
  220: 42sh-builtins-export-options-002-export-p-param-and-token-should-add-local-var-only-part1.stdout.raw
  221: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stderr
  222: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stderr.raw
  223: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stdout
  224: 42sh-builtins-export-options-003-export-p-param-and-token-should-add-local-var-only-part2.stdout.raw
  225: 42sh-builtins-export-options-004-export-n-param.stderr
  226: 42sh-builtins-export-options-004-export-n-param.stderr.raw
  227: 42sh-builtins-export-options-004-export-n-param.stdout
  228: 42sh-builtins-export-options-004-export-n-param.stdout.raw
  229: 42sh-escaping-001-escape-single-character-1.stderr
  230: 42sh-escaping-001-escape-single-character-1.stderr.raw
  231: 42sh-escaping-001-escape-single-character-1.stdout
  232: 42sh-escaping-001-escape-single-character-1.stdout.raw
  233: 42sh-escaping-002-escape-single-character-2.stderr
  234: 42sh-escaping-002-escape-single-character-2.stderr.raw
  235: 42sh-escaping-002-escape-single-character-2.stdout
  236: 42sh-escaping-002-escape-single-character-2.stdout.raw
  237: 42sh-escaping-003-escape-single-character-3.stderr
  238: 42sh-escaping-003-escape-single-character-3.stderr.raw
  239: 42sh-escaping-003-escape-single-character-3.stdout
  240: 42sh-escaping-003-escape-single-character-3.stdout.raw
  241: 42sh-escaping-004-escape-single-character-4.stderr
  242: 42sh-escaping-004-escape-single-character-4.stderr.raw
  243: 42sh-escaping-004-escape-single-character-4.stdout
  244: 42sh-escaping-004-escape-single-character-4.stdout.raw
  245: 42sh-escaping-005-escape-single-character-5.stderr
  246: 42sh-escaping-005-escape-single-character-5.stderr.raw
  247: 42sh-escaping-005-escape-single-character-5.stdout
  248: 42sh-escaping-005-escape-single-character-5.stdout.raw
  249: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  250: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  251: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  252: 42sh-escaping-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  253: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stderr
  254: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stderr.raw
  255: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stdout
  256: 42sh-escaping-mixed-globbing-brace-expansion-002-it-expands-braces-1.stdout.raw
  257: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stderr
  258: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stderr.raw
  259: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stdout
  260: 42sh-escaping-mixed-globbing-brace-expansion-003-it-expands-braces-2.stdout.raw
  261: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stderr
  262: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stderr.raw
  263: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stdout
  264: 42sh-escaping-mixed-globbing-bracket-expansion-001-it-does-not-expand-brackets.stdout.raw
  265: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stderr
  266: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stderr.raw
  267: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stdout
  268: 42sh-escaping-mixed-globbing-bracket-expansion-002-escaped-inversion-mark.stdout.raw
  269: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stderr
  270: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stderr.raw
  271: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stdout
  272: 42sh-escaping-mixed-globbing-bracket-expansion-003-it-takes-escaped-bracket-as-pattern-character.stdout.raw
  273: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stderr
  274: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stderr.raw
  275: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stdout
  276: 42sh-escaping-mixed-variable-expansion-001-escape-variable-1.stdout.raw
  277: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stderr
  278: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stderr.raw
  279: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stdout
  280: 42sh-escaping-mixed-variable-expansion-002-it-does-not-escape-variable.stdout.raw
  281: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stderr
  282: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stderr.raw
  283: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stdout
  284: 42sh-escaping-mixed-variable-expansion-003-escape-variable-2.stdout.raw
  285: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stderr
  286: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stderr.raw
  287: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stdout
  288: 42sh-globbing-brace-expansion-ascii-range-001-simple-ascending-1.stdout.raw
  289: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stderr
  290: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stderr.raw
  291: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stdout
  292: 42sh-globbing-brace-expansion-ascii-range-002-simple-ascending-2.stdout.raw
  293: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stderr
  294: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stderr.raw
  295: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stdout
  296: 42sh-globbing-brace-expansion-ascii-range-003-simple-ascending-3.stdout.raw
  297: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stderr
  298: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stderr.raw
  299: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stdout
  300: 42sh-globbing-brace-expansion-ascii-range-004-simple-descending-1.stdout.raw
  301: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stderr
  302: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stderr.raw
  303: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stdout
  304: 42sh-globbing-brace-expansion-ascii-range-005-simple-descending-2.stdout.raw
  305: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stderr
  306: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stderr.raw
  307: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stdout
  308: 42sh-globbing-brace-expansion-ascii-range-006-simple-descending-3.stdout.raw
  309: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stderr
  310: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stderr.raw
  311: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stdout
  312: 42sh-globbing-brace-expansion-ascii-range-007-identical-start-and-end.stdout.raw
  313: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stderr
  314: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stderr.raw
  315: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stdout
  316: 42sh-globbing-brace-expansion-ascii-range-008-multiple-1.stdout.raw
  317: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stderr
  318: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stderr.raw
  319: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stdout
  320: 42sh-globbing-brace-expansion-ascii-range-009-multiple-2.stdout.raw
  321: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stderr
  322: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stderr.raw
  323: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stdout
  324: 42sh-globbing-brace-expansion-ascii-range-010-big-range.stdout.raw
  325: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stderr
  326: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stderr.raw
  327: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stdout
  328: 42sh-globbing-brace-expansion-errors-001-invalid-pattern-1.stdout.raw
  329: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stderr
  330: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stderr.raw
  331: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stdout
  332: 42sh-globbing-brace-expansion-errors-002-invalid-pattern-2.stdout.raw
  333: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stderr
  334: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stderr.raw
  335: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stdout
  336: 42sh-globbing-brace-expansion-errors-003-invalid-pattern-3.stdout.raw
  337: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stderr
  338: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stderr.raw
  339: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stdout
  340: 42sh-globbing-brace-expansion-errors-004-invalid-pattern-4.stdout.raw
  341: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stderr
  342: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stderr.raw
  343: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stdout
  344: 42sh-globbing-brace-expansion-list-of-values-001-nothing-to-be-done.stdout.raw
  345: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stderr
  346: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stderr.raw
  347: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stdout
  348: 42sh-globbing-brace-expansion-list-of-values-002-simple-test-1.stdout.raw
  349: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stderr
  350: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stderr.raw
  351: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stdout
  352: 42sh-globbing-brace-expansion-list-of-values-003-simple-test-2.stdout.raw
  353: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stderr
  354: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stderr.raw
  355: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stdout
  356: 42sh-globbing-brace-expansion-numeric-range-001-simple-ascending-1.stdout.raw
  357: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stderr
  358: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stderr.raw
  359: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stdout
  360: 42sh-globbing-brace-expansion-numeric-range-002-simple-ascending-2.stdout.raw
  361: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stderr
  362: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stderr.raw
  363: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stdout
  364: 42sh-globbing-brace-expansion-numeric-range-003-simple-ascending-3.stdout.raw
  365: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stderr
  366: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stderr.raw
  367: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stdout
  368: 42sh-globbing-brace-expansion-numeric-range-004-simple-ascending-4.stdout.raw
  369: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stderr
  370: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stderr.raw
  371: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stdout
  372: 42sh-globbing-brace-expansion-numeric-range-005-simple-ascending-5.stdout.raw
  373: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stderr
  374: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stderr.raw
  375: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stdout
  376: 42sh-globbing-brace-expansion-numeric-range-006-simple-descending-1.stdout.raw
  377: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stderr
  378: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stderr.raw
  379: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stdout
  380: 42sh-globbing-brace-expansion-numeric-range-007-simple-descending-2.stdout.raw
  381: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stderr
  382: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stderr.raw
  383: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stdout
  384: 42sh-globbing-brace-expansion-numeric-range-008-simple-descending-3.stdout.raw
  385: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stderr
  386: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stderr.raw
  387: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stdout
  388: 42sh-globbing-brace-expansion-numeric-range-009-simple-descending-4.stdout.raw
  389: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stderr
  390: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stderr.raw
  391: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stdout
  392: 42sh-globbing-brace-expansion-numeric-range-010-simple-descending-5.stdout.raw
  393: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stderr
  394: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stderr.raw
  395: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stdout
  396: 42sh-globbing-brace-expansion-numeric-range-011-identical-positive-start-and-end.stdout.raw
  397: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stderr
  398: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stderr.raw
  399: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stdout
  400: 42sh-globbing-brace-expansion-numeric-range-012-identical-negative-start-and-end.stdout.raw
  401: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stderr
  402: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stderr.raw
  403: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stdout
  404: 42sh-globbing-brace-expansion-numeric-range-013-multiple-1.stdout.raw
  405: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stderr
  406: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stderr.raw
  407: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stdout
  408: 42sh-globbing-brace-expansion-numeric-range-014-multiple-2.stdout.raw
  409: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stderr
  410: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stderr.raw
  411: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stdout
  412: 42sh-globbing-brace-expansion-numeric-range-015-big-range.stdout.raw
  413: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stderr
  414: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stderr.raw
  415: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stdout
  416: 42sh-globbing-bracket-expansion-multi-001-range-and-char.stdout.raw
  417: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stderr
  418: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stderr.raw
  419: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stdout
  420: 42sh-globbing-bracket-expansion-multi-002-reverse-range-and-chars.stdout.raw
  421: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stderr
  422: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stderr.raw
  423: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stdout
  424: 42sh-globbing-bracket-expansion-multi-003-reverse-multi-hard.stdout.raw
  425: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stderr
  426: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stderr.raw
  427: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stdout
  428: 42sh-globbing-bracket-expansion-multi-004-simple-bracket+char+range.stdout.raw
  429: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stderr
  430: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stderr.raw
  431: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stdout
  432: 42sh-globbing-bracket-expansion-not-001-simple-opposit-match.stdout.raw
  433: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stderr
  434: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stderr.raw
  435: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stdout
  436: 42sh-globbing-bracket-expansion-not-002-simple-opposite-range.stdout.raw
  437: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stderr
  438: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stderr.raw
  439: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stdout
  440: 42sh-globbing-bracket-expansion-range-pattern-001-alpha-range.stdout.raw
  441: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stderr
  442: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stderr.raw
  443: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stdout
  444: 42sh-globbing-bracket-expansion-range-pattern-002-numeric-range.stdout.raw
  445: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stderr
  446: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stderr.raw
  447: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stdout
  448: 42sh-globbing-bracket-expansion-range-pattern-003-ascii-range-1.stdout.raw
  449: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stderr
  450: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stderr.raw
  451: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stdout
  452: 42sh-globbing-bracket-expansion-range-pattern-004-ascii-range-2.stdout.raw
  453: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stderr
  454: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stderr.raw
  455: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stdout
  456: 42sh-globbing-bracket-expansion-simple-pattern-001-simple-list.stdout.raw
  457: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stderr
  458: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stderr.raw
  459: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stdout
  460: 42sh-globbing-bracket-expansion-simple-pattern-002-multi-bracket.stdout.raw
  461: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stderr
  462: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stderr.raw
  463: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stdout
  464: 42sh-globbing-bracket-expansion-simple-pattern-003-brackets-as-pattern.stdout.raw
  465: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stderr
  466: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stderr.raw
  467: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stdout
  468: 42sh-globbing-bracket-expansion-simple-pattern-004-multi-bracket-multi-char.stdout.raw
  469: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stderr
  470: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stderr.raw
  471: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stdout
  472: 42sh-globbing-bracket-expansion-single-char-pattern-001-single-char.stdout.raw
  473: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stderr
  474: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stderr.raw
  475: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stdout
  476: 42sh-globbing-bracket-expansion-single-char-pattern-002-closing-bracket-char.stdout.raw
  477: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stderr
  478: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stderr.raw
  479: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stdout
  480: 42sh-globbing-bracket-expansion-single-char-pattern-003-opening-bracket-char.stdout.raw
  481: 42sh-local-variable-001-declare-and-expand-1.stderr
  482: 42sh-local-variable-001-declare-and-expand-1.stderr.raw
  483: 42sh-local-variable-001-declare-and-expand-1.stdout
  484: 42sh-local-variable-001-declare-and-expand-1.stdout.raw
  485: 42sh-local-variable-002-declare-and-expand-2.stderr
  486: 42sh-local-variable-002-declare-and-expand-2.stderr.raw
  487: 42sh-local-variable-002-declare-and-expand-2.stdout
  488: 42sh-local-variable-002-declare-and-expand-2.stdout.raw
  489: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stderr
  490: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stderr.raw
  491: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stdout
  492: 42sh-local-variable-003-unknown-variable-does-not-result-in-new-argument.stdout.raw
  493: 42sh-local-variable-004-existing-variable-in-environment-1.stderr
  494: 42sh-local-variable-004-existing-variable-in-environment-1.stderr.raw
  495: 42sh-local-variable-004-existing-variable-in-environment-1.stdout
  496: 42sh-local-variable-004-existing-variable-in-environment-1.stdout.raw
  497: 42sh-local-variable-005-existing-variable-in-environment-2.stderr
  498: 42sh-local-variable-005-existing-variable-in-environment-2.stderr.raw
  499: 42sh-local-variable-005-existing-variable-in-environment-2.stdout
  500: 42sh-local-variable-005-existing-variable-in-environment-2.stdout.raw
  501: 42sh-local-variable-006-existing-variable-in-environment-3.stderr
  502: 42sh-local-variable-006-existing-variable-in-environment-3.stderr.raw
  503: 42sh-local-variable-006-existing-variable-in-environment-3.stdout
  504: 42sh-local-variable-006-existing-variable-in-environment-3.stdout.raw
  505: 42sh-local-variable-007-multiple-declaration-at-a-time.stderr
  506: 42sh-local-variable-007-multiple-declaration-at-a-time.stderr.raw
  507: 42sh-local-variable-007-multiple-declaration-at-a-time.stdout
  508: 42sh-local-variable-007-multiple-declaration-at-a-time.stdout.raw
  509: 42sh-local-variable-008-multiple-declaration-with-same-name.stderr
  510: 42sh-local-variable-008-multiple-declaration-with-same-name.stderr.raw
  511: 42sh-local-variable-008-multiple-declaration-with-same-name.stdout
  512: 42sh-local-variable-008-multiple-declaration-with-same-name.stdout.raw
  513: 42sh-local-variable-009-last-exit-status.stderr
  514: 42sh-local-variable-009-last-exit-status.stderr.raw
  515: 42sh-local-variable-009-last-exit-status.stdout
  516: 42sh-local-variable-009-last-exit-status.stdout.raw
  517: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stderr
  518: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stderr.raw
  519: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stdout
  520: 42sh-local-variable-mixed-inline-environment-variable-001-local-variable-shouldnt-be-set.stdout.raw
  521: 42sh-local-variable-mixed-redirections-001-truncating.stderr
  522: 42sh-local-variable-mixed-redirections-001-truncating.stderr.raw
  523: 42sh-local-variable-mixed-redirections-001-truncating.stdout
  524: 42sh-local-variable-mixed-redirections-001-truncating.stdout.raw
  525: 42sh-local-variable-mixed-redirections-002-appending.stderr
  526: 42sh-local-variable-mixed-redirections-002-appending.stderr.raw
  527: 42sh-local-variable-mixed-redirections-002-appending.stdout
  528: 42sh-local-variable-mixed-redirections-002-appending.stdout.raw
  529: 42sh-local-variable-mixed-redirections-003-reading.stderr
  530: 42sh-local-variable-mixed-redirections-003-reading.stderr.raw
  531: 42sh-local-variable-mixed-redirections-003-reading.stdout
  532: 42sh-local-variable-mixed-redirections-003-reading.stdout.raw
  533: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stderr
  534: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stderr.raw
  535: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stdout
  536: 42sh-local-variable-mixed-tilde-expansion-001-process-tilde-expansion.stdout.raw
  537: 42sh-quoting-double-quotes-001-it-works.stderr
  538: 42sh-quoting-double-quotes-001-it-works.stderr.raw
  539: 42sh-quoting-double-quotes-001-it-works.stdout
  540: 42sh-quoting-double-quotes-001-it-works.stdout.raw
  541: 42sh-quoting-double-quotes-002-concatenated-strings.stderr
  542: 42sh-quoting-double-quotes-002-concatenated-strings.stderr.raw
  543: 42sh-quoting-double-quotes-002-concatenated-strings.stdout
  544: 42sh-quoting-double-quotes-002-concatenated-strings.stdout.raw
  545: 42sh-quoting-double-quotes-003-first-argument-inhibited.stderr
  546: 42sh-quoting-double-quotes-003-first-argument-inhibited.stderr.raw
  547: 42sh-quoting-double-quotes-003-first-argument-inhibited.stdout
  548: 42sh-quoting-double-quotes-003-first-argument-inhibited.stdout.raw
  549: 42sh-quoting-double-quotes-004-multiline-1.stderr
  550: 42sh-quoting-double-quotes-004-multiline-1.stderr.raw
  551: 42sh-quoting-double-quotes-004-multiline-1.stdout
  552: 42sh-quoting-double-quotes-004-multiline-1.stdout.raw
  553: 42sh-quoting-double-quotes-005-multiline-2.stderr
  554: 42sh-quoting-double-quotes-005-multiline-2.stderr.raw
  555: 42sh-quoting-double-quotes-005-multiline-2.stdout
  556: 42sh-quoting-double-quotes-005-multiline-2.stdout.raw
  557: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stderr
  558: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stderr.raw
  559: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stdout
  560: 42sh-quoting-double-quotes-mixed-escaping-001-escape-double-quote-1.stdout.raw
  561: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stderr
  562: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stderr.raw
  563: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stdout
  564: 42sh-quoting-double-quotes-mixed-escaping-002-escape-double-quote-2.stdout.raw
  565: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stderr
  566: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stderr.raw
  567: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stdout
  568: 42sh-quoting-double-quotes-mixed-escaping-003-escape-double-quote-3.stdout.raw
  569: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stderr
  570: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stderr.raw
  571: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stdout
  572: 42sh-quoting-double-quotes-mixed-escaping-004-it-results-in-error.stdout.raw
  573: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stderr
  574: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stderr.raw
  575: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stdout
  576: 42sh-quoting-double-quotes-mixed-escaping-005-it-does-not-escape-double-quote.stdout.raw
  577: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  578: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  579: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  580: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  581: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr
  582: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr.raw
  583: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout
  584: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout.raw
  585: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr
  586: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr.raw
  587: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout
  588: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout.raw
  589: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr
  590: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr.raw
  591: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout
  592: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout.raw
  593: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr
  594: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr.raw
  595: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout
  596: 42sh-quoting-double-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout.raw
  597: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  598: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  599: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  600: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  601: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  602: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  603: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  604: 42sh-quoting-double-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  605: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stderr
  606: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stderr.raw
  607: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stdout
  608: 42sh-quoting-double-quotes-mixed-variable-expansion-001-expansion-enabled.stdout.raw
  609: 42sh-quoting-mixed-001-simple-and-double-quotes.stderr
  610: 42sh-quoting-mixed-001-simple-and-double-quotes.stderr.raw
  611: 42sh-quoting-mixed-001-simple-and-double-quotes.stdout
  612: 42sh-quoting-mixed-001-simple-and-double-quotes.stdout.raw
  613: 42sh-quoting-mixed-002-multiline.stderr
  614: 42sh-quoting-mixed-002-multiline.stderr.raw
  615: 42sh-quoting-mixed-002-multiline.stdout
  616: 42sh-quoting-mixed-002-multiline.stdout.raw
  617: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  618: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  619: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  620: 42sh-quoting-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  621: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  622: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  623: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  624: 42sh-quoting-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  625: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  626: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  627: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  628: 42sh-quoting-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  629: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stderr
  630: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stderr.raw
  631: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stdout
  632: 42sh-quoting-mixed-variable-expansion-001-it-does-not-expand-in-quotes.stdout.raw
  633: 42sh-quoting-simple-quotes-001-it-works.stderr
  634: 42sh-quoting-simple-quotes-001-it-works.stderr.raw
  635: 42sh-quoting-simple-quotes-001-it-works.stdout
  636: 42sh-quoting-simple-quotes-001-it-works.stdout.raw
  637: 42sh-quoting-simple-quotes-002-concatenated-strings.stderr
  638: 42sh-quoting-simple-quotes-002-concatenated-strings.stderr.raw
  639: 42sh-quoting-simple-quotes-002-concatenated-strings.stdout
  640: 42sh-quoting-simple-quotes-002-concatenated-strings.stdout.raw
  641: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stderr
  642: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stderr.raw
  643: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stdout
  644: 42sh-quoting-simple-quotes-003-first-argument-inhibited.stdout.raw
  645: 42sh-quoting-simple-quotes-004-multiline-1.stderr
  646: 42sh-quoting-simple-quotes-004-multiline-1.stderr.raw
  647: 42sh-quoting-simple-quotes-004-multiline-1.stdout
  648: 42sh-quoting-simple-quotes-004-multiline-1.stdout.raw
  649: 42sh-quoting-simple-quotes-005-multiline-2.stderr
  650: 42sh-quoting-simple-quotes-005-multiline-2.stderr.raw
  651: 42sh-quoting-simple-quotes-005-multiline-2.stdout
  652: 42sh-quoting-simple-quotes-005-multiline-2.stdout.raw
  653: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stderr
  654: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stderr.raw
  655: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stdout
  656: 42sh-quoting-simple-quotes-mixed-escaping-001-escape-simple-quote-1.stdout.raw
  657: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stderr
  658: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stderr.raw
  659: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stdout
  660: 42sh-quoting-simple-quotes-mixed-escaping-002-escape-simple-quote-2.stdout.raw
  661: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stderr
  662: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stderr.raw
  663: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stdout
  664: 42sh-quoting-simple-quotes-mixed-escaping-003-escape-simple-quote-3.stdout.raw
  665: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stderr
  666: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stderr.raw
  667: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stdout
  668: 42sh-quoting-simple-quotes-mixed-escaping-004-it-does-not-escape-simple-quote-1.stdout.raw
  669: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stderr
  670: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stderr.raw
  671: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stdout
  672: 42sh-quoting-simple-quotes-mixed-escaping-005-it-does-not-escape-simple-quote-2.stdout.raw
  673: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr
  674: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stderr.raw
  675: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout
  676: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-001-it-does-not-expand-braces-1.stdout.raw
  677: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr
  678: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stderr.raw
  679: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout
  680: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-002-it-does-not-expand-braces-2.stdout.raw
  681: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr
  682: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stderr.raw
  683: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout
  684: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-003-it-does-not-expand-braces-3.stdout.raw
  685: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr
  686: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stderr.raw
  687: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout
  688: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-004-it-does-not-expand-braces-4.stdout.raw
  689: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr
  690: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stderr.raw
  691: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout
  692: 42sh-quoting-simple-quotes-mixed-globbing-brace-expansion-005-it-does-not-expand-braces-5.stdout.raw
  693: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr
  694: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stderr.raw
  695: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout
  696: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-001-it-works-1.stdout.raw
  697: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr
  698: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stderr.raw
  699: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout
  700: 42sh-quoting-simple-quotes-mixed-globbing-bracket-expansion-002-it-works-2.stdout.raw
  701: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stderr
  702: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stderr.raw
  703: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stdout
  704: 42sh-quoting-simple-quotes-mixed-variable-expansion-001-expansion-disabled.stdout.raw
  705: 42sh-subshell-001-tokens-are-recognized.stderr
  706: 42sh-subshell-001-tokens-are-recognized.stderr.raw
  707: 42sh-subshell-001-tokens-are-recognized.stdout
  708: 42sh-subshell-001-tokens-are-recognized.stdout.raw
  709: 42sh-subshell-002-multiple-levels-of-subshells.stderr
  710: 42sh-subshell-002-multiple-levels-of-subshells.stderr.raw
  711: 42sh-subshell-002-multiple-levels-of-subshells.stdout
  712: 42sh-subshell-002-multiple-levels-of-subshells.stdout.raw
  713: 42sh-subshell-003-multiline.stderr
  714: 42sh-subshell-003-multiline.stderr.raw
  715: 42sh-subshell-003-multiline.stdout
  716: 42sh-subshell-003-multiline.stdout.raw
  717: 42sh-subshell-004-exit-status.stderr
  718: 42sh-subshell-004-exit-status.stderr.raw
  719: 42sh-subshell-004-exit-status.stdout
  720: 42sh-subshell-004-exit-status.stdout.raw
  721: 42sh-subshell-005-copy-of-environment.stderr
  722: 42sh-subshell-005-copy-of-environment.stderr.raw
  723: 42sh-subshell-005-copy-of-environment.stdout
  724: 42sh-subshell-005-copy-of-environment.stdout.raw
  725: 42sh-subshell-errors-001-parse-error-1.stderr
  726: 42sh-subshell-errors-001-parse-error-1.stderr.raw
  727: 42sh-subshell-errors-001-parse-error-1.stdout
  728: 42sh-subshell-errors-001-parse-error-1.stdout.raw
  729: 42sh-subshell-errors-002-parse-error-2.stderr
  730: 42sh-subshell-errors-002-parse-error-2.stderr.raw
  731: 42sh-subshell-errors-002-parse-error-2.stdout
  732: 42sh-subshell-errors-002-parse-error-2.stdout.raw
  733: 42sh-subshell-errors-003-parse-error-3.stderr
  734: 42sh-subshell-errors-003-parse-error-3.stderr.raw
  735: 42sh-subshell-errors-003-parse-error-3.stdout
  736: 42sh-subshell-errors-003-parse-error-3.stdout.raw
  737: 42sh-subshell-errors-004-parse-error-4.stderr
  738: 42sh-subshell-errors-004-parse-error-4.stderr.raw
  739: 42sh-subshell-errors-004-parse-error-4.stdout
  740: 42sh-subshell-errors-004-parse-error-4.stdout.raw
  741: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stderr
  742: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stderr.raw
  743: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stdout
  744: 42sh-subshell-mixed-builtins-cd-001-it-does-not-change-current-directory.stdout.raw
  745: 42sh-subshell-mixed-builtins-cd-002-multiline.stderr
  746: 42sh-subshell-mixed-builtins-cd-002-multiline.stderr.raw
  747: 42sh-subshell-mixed-builtins-cd-002-multiline.stdout
  748: 42sh-subshell-mixed-builtins-cd-002-multiline.stdout.raw
  749: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stderr
  750: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stderr.raw
  751: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stdout
  752: 42sh-subshell-mixed-builtins-exit-001-exiting-subshell.stdout.raw
  753: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stderr
  754: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stderr.raw
  755: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stdout
  756: 42sh-subshell-mixed-builtins-setenv-001-it-does-not-modify-parent-environment.stdout.raw
  757: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stderr
  758: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stderr.raw
  759: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stdout
  760: 42sh-subshell-mixed-builtins-unsetenv-001-it-does-not-modify-parent-environment.stdout.raw
  761: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stderr
  762: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stderr.raw
  763: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stdout
  764: 42sh-subshell-mixed-escaping-001-escaped-subshell-1.stdout.raw
  765: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stderr
  766: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stderr.raw
  767: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stdout
  768: 42sh-subshell-mixed-escaping-002-escaped-subshell-2.stdout.raw
  769: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stderr
  770: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stderr.raw
  771: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stdout
  772: 42sh-subshell-mixed-inline-environment-variable-001-modifies-the-child-environment-only-1.stdout.raw
  773: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stderr
  774: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stderr.raw
  775: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stdout
  776: 42sh-subshell-mixed-inline-environment-variable-002-modifies-the-child-environment-only-2.stdout.raw
  777: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stderr
  778: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stderr.raw
  779: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stdout
  780: 42sh-subshell-mixed-piping-001-subshells-inside-piped-command.stdout.raw
  781: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stderr
  782: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stderr.raw
  783: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stdout
  784: 42sh-subshell-mixed-piping-002-pipes-inside-subshells.stdout.raw
  785: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stderr
  786: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stderr.raw
  787: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stdout
  788: 42sh-subshell-mixed-piping-003-imbricated-subshells-and-pipes.stdout.raw
  789: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stderr
  790: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stderr.raw
  791: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stdout
  792: 42sh-subshell-mixed-quoting-001-with-simple-quotes.stdout.raw
  793: 42sh-subshell-mixed-quoting-002-with-double-quotes.stderr
  794: 42sh-subshell-mixed-quoting-002-with-double-quotes.stderr.raw
  795: 42sh-subshell-mixed-quoting-002-with-double-quotes.stdout
  796: 42sh-subshell-mixed-quoting-002-with-double-quotes.stdout.raw
  797: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stderr
  798: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stderr.raw
  799: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stdout
  800: 42sh-subshell-mixed-quoting-003-with-simple-and-double-quotes.stdout.raw
  801: TOKEN201911091512
  802: TOKEN201911091512_006-BINARY-UNDEFINED-PATH
  803: TOKEN201911091513
  804: TOKEN201911091513_006-BINARY-UNDEFINED-PATH
  805: TOKEN201911091519
  806: TOKEN201911091519_006-BINARY-UNDEFINED-PATH
  807: TOKEN201911091532
  808: TOKEN201911091532_006-BINARY-UNDEFINED-PATH
  809: TOKEN201911091539
  810: TOKEN201911091539_006-BINARY-UNDEFINED-PATH
  811: TOKEN201911091627
  812: TOKEN201911091627_006-BINARY-UNDEFINED-PATH
  813: TOKEN201911091630
  814: TOKEN201911091630_006-BINARY-UNDEFINED-PATH
  815: TOKEN201911091647
  816: TOKEN201911091647_006-BINARY-UNDEFINED-PATH
  817: TOKEN201911091652
  818: TOKEN201911091652_006-BINARY-UNDEFINED-PATH
  819: TOKEN201911091655
  820: TOKEN201911091655_006-BINARY-UNDEFINED-PATH
  821: TOKEN201911091715
  822: TOKEN201911091715_006-BINARY-UNDEFINED-PATH
  823: TOKEN201911091717
  824: TOKEN201911091717_006-BINARY-UNDEFINED-PATH
  825: TOKEN201911091719
  826: TOKEN201911091719_006-BINARY-UNDEFINED-PATH
  827: TOKEN201911091723
  828: TOKEN201911091723_006-BINARY-UNDEFINED-PATH
  829: TOKEN201911101739
  830: TOKEN201911101739_006-BINARY-UNDEFINED-PATH
  831: TOKEN201911101756
  832: TOKEN201911101756_006-BINARY-UNDEFINED-PATH
  833: TOKEN201911101804
  834: TOKEN201911101804_006-BINARY-UNDEFINED-PATH
  835: TOKEN201911101815
  836: TOKEN201911101815_006-BINARY-UNDEFINED-PATH
  837: TOKEN201911101819
  838: TOKEN201911101819_006-BINARY-UNDEFINED-PATH
  839: TOKEN201911101825
  840: TOKEN201911101825_006-BINARY-UNDEFINED-PATH
  841: TOKEN201911101830
  842: TOKEN201911101830_006-BINARY-UNDEFINED-PATH
  843: TOKEN201911101832
  844: TOKEN201911101832_006-BINARY-UNDEFINED-PATH
  845: TOKEN201911102139
  846: TOKEN201911102139_006-BINARY-UNDEFINED-PATH
  847: TOKEN201911102141
  848: TOKEN201911102141_006-BINARY-UNDEFINED-PATH
  849: TOKEN201911102156
  850: TOKEN201911102156_006-BINARY-UNDEFINED-PATH
  851: TOKEN201911102156_SUBDIRECTORY
  852: TOKEN201911191219
  853: TOKEN201911191219_006-BINARY-UNDEFINED-PATH
  854: TOKEN201911191219_SUBDIRECTORY
  855: TOKEN201911191239
  856: TOKEN201911191239_006-BINARY-UNDEFINED-PATH
  857: TOKEN201911191239_SUBDIRECTORY
  858: TOKEN201911201137
  859: TOKEN201911201137_006-BINARY-UNDEFINED-PATH
  860: TOKEN201911201137_SUBDIRECTORY
  861: TOKEN201911201201
  862: TOKEN201911201201_006-BINARY-UNDEFINED-PATH
  863: TOKEN201911201201_SUBDIRECTORY
  864: TOKEN201911201211_006-BINARY-UNDEFINED-PATH
  865: TOKEN201911201211_SUBDIRECTORY
  866: TOKEN201911282055
  867: TOKEN201911282055_006-BINARY-UNDEFINED-PATH
  868: append_file_default
  869: append_file_stderr
  870: append_file_stdout
  871: bonuses-inline-environment-variable-001-modifies-child-environment-1.stderr
  872: bonuses-inline-environment-variable-001-modifies-child-environment-1.stderr.raw
  873: bonuses-inline-environment-variable-001-modifies-child-environment-1.stdout
  874: bonuses-inline-environment-variable-001-modifies-child-environment-1.stdout.raw
  875: bonuses-inline-environment-variable-002-modifies-child-environment-2.stderr
  876: bonuses-inline-environment-variable-002-modifies-child-environment-2.stderr.raw
  877: bonuses-inline-environment-variable-002-modifies-child-environment-2.stdout
  878: bonuses-inline-environment-variable-002-modifies-child-environment-2.stdout.raw
  879: bonuses-inline-environment-variable-003-modifies-PATH-only.stderr
  880: bonuses-inline-environment-variable-003-modifies-PATH-only.stderr.raw
  881: bonuses-inline-environment-variable-003-modifies-PATH-only.stdout
  882: bonuses-inline-environment-variable-003-modifies-PATH-only.stdout.raw
  883: bonuses-separators-and-001-run-twice.stderr
  884: bonuses-separators-and-001-run-twice.stderr.raw
  885: bonuses-separators-and-001-run-twice.stdout
  886: bonuses-separators-and-001-run-twice.stdout.raw
  887: bonuses-separators-and-002-do-not-run-second.stderr
  888: bonuses-separators-and-002-do-not-run-second.stderr.raw
  889: bonuses-separators-and-002-do-not-run-second.stdout
  890: bonuses-separators-and-002-do-not-run-second.stdout.raw
  891: bonuses-separators-and-003-run-until-failing.stderr
  892: bonuses-separators-and-003-run-until-failing.stderr.raw
  893: bonuses-separators-and-003-run-until-failing.stdout
  894: bonuses-separators-and-003-run-until-failing.stdout.raw
  895: bonuses-separators-and-errors-001-parse-error-at-beginning.stderr
  896: bonuses-separators-and-errors-001-parse-error-at-beginning.stderr.raw
  897: bonuses-separators-and-errors-001-parse-error-at-beginning.stdout
  898: bonuses-separators-and-errors-001-parse-error-at-beginning.stdout.raw
  899: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stderr
  900: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stderr.raw
  901: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stdout
  902: bonuses-separators-and-errors-002-parse-error-too-much-symbol.stdout.raw
  903: bonuses-separators-mixed-001-and-or.stderr
  904: bonuses-separators-mixed-001-and-or.stderr.raw
  905: bonuses-separators-mixed-001-and-or.stdout
  906: bonuses-separators-mixed-001-and-or.stdout.raw
  907: bonuses-separators-mixed-002-and-or.stderr
  908: bonuses-separators-mixed-002-and-or.stderr.raw
  909: bonuses-separators-mixed-002-and-or.stdout
  910: bonuses-separators-mixed-002-and-or.stdout.raw
  911: bonuses-separators-mixed-003-and-or.stderr
  912: bonuses-separators-mixed-003-and-or.stderr.raw
  913: bonuses-separators-mixed-003-and-or.stdout
  914: bonuses-separators-mixed-003-and-or.stdout.raw
  915: bonuses-separators-mixed-004-or-and.stderr
  916: bonuses-separators-mixed-004-or-and.stderr.raw
  917: bonuses-separators-mixed-004-or-and.stdout
  918: bonuses-separators-mixed-004-or-and.stdout.raw
  919: bonuses-separators-mixed-005-or-and.stderr
  920: bonuses-separators-mixed-005-or-and.stderr.raw
  921: bonuses-separators-mixed-005-or-and.stdout
  922: bonuses-separators-mixed-005-or-and.stdout.raw
  923: bonuses-separators-mixed-006-or-and.stderr
  924: bonuses-separators-mixed-006-or-and.stderr.raw
  925: bonuses-separators-mixed-006-or-and.stdout
  926: bonuses-separators-mixed-006-or-and.stdout.raw
  927: bonuses-separators-or-001-run-first-only.stderr
  928: bonuses-separators-or-001-run-first-only.stderr.raw
  929: bonuses-separators-or-001-run-first-only.stdout
  930: bonuses-separators-or-001-run-first-only.stdout.raw
  931: bonuses-separators-or-002-run-second-only.stderr
  932: bonuses-separators-or-002-run-second-only.stderr.raw
  933: bonuses-separators-or-002-run-second-only.stdout
  934: bonuses-separators-or-002-run-second-only.stdout.raw
  935: bonuses-separators-or-003-run-until-succeeding.stderr
  936: bonuses-separators-or-003-run-until-succeeding.stderr.raw
  937: bonuses-separators-or-003-run-until-succeeding.stdout
  938: bonuses-separators-or-003-run-until-succeeding.stdout.raw
  939: bonuses-separators-or-errors-001-parse-error-at-beginning.stderr
  940: bonuses-separators-or-errors-001-parse-error-at-beginning.stderr.raw
  941: bonuses-separators-or-errors-001-parse-error-at-beginning.stdout
  942: bonuses-separators-or-errors-001-parse-error-at-beginning.stdout.raw
  943: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stderr
  944: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stderr.raw
  945: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stdout
  946: bonuses-separators-or-errors-002-parse-error-too-much-symbol.stdout.raw
  947: bonuses-tilde-expansion-001-expanded-with-HOME-1.stderr
  948: bonuses-tilde-expansion-001-expanded-with-HOME-1.stderr.raw
  949: bonuses-tilde-expansion-001-expanded-with-HOME-1.stdout
  950: bonuses-tilde-expansion-001-expanded-with-HOME-1.stdout.raw
  951: bonuses-tilde-expansion-002-expanded-with-HOME-2.stderr
  952: bonuses-tilde-expansion-002-expanded-with-HOME-2.stderr.raw
  953: bonuses-tilde-expansion-002-expanded-with-HOME-2.stdout
  954: bonuses-tilde-expansion-002-expanded-with-HOME-2.stdout.raw
  955: bonuses-tilde-expansion-003-expanded-with-PWD-1.stderr
  956: bonuses-tilde-expansion-003-expanded-with-PWD-1.stderr.raw
  957: bonuses-tilde-expansion-003-expanded-with-PWD-1.stdout
  958: bonuses-tilde-expansion-003-expanded-with-PWD-1.stdout.raw
  959: bonuses-tilde-expansion-004-expanded-with-PWD-2.stderr
  960: bonuses-tilde-expansion-004-expanded-with-PWD-2.stderr.raw
  961: bonuses-tilde-expansion-004-expanded-with-PWD-2.stdout
  962: bonuses-tilde-expansion-004-expanded-with-PWD-2.stdout.raw
  963: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stderr
  964: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stderr.raw
  965: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stdout
  966: bonuses-tilde-expansion-005-expanded-with-OLDPWD-1.stdout.raw
  967: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stderr
  968: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stderr.raw
  969: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stdout
  970: bonuses-tilde-expansion-006-expanded-with-OLDPWD-2.stdout.raw
  971: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stderr
  972: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stderr.raw
  973: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stdout
  974: bonuses-tilde-expansion-not-expanded-001-not-expanded-with-HOME-1.stdout.raw
  975: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stderr
  976: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stderr.raw
  977: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stdout
  978: bonuses-tilde-expansion-not-expanded-002-not-expanded-with-HOME-2.stdout.raw
  979: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stderr
  980: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stderr.raw
  981: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stdout
  982: bonuses-tilde-expansion-not-expanded-003-not-expanded-with-PWD.stdout.raw
  983: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stderr
  984: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stderr.raw
  985: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stdout
  986: bonuses-tilde-expansion-not-expanded-004-not-expanded-with-OLDPWD.stdout.raw
  987: display_env
  988: display_program_name
  989: display_pwd
  990: enoent_symlink
  991: exit_with_status
  992: minishell-binary-001-binary-path-relative.stderr
  993: minishell-binary-001-binary-path-relative.stderr.raw
  994: minishell-binary-001-binary-path-relative.stdout
  995: minishell-binary-001-binary-path-relative.stdout.raw
  996: minishell-binary-002-binary-path-absolute.stderr
  997: minishell-binary-002-binary-path-absolute.stderr.raw
  998: minishell-binary-002-binary-path-absolute.stdout
  999: minishell-binary-002-binary-path-absolute.stdout.raw
  1000: minishell-binary-003-binary-test-exec-order.stderr
  1001: minishell-binary-003-binary-test-exec-order.stderr.raw
  1002: minishell-binary-003-binary-test-exec-order.stdout
  1003: minishell-binary-003-binary-test-exec-order.stdout.raw
  1004: minishell-binary-004-binary-test-empty-path.stderr
  1005: minishell-binary-004-binary-test-empty-path.stderr.raw
  1006: minishell-binary-004-binary-test-empty-path.stdout
  1007: minishell-binary-004-binary-test-empty-path.stdout.raw
  1008: minishell-binary-005-binary-test-wrong-path.stderr
  1009: minishell-binary-005-binary-test-wrong-path.stderr.raw
  1010: minishell-binary-005-binary-test-wrong-path.stdout
  1011: minishell-binary-005-binary-test-wrong-path.stdout.raw
  1012: minishell-binary-006-binary-undefined-path.stderr
  1013: minishell-binary-006-binary-undefined-path.stderr.raw
  1014: minishell-binary-006-binary-undefined-path.stdout
  1015: minishell-binary-006-binary-undefined-path.stdout.raw
  1016: minishell-binary-007-binary-permission-denied.stderr
  1017: minishell-binary-007-binary-permission-denied.stderr.raw
  1018: minishell-binary-007-binary-permission-denied.stdout
  1019: minishell-binary-007-binary-permission-denied.stdout.raw
  1020: minishell-binary-008-binary-too-many-symbolic-links-encountered.stderr
  1021: minishell-binary-008-binary-too-many-symbolic-links-encountered.stderr.raw
  1022: minishell-binary-008-binary-too-many-symbolic-links-encountered.stdout
  1023: minishell-binary-008-binary-too-many-symbolic-links-encountered.stdout.raw
  1024: minishell-builtins-cd-001-no-arg.stderr
  1025: minishell-builtins-cd-001-no-arg.stderr.raw
  1026: minishell-builtins-cd-001-no-arg.stdout
  1027: minishell-builtins-cd-001-no-arg.stdout.raw
  1028: minishell-builtins-cd-002-current-directory.stderr
  1029: minishell-builtins-cd-002-current-directory.stderr.raw
  1030: minishell-builtins-cd-002-current-directory.stdout
  1031: minishell-builtins-cd-002-current-directory.stdout.raw
  1032: minishell-builtins-cd-003-current-directory-2.stderr
  1033: minishell-builtins-cd-003-current-directory-2.stderr.raw
  1034: minishell-builtins-cd-003-current-directory-2.stdout
  1035: minishell-builtins-cd-003-current-directory-2.stdout.raw
  1036: minishell-builtins-cd-004-parent-directory.stderr
  1037: minishell-builtins-cd-004-parent-directory.stderr.raw
  1038: minishell-builtins-cd-004-parent-directory.stdout
  1039: minishell-builtins-cd-004-parent-directory.stdout.raw
  1040: minishell-builtins-cd-005-root-path.stderr
  1041: minishell-builtins-cd-005-root-path.stderr.raw
  1042: minishell-builtins-cd-005-root-path.stdout
  1043: minishell-builtins-cd-005-root-path.stdout.raw
  1044: minishell-builtins-cd-006-root-path-2.stderr
  1045: minishell-builtins-cd-006-root-path-2.stderr.raw
  1046: minishell-builtins-cd-006-root-path-2.stdout
  1047: minishell-builtins-cd-006-root-path-2.stdout.raw
  1048: minishell-builtins-cd-007-symbolic-link.stderr
  1049: minishell-builtins-cd-007-symbolic-link.stderr.raw
  1050: minishell-builtins-cd-007-symbolic-link.stdout
  1051: minishell-builtins-cd-007-symbolic-link.stdout.raw
  1052: minishell-builtins-cd-008-symbolic-link-2.stderr
  1053: minishell-builtins-cd-008-symbolic-link-2.stderr.raw
  1054: minishell-builtins-cd-008-symbolic-link-2.stdout
  1055: minishell-builtins-cd-008-symbolic-link-2.stdout.raw
  1056: minishell-builtins-cd-010-update-OLDPWD.stderr
  1057: minishell-builtins-cd-010-update-OLDPWD.stderr.raw
  1058: minishell-builtins-cd-010-update-OLDPWD.stdout
  1059: minishell-builtins-cd-010-update-OLDPWD.stdout.raw
  1060: minishell-builtins-cd-011-dotdot.stderr
  1061: minishell-builtins-cd-011-dotdot.stderr.raw
  1062: minishell-builtins-cd-011-dotdot.stdout
  1063: minishell-builtins-cd-011-dotdot.stdout.raw
  1064: minishell-builtins-cd-012-dot.stderr
  1065: minishell-builtins-cd-012-dot.stderr.raw
  1066: minishell-builtins-cd-012-dot.stdout
  1067: minishell-builtins-cd-012-dot.stdout.raw
  1068: minishell-builtins-cd-013-absolute-path.stderr
  1069: minishell-builtins-cd-013-absolute-path.stderr.raw
  1070: minishell-builtins-cd-013-absolute-path.stdout
  1071: minishell-builtins-cd-013-absolute-path.stdout.raw
  1072: minishell-builtins-cd-errors-001-not-a-directory.stderr
  1073: minishell-builtins-cd-errors-001-not-a-directory.stderr.raw
  1074: minishell-builtins-cd-errors-001-not-a-directory.stdout
  1075: minishell-builtins-cd-errors-001-not-a-directory.stdout.raw
  1076: minishell-builtins-cd-errors-002-not-a-directory-2.stderr
  1077: minishell-builtins-cd-errors-002-not-a-directory-2.stderr.raw
  1078: minishell-builtins-cd-errors-002-not-a-directory-2.stdout
  1079: minishell-builtins-cd-errors-002-not-a-directory-2.stdout.raw
  1080: minishell-builtins-cd-errors-003-permission-denied.stderr
  1081: minishell-builtins-cd-errors-003-permission-denied.stderr.raw
  1082: minishell-builtins-cd-errors-003-permission-denied.stdout
  1083: minishell-builtins-cd-errors-003-permission-denied.stdout.raw
  1084: minishell-builtins-cd-errors-004-permission-denied-2.stderr
  1085: minishell-builtins-cd-errors-004-permission-denied-2.stderr.raw
  1086: minishell-builtins-cd-errors-004-permission-denied-2.stdout
  1087: minishell-builtins-cd-errors-004-permission-denied-2.stdout.raw
  1088: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stderr
  1089: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stderr.raw
  1090: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stdout
  1091: minishell-builtins-cd-errors-005-too-many-symbolic-links-encountered.stdout.raw
  1092: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stderr
  1093: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stderr.raw
  1094: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stdout
  1095: minishell-builtins-cd-errors-006-too-many-symbolic-links-encountered-2.stdout.raw
  1096: minishell-builtins-cd-errors-007-no-such-file-or-directory.stderr
  1097: minishell-builtins-cd-errors-007-no-such-file-or-directory.stderr.raw
  1098: minishell-builtins-cd-errors-007-no-such-file-or-directory.stdout
  1099: minishell-builtins-cd-errors-007-no-such-file-or-directory.stdout.raw
  1100: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stderr
  1101: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stderr.raw
  1102: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stdout
  1103: minishell-builtins-cd-errors-008-no-such-file-or-directory-2.stdout.raw
  1104: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stderr
  1105: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stderr.raw
  1106: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stdout
  1107: minishell-builtins-cd-errors-009-no-such-file-or-directory-symlink.stdout.raw
  1108: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stderr
  1109: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stderr.raw
  1110: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stdout
  1111: minishell-builtins-cd-errors-010-no-such-file-or-directory-symlink-2.stdout.raw
  1112: minishell-builtins-cd-options-001-not-following-links.stderr
  1113: minishell-builtins-cd-options-001-not-following-links.stderr.raw
  1114: minishell-builtins-cd-options-001-not-following-links.stdout
  1115: minishell-builtins-cd-options-001-not-following-links.stdout.raw
  1116: minishell-builtins-cd-options-002-oldpwd.stderr
  1117: minishell-builtins-cd-options-002-oldpwd.stderr.raw
  1118: minishell-builtins-cd-options-002-oldpwd.stdout
  1119: minishell-builtins-cd-options-002-oldpwd.stdout.raw
  1120: minishell-builtins-env-001-env-same-value-as-parent.stderr
  1121: minishell-builtins-env-001-env-same-value-as-parent.stderr.raw
  1122: minishell-builtins-env-001-env-same-value-as-parent.stdout
  1123: minishell-builtins-env-001-env-same-value-as-parent.stdout.raw
  1124: minishell-builtins-env-002-env-check-usefull-var.stderr
  1125: minishell-builtins-env-002-env-check-usefull-var.stderr.raw
  1126: minishell-builtins-env-002-env-check-usefull-var.stdout
  1127: minishell-builtins-env-002-env-check-usefull-var.stdout.raw
  1128: minishell-builtins-env-003-ignore-environment.stderr
  1129: minishell-builtins-env-003-ignore-environment.stderr.raw
  1130: minishell-builtins-env-003-ignore-environment.stdout
  1131: minishell-builtins-env-003-ignore-environment.stdout.raw
  1132: minishell-builtins-env-005-set-variables.stderr
  1133: minishell-builtins-env-005-set-variables.stderr.raw
  1134: minishell-builtins-env-005-set-variables.stdout
  1135: minishell-builtins-env-005-set-variables.stdout.raw
  1136: minishell-builtins-env-errors-001-command-not-found.stderr
  1137: minishell-builtins-env-errors-001-command-not-found.stderr.raw
  1138: minishell-builtins-env-errors-001-command-not-found.stdout
  1139: minishell-builtins-env-errors-001-command-not-found.stdout.raw
  1140: minishell-builtins-env-errors-002-illegal-option.stderr
  1141: minishell-builtins-env-errors-002-illegal-option.stderr.raw
  1142: minishell-builtins-env-errors-002-illegal-option.stdout
  1143: minishell-builtins-env-errors-002-illegal-option.stdout.raw
  1144: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stderr
  1145: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stderr.raw
  1146: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stdout
  1147: minishell-builtins-env-multiple-options-001-ignore-environment-and-set-variable.stdout.raw
  1148: minishell-builtins-exit-001-without-any-argument.stderr
  1149: minishell-builtins-exit-001-without-any-argument.stderr.raw
  1150: minishell-builtins-exit-001-without-any-argument.stdout
  1151: minishell-builtins-exit-001-without-any-argument.stdout.raw
  1152: minishell-builtins-exit-002-status-passed-as-argument.stderr
  1153: minishell-builtins-exit-002-status-passed-as-argument.stderr.raw
  1154: minishell-builtins-exit-002-status-passed-as-argument.stdout
  1155: minishell-builtins-exit-002-status-passed-as-argument.stdout.raw
  1156: minishell-builtins-exit-003-status-of-last-command.stderr
  1157: minishell-builtins-exit-003-status-of-last-command.stderr.raw
  1158: minishell-builtins-exit-003-status-of-last-command.stdout
  1159: minishell-builtins-exit-003-status-of-last-command.stdout.raw
  1160: minishell-builtins-exit-errors-001-too-many-args.stderr
  1161: minishell-builtins-exit-errors-001-too-many-args.stderr.raw
  1162: minishell-builtins-exit-errors-001-too-many-args.stdout
  1163: minishell-builtins-exit-errors-001-too-many-args.stdout.raw
  1164: minishell-builtins-exit-errors-002-non-numeric-argument.stderr
  1165: minishell-builtins-exit-errors-002-non-numeric-argument.stderr.raw
  1166: minishell-builtins-exit-errors-002-non-numeric-argument.stdout
  1167: minishell-builtins-exit-errors-002-non-numeric-argument.stdout.raw
  1168: minishell-builtins-mixed-001-setenv-unsetenv.stderr
  1169: minishell-builtins-mixed-001-setenv-unsetenv.stderr.raw
  1170: minishell-builtins-mixed-001-setenv-unsetenv.stdout
  1171: minishell-builtins-mixed-001-setenv-unsetenv.stdout.raw
  1172: minishell-builtins-setenv-001-no-argument.stderr
  1173: minishell-builtins-setenv-001-no-argument.stderr.raw
  1174: minishell-builtins-setenv-001-no-argument.stdout
  1175: minishell-builtins-setenv-001-no-argument.stdout.raw
  1176: minishell-builtins-setenv-002-add-new-variable.stderr
  1177: minishell-builtins-setenv-002-add-new-variable.stderr.raw
  1178: minishell-builtins-setenv-002-add-new-variable.stdout
  1179: minishell-builtins-setenv-002-add-new-variable.stdout.raw
  1180: minishell-builtins-setenv-003-set-existing-variable.stderr
  1181: minishell-builtins-setenv-003-set-existing-variable.stderr.raw
  1182: minishell-builtins-setenv-003-set-existing-variable.stdout
  1183: minishell-builtins-setenv-003-set-existing-variable.stdout.raw
  1184: minishell-builtins-setenv-004-invalid-identifier.stderr
  1185: minishell-builtins-setenv-004-invalid-identifier.stderr.raw
  1186: minishell-builtins-setenv-004-invalid-identifier.stdout
  1187: minishell-builtins-setenv-004-invalid-identifier.stdout.raw
  1188: minishell-builtins-setenv-005-add-and-set-multiple-variables.stderr
  1189: minishell-builtins-setenv-005-add-and-set-multiple-variables.stderr.raw
  1190: minishell-builtins-setenv-005-add-and-set-multiple-variables.stdout
  1191: minishell-builtins-setenv-005-add-and-set-multiple-variables.stdout.raw
  1192: minishell-builtins-unsetenv-001-unsetenv-first-elem.stderr
  1193: minishell-builtins-unsetenv-001-unsetenv-first-elem.stderr.raw
  1194: minishell-builtins-unsetenv-001-unsetenv-first-elem.stdout
  1195: minishell-builtins-unsetenv-001-unsetenv-first-elem.stdout.raw
  1196: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stderr
  1197: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stderr.raw
  1198: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stdout
  1199: minishell-builtins-unsetenv-002-unsetenv-mult-envp.stdout.raw
  1200: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stderr
  1201: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stderr.raw
  1202: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stdout
  1203: minishell-builtins-unsetenv-003-unsetenv-mult-envp-inline.stdout.raw
  1204: minishell-misc-001-copy-of-environment.stderr
  1205: minishell-misc-001-copy-of-environment.stderr.raw
  1206: minishell-misc-001-copy-of-environment.stdout
  1207: minishell-misc-001-copy-of-environment.stdout.raw
  1208: my_sub_directory
  1209: not_a_directory
  1210: playing_with_dotdot
  1211: read_on_stdin
  1212: simple_text_file
  1213: size
  1214: sleep_and_exit_with_status
  1215: sleep_and_write_on_stderr
  1216: stdin
  1217: stored_env
  1218: sub_directory
  1219: sub_directory_link
  1220: symbolic_link
  1221: symbolic_link1
  1222: symbolic_link2
  1223: symbolic_link3
  1224: temporary_directory
  1225: test_globbing
  1226: truncated_file
  1227: virtual_path
  1228: virtual_path_1
  1229: virtual_path_2
  1230: write_all_arguments_on_stdout
  1231: write_on_stderr
  1232: write_on_stdout
  1233: write_on_stdout_and_stderr[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: [ls] (1)-0
  02: [] (39)-2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mminishell/binary/007-binary-permission-denied[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that trying to execute a non-permitted binary results in an error on standard error and a failure exit status.[0m

  Before test:
[38;5;239m  01: rm -rf ./permission_denied
  02: touch ./permission_denied
  03: chmod 0 ./permission_denied[0m

  STDIN:
[38;5;239m  01: ./permission_denied[0m

  STDOUT:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: cant exec './permission_denied'[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Pp]ermission denied`[0m
[38;5;239m  01: [./permission_denied] (1)-0
  02: [] (39)-19[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status 0[0m

  After test:
[38;5;239m  01: if [ -d "./permission_denied" ]; then chmod 777 "./permission_denied"; fi
  02: rm -rf "./permission_denied"[0m

----------------------------------------------------------------

[37;1m21sh/misc/002-simple-command-line[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell is able to execute a simple command line that contains separators `;`, pipes `|`, and a right redirection `>`.[0m

  Before test:
[38;5;239m  01: rm -rf "./size"
  02: rm -rf "TOKEN201911282055"
  03: echo '^'$(echo TOKEN201911282055_FILE_TOKEN201911282055_STDOUT | wc -c)'$' > "./size"[0m

  STDIN:
[38;5;239m  01: mkdir TOKEN201911282055 ; cd TOKEN201911282055 ; touch TOKEN201911282055_FILE ; ls -1 ; ls | cat | wc -c > TOKEN201911282055_STDOUT ; cat TOKEN201911282055_STDOUT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FILE$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_each_regex_of_file `./size`[0m
[38;5;239m  01: TOKEN201911282055_FILE
  02:       48
  03: [75282] pipe [4 5]
  04: [75282] pipe [6 7]
  05: [75282] pipe [4 5]
  06: [75282] pipe [6 7][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [mkdir] (1)-0
  02: [TOKEN201911282055] (1)-6
  03: [] (7)-24
  04: [cd] (1)-26
  05: [TOKEN201911282055] (1)-29
  06: [] (7)-47
  07: [touch] (1)-49
  08: [TOKEN201911282055_FILE] (1)-55
  09: [] (7)-78
  10: [ls] (1)-80
  11: [-1] (1)-83
  12: [] (7)-86
  13: [ls] (1)-88
  14: [] (6)-91
  15: [cat] (1)-93
  16: [] (6)-97
  17: [wc] (1)-99
  18: [-c] (1)-102
  19: [] (4)-105
  20: |      [TOKEN201911282055_STDOUT] (1)-107
  21: [] (7)-132
  22: [cat] (1)-134
  23: [TOKEN201911282055_STDOUT] (1)-138
  24: [] (39)-162
  25: [75282]prev_pipe -1 next -1[0m

----------------------------------------------------------------

[37;1m21sh/misc/001-no-prompt-in-non-interactive-mode[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A non-interactive Shell should not output a prompt. All the test suite runs the Shell in a non-interactive way so that `isatty()` returns `0`. This test is the only one that take it into account so that you can succeed the rest of the suite.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to have_nb_of_lines 1[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `^TOKEN201911282055$`[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055] (1)-18
  03: [] (39)-35[0m

----------------------------------------------------------------

[37;1m21sh/pipe/005-asynchronous[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the Shell waits for all the commands specified in a pipeline to complete before looking after the next command line. In this test, the first command of the pipeline takes a longer time to complete than the next one, so that the outputs should appear in a reverse order. The Shell should wait for the two processes to complete and then launch the second command line.[0m

  STDIN:
[38;5;239m  01: ./sleep_and_write_on_stderr 1 TOKEN201911282055_FIRST | ./sleep_and_write_on_stderr 0 TOKEN201911282055_SECOND
  02: ./sleep_and_write_on_stderr 0 TOKEN201911282055_LAST[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [75557] pipe [4 5]
  02: [75557] pipe [4 5][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `TOKEN201911282055_SECONDTOKEN201911282055_FIRSTTOKEN201911282055_LAST`[0m
[38;5;239m  01: [./sleep_and_write_on_stderr] (1)-0
  02: [1] (1)-28
  03: [TOKEN201911282055_FIRST] (1)-30
  04: [] (6)-54
  05: [./sleep_and_write_on_stderr] (1)-56
  06: [0] (1)-84
  07: [TOKEN201911282055_SECOND] (1)-86
  08: [] (39)-110
  09: [./sleep_and_write_on_stderr] (1)-111
  10: [0] (1)-139
  11: [TOKEN201911282055_LAST] (1)-141
  12: [] (39)-163
  13: [75557]prev_pipe -1 next -1
  14: TOKEN201911282055_SECONDTOKEN201911282055_LAST[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/pipe/006-exit-status[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the exit status of a pipeline command is the same as the last piped process.[0m

  STDIN:
[38;5;239m  01: ./sleep_and_exit_with_status 1 21 | ./exit_with_status 42[0m

  STDOUT:
[38;5;239m  01: [75684] pipe [4 5]
  02: [75684] pipe [4 5][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./sleep_and_exit_with_status] (1)-0
  02: [1] (1)-29
  03: [21] (1)-31
  04: [] (6)-34
  05: [./exit_with_status] (1)-36
  06: [42] (1)-55
  07: [] (39)-57
  08: [75684]prev_pipe -1 next -1[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1m21sh/pipe/004-without-surrounding-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A pipe character `|` that is not enclosed in double-quotes is interpreted as a pipe separator even if it is closely placed to the next and previous command fields.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055|./read_on_stdin[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055@$`[0m
[38;5;239m  01: TOKEN201911282055@
  02: [75799] pipe [4 5]
  03: [75799] pipe [4 5]
  04: [75799] pipe [4 5][0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055] (1)-18
  03: [] (6)-35
  04: [./read_on_stdin] (1)-36
  05: [] (39)-51
  06: [75799]prev_pipe -1 next -1[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/multiple/001-append-twice-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, each output is appended to different files.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201911282055_stdout_first" >append_file_stdout
  02: ./write_on_stdout "TOKEN201911282055_stderr_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_stdout_second TOKEN201911282055_stderr_second 1>>append_file_stdout 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_stdout_second`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_stderr_second`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_stdout_second] (1)-29
  03: [TOKEN201911282055_stderr_second] (1)-61
  04: [1] (12)-93
  05: |      [append_file_stdout] (1)-96
  06: [2] (12)-115
  07: |      [append_file_stderr] (1)-118
  08: [] (39)-136[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201911282055_stdout_first$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stdout` matching_regex `TOKEN201911282055_stdout_second$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201911282055_stderr_first$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201911282055_stderr_second$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/appending/003-append-stderr-to-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A double right redirection opens the file with the oflag `O_APPEND`, so that its size is not truncated to 0 and output is written at the end of file. If the file does not exist, it is created.
  In this test, the standard error is appended to the file.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout "TOKEN201911282055_first" >append_file_stderr[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_stdout TOKEN201911282055_stderr 2>>append_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_stdout`[0m
[38;5;239m  01: TOKEN201911282055_stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_stderr`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_stdout] (1)-29
  03: [TOKEN201911282055_stderr] (1)-54
  04: [2] (12)-79
  05: |      [append_file_stderr] (1)-82
  06: [] (39)-100[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201911282055_first`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `append_file_stderr` matching_regex `TOKEN201911282055_stderr`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/touching/001-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the right redirection `>` without any command results in the creation of an empty file (same effect as `touch`).[0m

  Before test:
[38;5;239m  01: rm -f "./new_empty_file"[0m

  STDIN:
[38;5;239m  01: >new_empty_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [] (4)-0
  02: |      [new_empty_file] (1)-1
  03: [] (39)-15[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `new_empty_file`[0m
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/003-together-stderr-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard error is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_1 TOKEN201911282055_2 2>new_file_stderr_and_stdout 1>&2[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: TOKEN201911282055_1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_1] (1)-29
  03: [TOKEN201911282055_2] (1)-49
  04: [2] (4)-69
  05: |      [new_file_stderr_and_stdout] (1)-71
  06: [1] (14)-98
  07: |      [2] (1)-101
  08: [] (39)-102[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_1$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/002-together-stdout-first[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `M>&N`, that means `redirect M to where N is redirected`.
  In this test the standard output is specified first.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_1 TOKEN201911282055_2 1>new_file_stderr_and_stdout 2>&1[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_1] (1)-29
  03: [TOKEN201911282055_2] (1)-49
  04: [1] (4)-69
  05: |      [new_file_stderr_and_stdout] (1)-71
  06: [2] (14)-98
  07: |      [1] (1)-101
  08: [] (39)-102
  09: TOKEN201911282055_2[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/004-together[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr_and_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_1 TOKEN201911282055_2 &>new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: TOKEN201911282055_1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_1] (1)-29
  03: [TOKEN201911282055_2] (1)-49
  04: [&] (4)-69
  05: |      [new_file_stderr_and_stdout] (1)-71
  06: [] (39)-97
  07: TOKEN201911282055_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/005-together-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A right redirection can be associated to the twice outputs by using `&>...`, that means `redirect stdout and stderr to ...`.
  In this test, we specify the file name in a separate field.[0m

  Before test:
[38;5;239m  01: rm -f new_file_stderr_and_stdout[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_1 TOKEN201911282055_2 &>	  	new_file_stderr_and_stdout[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: TOKEN201911282055_1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_1] (1)-29
  03: [TOKEN201911282055_2] (1)-49
  04: [&] (4)-69
  05: |      [new_file_stderr_and_stdout] (1)-75
  06: [] (39)-101
  07: TOKEN201911282055_2[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_1$`[0m
[31m[38;5;160m  FAILURE    expected_to create_file `new_file_stderr_and_stdout` matching_regex `TOKEN201911282055_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/multiple/001-separately[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  A different right redirection may be specified for each output.[0m

  Before test:
[38;5;239m  01: rm -f "new_file_stderr"
  02: rm -f "new_file_stdout"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_1 TOKEN201911282055_2 1>new_file_stdout 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_1`[0m
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_2`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_1] (1)-29
  03: [TOKEN201911282055_2] (1)-49
  04: [1] (4)-69
  05: |      [new_file_stdout] (1)-71
  06: [2] (4)-87
  07: |      [new_file_stderr] (1)-89
  08: [] (39)-104[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file_stdout` matching_regex `TOKEN201911282055_1$`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file_stderr` matching_regex `TOKEN201911282055_2$`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/001-creates-file-if-not-exits[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The right redirection `>` opens the file with the oflag `O_CREAT` so that the file is created if it does not exists.[0m

  Before test:
[38;5;239m  01: rm -f new_file[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055 >new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055] (1)-18
  03: [] (4)-36
  04: |      [new_file] (1)-37
  05: [] (39)-45[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file` matching_regex `TOKEN201911282055`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file` with_nb_of_lines `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/stderr/001-works[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that redirecting the standard error STDERR to a file `2>` works. In this test, the binary writes a token on each standard and error output, so that only the STDOUT is outputted and STDERR is written in a file `new_file_stderr`.[0m

  Before test:
[38;5;239m  01: rm -f "./new_file_stderr"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_STDOUT TOKEN201911282055_STDERR 2>new_file_stderr[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_STDOUT`[0m
[38;5;239m  01: TOKEN201911282055_STDOUT[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_STDERR`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_STDOUT] (1)-29
  03: [TOKEN201911282055_STDERR] (1)-54
  04: [2] (4)-79
  05: |      [new_file_stderr] (1)-81
  06: [] (39)-96[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file_stderr` matching_regex `TOKEN201911282055_STDERR`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file_stderr` with_nb_of_lines 1[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/003-whitespace-before-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The file name for a right redirection can be specified closely to the character `>` or in a separated field.[0m

  Before test:
[38;5;239m  01: rm -f "new_file"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055 > new_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055] (1)-18
  03: [] (4)-36
  04: |      [new_file] (1)-38
  05: [] (39)-46[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file` matching_regex `TOKEN201911282055`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `new_file` with_nb_of_lines `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/truncating/002-truncates-file-if-exists[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The right redirection `>` opens the file with the oflag `O_TRUNC` so that the file size is truncated to 0 before writing in it.[0m

  Before test:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055_first >truncated_file[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055_second >truncated_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex TOKEN201911282055_second[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055_second] (1)-18
  03: [] (4)-43
  04: |      [truncated_file] (1)-44
  05: [] (39)-58[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to create_file `truncated_file` matching_regex `TOKEN201911282055_second`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `truncated_file` not_matching_regex `TOKEN201911282055_first`[0m
[31m[38;5;34m  SUCCESS    expected_to create_file `truncated_file` with_nb_of_lines `1`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/004-close-twice-outputs[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard output and the standard error has the same behavior as redirecting to `/dev/null` (e.g. `ls 1>/dev/null 2>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_stdout TOKEN201911282055_stderr 1>&- 2>&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_stdout`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_stderr`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_stdout] (1)-29
  03: [TOKEN201911282055_stderr] (1)-54
  04: [1] (14)-79
  05: |      [-] (1)-82
  06: [2] (14)-84
  07: |      [-] (1)-87
  08: [] (39)-88[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/001-close-default-output[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Not specifying which output to close makes the default standard output to be closed (`>&-` is similar to `1>&-`).
  Closing the standard output has the same behavior as redirecting to `/dev/null`.[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_stdout TOKEN201911282055_stderr >&-[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_stdout`[0m
[38;5;239m  01: TOKEN201911282055_stdout[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_stderr`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_stdout] (1)-29
  03: [TOKEN201911282055_stderr] (1)-54
  04: [] (14)-79
  05: |      [-] (1)-81
  06: [] (39)-82
  07: TOKEN201911282055_stderr[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/outputs/closing/003-close-stderr[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  Closing the standard error has the same behavior as redirecting to `/dev/null` (e.g. `ls 2>/dev/null`).[0m

  Before test:
[38;5;239m  01: rm -f "-"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout_and_stderr TOKEN201911282055_stdout TOKEN201911282055_stderr 2>&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_stdout`[0m
[38;5;239m  01: TOKEN201911282055_stdout[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `TOKEN201911282055_stderr`[0m
[38;5;239m  01: [./write_on_stdout_and_stderr] (1)-0
  02: [TOKEN201911282055_stdout] (1)-29
  03: [TOKEN201911282055_stderr] (1)-54
  04: [2] (14)-79
  05: |      [-] (1)-82
  06: [] (39)-83[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not create_file `-`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/002-filename[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201911282055_LINE_1" > simple_text_file
  02: echo "TOKEN201911282055_LINE_2" >> simple_text_file
  03: echo "TOKEN201911282055_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <simple_text_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_2`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_3`[0m
[38;5;239m  01: TOKEN201911282055_LINE_1@
  02: TOKEN201911282055_LINE_2@
  03: TOKEN201911282055_LINE_3@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./read_on_stdin] (1)-0
  02: [] (3)-16
  03: |      [simple_text_file] (1)-17
  04: [] (39)-33[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/003-filename-with-whitespaces[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a file path `simple_text_file` within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.
  The file path is specified in a separated field.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201911282055_LINE_1" > simple_text_file
  02: echo "TOKEN201911282055_LINE_2" >> simple_text_file
  03: echo "TOKEN201911282055_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin < 	 simple_text_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_2`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_3`[0m
[38;5;239m  01: TOKEN201911282055_LINE_1@
  02: TOKEN201911282055_LINE_2@
  03: TOKEN201911282055_LINE_3@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./read_on_stdin] (1)-0
  02: [] (3)-16
  03: |      [simple_text_file] (1)-20
  04: [] (39)-36[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/005-no-such-file[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using a wrong path within the STDIN redirection `<` results in an error.[0m

  Before test:
[38;5;239m  01: rm -f "./no_such_file"[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <no_such_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Nn]o such file or directory`[0m
[38;5;239m  01: [./read_on_stdin] (1)-0
  02: [] (3)-16
  03: |      [no_such_file] (1)-17
  04: [] (39)-29[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/004-absolute-path[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using an absolute path to a file within the STDIN redirection `<` results in the ability of the child process to read on this file through the file descriptor STDIN.[0m

  Before test:
[38;5;239m  01: echo "TOKEN201911282055_LINE_1" > simple_text_file
  02: echo "TOKEN201911282055_LINE_2" >> simple_text_file
  03: echo "TOKEN201911282055_LINE_3" >> simple_text_file[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin </Users/Jerry/Desktop/42ShellTester/tmp/simple_text_file[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_1`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_2`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_LINE_3`[0m
[38;5;239m  01: TOKEN201911282055_LINE_1@
  02: TOKEN201911282055_LINE_2@
  03: TOKEN201911282055_LINE_3@[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./read_on_stdin] (1)-0
  02: [] (3)-16
  03: |      [/Users/Jerry/Desktop/42ShellTester/tmp/simple_text_file] (1)-17
  04: [] (39)-72[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1m21sh/redirections/inputs/001-close-stdin[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the closing operator `&-` within the STDIN redirection `<` results in a closed standard input, so that `read(2)` results in a read error.[0m

  Before test:
[38;5;239m  01: rm -f ./read_on_stdin
  02: gcc -Wall -Werror -Wextra "/Users/Jerry/Desktop/42ShellTester/support/read-on-stdin/main.c" -o ./read_on_stdin[0m

  STDIN:
[38;5;239m  01: ./read_on_stdin <&-[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to match_regex `STDIN READ ERROR$`[0m
[38;5;239m  01: [./read_on_stdin] (1)-0
  02: [] (13)-16
  03: |      [-] (1)-18
  04: [] (39)-19[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `1`[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/002-n-commands-sequentially[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the semicolon separator `;` makes multiple inline commands to be executed sequentially.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055_FIRST ; ./write_on_stdout TOKEN201911282055_SECOND ; ./write_on_stdout TOKEN201911282055_THIRD ; ./write_on_stdout TOKEN201911282055_FOURTH[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FIRST$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SECOND$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_THIRD$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FOURTH$`[0m
[38;5;239m  01: TOKEN201911282055_FIRST
  02: TOKEN201911282055_SECOND
  03: TOKEN201911282055_THIRD
  04: TOKEN201911282055_FOURTH[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055_FIRST] (1)-18
  03: [] (7)-42
  04: [./write_on_stdout] (1)-44
  05: [TOKEN201911282055_SECOND] (1)-62
  06: [] (7)-87
  07: [./write_on_stdout] (1)-89
  08: [TOKEN201911282055_THIRD] (1)-107
  09: [] (7)-131
  10: [./write_on_stdout] (1)-133
  11: [TOKEN201911282055_FOURTH] (1)-151
  12: [] (39)-175[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/001-two-commands-sequentially[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the semicolon separator `;` makes two inline commands to be executed sequentially.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055_FIRST ; ./write_on_stdout TOKEN201911282055_SECOND[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FIRST$`[0m
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SECOND$`[0m
[38;5;239m  01: TOKEN201911282055_FIRST
  02: TOKEN201911282055_SECOND[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055_FIRST] (1)-18
  03: [] (7)-42
  04: [./write_on_stdout] (1)-44
  05: [TOKEN201911282055_SECOND] (1)-62
  06: [] (39)-86[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/004-parse-error-empty-command[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the semicolon separator `;` without any command results in error.[0m

  STDIN:
[38;5;239m  01: ;[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Pp]arse|[Ss]yntax) error`[0m
[38;5;239m  01: [] (7)-0
  02: [] (39)-1[0m

----------------------------------------------------------------

[37;1m21sh/separators/semicolon/003-parse-error-empty-inline-command[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the simicolon separator `;` with empty commands results in error.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055 ; ; ./exit_with_status 42[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `([Ss]yntax|[Pp]arse) error`[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055] (1)-18
  03: [] (7)-36
  04: [] (7)-38
  05: [./exit_with_status] (1)-40
  06: [42] (1)-59
  07: [] (39)-61[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;160m  FAILURE    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/006-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 || ./write_on_stderr TOKEN201911282055_ERROR 21 && ./write_on_stdout TOKEN201911282055_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUCCESS`[0m
[38;5;239m  01: TOKEN201911282055_SUCCESS[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [0] (1)-19
  03: [] (9)-21
  04: [./write_on_stderr] (1)-24
  05: [TOKEN201911282055_ERROR] (1)-42
  06: [21] (1)-66
  07: [] (8)-69
  08: [./write_on_stdout] (1)-72
  09: [TOKEN201911282055_SUCCESS] (1)-90
  10: [] (39)-115[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/004-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stderr TOKEN201911282055_ERROR 21 && ./write_on_stdout TOKEN201911282055_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_ERROR`[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (9)-22
  04: [./write_on_stderr] (1)-25
  05: [TOKEN201911282055_ERROR] (1)-43
  06: [21] (1)-67
  07: [] (8)-70
  08: [./write_on_stdout] (1)-73
  09: [TOKEN201911282055_SUCCESS] (1)-91
  10: [] (39)-116
  11: TOKEN201911282055_ERROR[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/003-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./write_on_stdout TOKEN201911282055_SUCCESS || ./write_on_stderr TOKEN201911282055_ERROR 21[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUCCESS`[0m
[38;5;239m  01: TOKEN201911282055_SUCCESS[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [0] (1)-19
  03: [] (8)-21
  04: [./write_on_stdout] (1)-24
  05: [TOKEN201911282055_SUCCESS] (1)-42
  06: [] (9)-68
  07: [./write_on_stderr] (1)-71
  08: [TOKEN201911282055_ERROR] (1)-89
  09: [21] (1)-113
  10: [] (39)-115[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/001-and-or[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators AND `&&` and OR `||` applies the good logic: The second command is executed if the first one succeeds, and the third command is executed if the second one fails or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stderr TOKEN201911282055_ERROR 21 || ./write_on_stdout TOKEN201911282055_SUCCESS[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUCCESS`[0m
[38;5;239m  01: TOKEN201911282055_SUCCESS[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (8)-22
  04: [./write_on_stderr] (1)-25
  05: [TOKEN201911282055_ERROR] (1)-43
  06: [21] (1)-67
  07: [] (9)-70
  08: [./write_on_stdout] (1)-73
  09: [TOKEN201911282055_SUCCESS] (1)-91
  10: [] (39)-116[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/mixed/005-or-and[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the two separators OR `||` and AND `&&` applies the good logic: The second command is executed if the first one fails, and the third command is executed if the second one succeeds or is not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201911282055_SUCCESS && ./write_on_stderr TOKEN201911282055_ERROR 21[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_SUCCESS`[0m
[38;5;239m  01: TOKEN201911282055_SUCCESS[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_ERROR`[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (9)-22
  04: [./write_on_stdout] (1)-25
  05: [TOKEN201911282055_SUCCESS] (1)-43
  06: [] (8)-69
  07: [./write_on_stderr] (1)-72
  08: [TOKEN201911282055_ERROR] (1)-90
  09: [21] (1)-114
  10: [] (39)-116
  11: TOKEN201911282055_ERROR[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `21`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/001-run-twice[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the AND operator `&&` works with two valid commands.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055_LEFT && ./write_on_stdout TOKEN201911282055_RIGHT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might match_regex `TOKEN201911282055_LEFT`[0m
[31m[38;5;34m  SUCCESS    might match_regex `TOKEN201911282055_RIGHT`[0m
[38;5;239m  01: TOKEN201911282055_LEFT
  02: TOKEN201911282055_RIGHT[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055_LEFT] (1)-18
  03: [] (8)-41
  04: [./write_on_stdout] (1)-44
  05: [TOKEN201911282055_RIGHT] (1)-62
  06: [] (39)-85[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/003-run-until-failing[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the AND separator `&&` with chained commands results in the execution of all until the first fail.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./exit_with_status 0 && ./write_on_stdout TOKEN201911282055_FIRST && ./exit_with_status 42 && ./write_on_stdout TOKEN201911282055_SECOND[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_SECOND`[0m
[38;5;239m  01: TOKEN201911282055_FIRST[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [0] (1)-19
  03: [] (8)-21
  04: [./exit_with_status] (1)-24
  05: [0] (1)-43
  06: [] (8)-45
  07: [./exit_with_status] (1)-48
  08: [0] (1)-67
  09: [] (8)-69
  10: [./exit_with_status] (1)-72
  11: [0] (1)-91
  12: [] (8)-93
  13: [./write_on_stdout] (1)-96
  14: [TOKEN201911282055_FIRST] (1)-114
  15: [] (8)-138
  16: [./exit_with_status] (1)-141
  17: [42] (1)-160
  18: [] (8)-163
  19: [./write_on_stdout] (1)-166
  20: [TOKEN201911282055_SECOND] (1)-184
  21: [] (39)-208[0m

  MISC:
[31m[38;5;160m  FAILURE    expected_to exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/and/002-do-not-run-second[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the AND operator `&&` makes the right command to not be executed if the left one exits with an error status code.
  The Shell should exit with the status code of the executed command.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 && ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might_not match_regex TOKEN201911282055[0m
[31m[38;5;34m  SUCCESS    might be_empty[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (8)-22
  04: [./write_on_stdout] (1)-25
  05: [TOKEN201911282055] (1)-43
  06: [] (39)-60[0m

  MISC:
[31m[1;33m  WARNING    might exit_with_status `42`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/003-run-until-succeeding[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that using the OR separator `||` with chained commands results in the execution of all until the first succeed. The remaining commands are not executed.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 1 || ./exit_with_status 2 || ./exit_with_status 3 || ./exit_with_status 4 || ./write_on_stdout TOKEN201911282055_FIRST || ./write_on_stdout TOKEN201911282055_SECOND[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    expected_to match_regex `TOKEN201911282055_FIRST`[0m
[31m[38;5;34m  SUCCESS    expected_to_not match_regex `TOKEN201911282055_SECOND`[0m
[38;5;239m  01: TOKEN201911282055_FIRST[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [1] (1)-19
  03: [] (9)-21
  04: [./exit_with_status] (1)-24
  05: [2] (1)-43
  06: [] (9)-45
  07: [./exit_with_status] (1)-48
  08: [3] (1)-67
  09: [] (9)-69
  10: [./exit_with_status] (1)-72
  11: [4] (1)-91
  12: [] (9)-93
  13: [./write_on_stdout] (1)-96
  14: [TOKEN201911282055_FIRST] (1)-114
  15: [] (9)-138
  16: [./write_on_stdout] (1)-141
  17: [TOKEN201911282055_SECOND] (1)-159
  18: [] (39)-183[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/002-run-second-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to be executed if the left one exits with an error status code.[0m

  STDIN:
[38;5;239m  01: ./exit_with_status 42 || ./write_on_stdout TOKEN201911282055[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might match_regex `TOKEN201911282055`[0m
[38;5;239m  01: TOKEN201911282055[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: [./exit_with_status] (1)-0
  02: [42] (1)-19
  03: [] (9)-22
  04: [./write_on_stdout] (1)-25
  05: [TOKEN201911282055] (1)-43
  06: [] (39)-60[0m

  MISC:
[31m[38;5;34m  SUCCESS    might exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/separators/or/001-run-first-only[0m [31m[1;33m(WARNING)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the OR operator `||` makes the right command to not be executed if the left one exits with a success status.[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout TOKEN201911282055_LEFT || ./write_on_stdout TOKEN201911282055_RIGHT[0m

  STDOUT:
[31m[38;5;34m  SUCCESS    might match_regex TOKEN201911282055_LEFT[0m
[31m[38;5;34m  SUCCESS    might_not match_regex TOKEN201911282055_RIGHT[0m
[38;5;239m  01: TOKEN201911282055_LEFT[0m

  STDERR:
[31m[1;33m  WARNING    might be_empty[0m
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [TOKEN201911282055_LEFT] (1)-18
  03: [] (9)-41
  04: [./write_on_stdout] (1)-44
  05: [TOKEN201911282055_RIGHT] (1)-62
  06: [] (39)-85[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/003-modifies-PATH-only[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: rm -rf "temporary_directory"
  02: mkdir -p "temporary_directory"
  03: cd "temporary_directory"[0m

  STDIN:
[38;5;239m  01: PATH=.. write_on_stdout TOKEN201911282055
  02: exit_with_status 42[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055$`[0m
[38;5;239m  (no output)[0m

  STDERR:
[31m[38;5;34m  SUCCESS    expected_to_not be_empty[0m
[31m[1;33m  WARNING    might match_regex `[Cc]ommand not found`[0m
[38;5;239m  01: ./lib/main.sh: line 102: ../../42sh/42sh: No such file or directory[0m

  MISC:
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `42`[0m
[31m[38;5;34m  SUCCESS    expected_to_not exit_with_status `0`[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/002-modifies-child-environment-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_VARIABLE1=TOKEN201911282055_VALUE1 TOKEN201911282055_VARIABLE2=TOKEN201911282055_VALUE2 TOKEN201911282055_VARIABLE3=TOKEN201911282055_VALUE3 ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VARIABLE1=TOKEN201911282055_VALUE1$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VARIABLE2=TOKEN201911282055_VALUE2$` once[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VARIABLE3=TOKEN201911282055_VALUE3$` once[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2
  06: ------------------------------
  07: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  08: SHLVL=1
  09: ------------------------------
  10: TOTAL ENVIRONMENT VARIABLES: 2
  11: assigns: TOKEN201911282055_VARIABLE3 TOKEN201911282055_VALUE3
  12: assigns: TOKEN201911282055_VARIABLE2 TOKEN201911282055_VALUE2
  13: assigns: TOKEN201911282055_VARIABLE1 TOKEN201911282055_VALUE1[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_VARIABLE1=TOKEN201911282055_VALUE1] (1)-0
  02: [TOKEN201911282055_VARIABLE2=TOKEN201911282055_VALUE2] (1)-53
  03: [TOKEN201911282055_VARIABLE3=TOKEN201911282055_VALUE3] (1)-106
  04: [./display_env] (1)-159
  05: [] (39)-172
  06: [./display_env] (1)-173
  07: [] (39)-186[0m

----------------------------------------------------------------

[37;1mbonuses/inline-environment-variable/001-modifies-child-environment-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that a binary may have its environment to be modified by appending variables inline.[0m

  Before test:
[38;5;239m  01: unset "TOKEN201911282055_VARIABLE"[0m

  STDIN:
[38;5;239m  01: TOKEN201911282055_VARIABLE=TOKEN201911282055_VALUE ./display_env
  02: ./display_env[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to match_regex `^TOKEN201911282055_VARIABLE=TOKEN201911282055_VALUE$` once[0m
[38;5;239m  01: ------------------------------
  02: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  03: SHLVL=1
  04: ------------------------------
  05: TOTAL ENVIRONMENT VARIABLES: 2
  06: ------------------------------
  07: PWD=/Users/Jerry/Desktop/42ShellTester/tmp
  08: SHLVL=1
  09: ------------------------------
  10: TOTAL ENVIRONMENT VARIABLES: 2
  11: assigns: TOKEN201911282055_VARIABLE TOKEN201911282055_VALUE[0m

  STDERR:
[31m[38;5;160m  FAILURE    expected_to be_empty[0m
[38;5;239m  01: [TOKEN201911282055_VARIABLE=TOKEN201911282055_VALUE] (1)-0
  02: [./display_env] (1)-51
  03: [] (39)-64
  04: [./display_env] (1)-65
  05: [] (39)-78[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/002-expanded-with-HOME-2[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` followed by the symbol slash `/` may be expanded with the environment variable HOME.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~/TOKEN201911282055_SUBDIRECTORY[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `~`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/TOKEN201911282055/TOKEN201911282055_SUBDIRECTORY$`[0m
[38;5;239m  01: ~/TOKEN201911282055_SUBDIRECTORY[0m

  STDERR:
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [~/TOKEN201911282055_SUBDIRECTORY] (1)-18
  03: [] (39)-50[0m

----------------------------------------------------------------

[37;1mbonuses/tilde-expansion/001-expanded-with-HOME-1[0m [31m[38;5;160m(FAILED)[0m

  Description:
[38;5;239m  The purpose of this test is to check that the symbol tilde `~` may be expanded with the environment variable HOME.[0m

  Before test:
[38;5;239m  01: export "HOME=/TOKEN201911282055"[0m

  STDIN:
[38;5;239m  01: ./write_on_stdout ~[0m

  STDOUT:
[31m[38;5;160m  FAILURE    expected_to_not match_regex `~`[0m
[31m[38;5;160m  FAILURE    expected_to match_regex `^/TOKEN201911282055$`[0m
[38;5;239m  01: ~[0m

  STDERR:
[38;5;239m  01: [./write_on_stdout] (1)-0
  02: [~] (1)-18
  03: [] (39)-19[0m

Total tests: 281
Total failed tests: 226
Total pending tests: 3
